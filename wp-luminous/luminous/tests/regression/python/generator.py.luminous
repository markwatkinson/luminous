<COMMENT>#!/usr/bin/env python</COMMENT>

<KEYWORD>import</KEYWORD> <USER_FUNCTION>random</USER_FUNCTION> 

<KEYWORD>import</KEYWORD> <USER_FUNCTION>syllables</USER_FUNCTION>

<KEYWORD>class</KEYWORD> <USER_FUNCTION>PasswordGenerator</USER_FUNCTION><OPERATOR>:</OPERATOR>

  <COMMENT>"""</COMMENT>
<COMMENT>    m: a markov model instance</COMMENT>
<COMMENT>  """</COMMENT>
  <KEYWORD>def</KEYWORD> <USER_FUNCTION>__init__</USER_FUNCTION><OPERATOR>(</OPERATOR><VALUE>self</VALUE><OPERATOR>,</OPERATOR> m<OPERATOR>,</OPERATOR> lookbehind_chars<OPERATOR>=</OPERATOR><NUMERIC>2</NUMERIC><OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>
    
    <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>__m</OO> <OPERATOR>=</OPERATOR> m
    <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>__lookbehind</OO> <OPERATOR>=</OPERATOR> lookbehind_chars
    <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>punc</OO> <OPERATOR>=</OPERATOR>  <STRING>'_-!.;,#?'</STRING>
    <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>char_number_mappings</OO> <OPERATOR>=</OPERATOR>  <OPERATOR>{</OPERATOR><STRING>'a'</STRING><OPERATOR>:</OPERATOR> <STRING>'4@&amp;'</STRING><OPERATOR>,</OPERATOR> <STRING>'e'</STRING><OPERATOR>:</OPERATOR> <STRING>'3'</STRING><OPERATOR>,</OPERATOR> <STRING>'l'</STRING><OPERATOR>:</OPERATOR> <STRING>'1!'</STRING><OPERATOR>,</OPERATOR> <STRING>'s'</STRING><OPERATOR>:</OPERATOR> <STRING>'$5'</STRING><OPERATOR>,</OPERATOR> 
      <STRING>'t'</STRING><OPERATOR>:</OPERATOR> <STRING>'+'</STRING><OPERATOR>,</OPERATOR> <STRING>'o'</STRING><OPERATOR>:</OPERATOR><STRING>'0*'</STRING><OPERATOR>,</OPERATOR> <STRING>'i'</STRING><OPERATOR>:</OPERATOR><STRING>'!'</STRING><OPERATOR>}</OPERATOR>
    
    <COMMENT># probability of case mangling any alphanumeric char</COMMENT>
    <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>case_mangling_p</OO> <OPERATOR>=</OPERATOR> <NUMERIC>0.25</NUMERIC>
    
    <COMMENT># probability of converting any given char to a number </COMMENT>
    <COMMENT># (present in char_number_mappings)</COMMENT>
    <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>char_mangling_p</OO> <OPERATOR>=</OPERATOR> <NUMERIC>0.5</NUMERIC> 
    
    <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>mangle_chars</OO> <OPERATOR>=</OPERATOR> <VALUE>True</VALUE>
    <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>mangle_punc</OO> <OPERATOR>=</OPERATOR> <VALUE>True</VALUE>
    <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>mangle_case</OO> <OPERATOR>=</OPERATOR> <VALUE>True</VALUE>
    

  <KEYWORD>def</KEYWORD> <USER_FUNCTION>generate_base_phrase</USER_FUNCTION><OPERATOR>(</OPERATOR><VALUE>self</VALUE><OPERATOR>,</OPERATOR> length<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>    
    alpha <OPERATOR>=</OPERATOR> <STRING>'abcdefghijklmnopqrstuvwxyz'</STRING>
    string <OPERATOR>=</OPERATOR>  <STRING>' '</STRING> <OPERATOR>+</OPERATOR> <OBJ>random</OBJ><OPERATOR>.</OPERATOR><OO>choice</OO><OPERATOR>(</OPERATOR>alpha<OPERATOR>)</OPERATOR>
    <KEYWORD>for</KEYWORD> i <KEYWORD>in</KEYWORD> <FUNCTION>xrange</FUNCTION><OPERATOR>(</OPERATOR><NUMERIC>0</NUMERIC><OPERATOR>,</OPERATOR> length<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>

      j<OPERATOR>=</OPERATOR><FUNCTION>len</FUNCTION><OPERATOR>(</OPERATOR>string<OPERATOR>)</OPERATOR>
      
      lb <OPERATOR>=</OPERATOR> <FUNCTION>max</FUNCTION><OPERATOR>(</OPERATOR><NUMERIC>0</NUMERIC><OPERATOR>,</OPERATOR> j<OPERATOR>-</OPERATOR><OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>__lookbehind</OO><OPERATOR>)</OPERATOR>
      inc <OPERATOR>=</OPERATOR> <VALUE>False</VALUE>
      <KEYWORD>while</KEYWORD> lb <OPERATOR>&lt;</OPERATOR> j <KEYWORD>and</KEYWORD> <KEYWORD>not</KEYWORD> inc<OPERATOR>:</OPERATOR>
        c <OPERATOR>=</OPERATOR> <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>__m</OO><OPERATOR>.</OPERATOR><OO>get_transition</OO><OPERATOR>(</OPERATOR>string<OPERATOR>[</OPERATOR>lb<OPERATOR>:</OPERATOR>j<OPERATOR>]</OPERATOR><OPERATOR>,</OPERATOR> <OBJ>random</OBJ><OPERATOR>.</OPERATOR><OO>random</OO><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR><OPERATOR>,</OPERATOR> 
          forbidden<OPERATOR>=</OPERATOR><STRING>' '</STRING><OPERATOR>,</OPERATOR> min_transitions<OPERATOR>=</OPERATOR><NUMERIC>3</NUMERIC><OPERATOR>)</OPERATOR>
        
        <KEYWORD>if</KEYWORD> c <KEYWORD>is</KEYWORD> <KEYWORD>not</KEYWORD> <VALUE>None</VALUE> <KEYWORD>and</KEYWORD> <OBJ>c</OBJ><OPERATOR>.</OPERATOR><OO>isspace</OO><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR> <KEYWORD>and</KEYWORD> <OBJ>random</OBJ><OPERATOR>.</OPERATOR><OO>random</OO><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR> <OPERATOR>&gt;</OPERATOR> <NUMERIC>0.5</NUMERIC><OPERATOR>:</OPERATOR>
          <KEYWORD>continue</KEYWORD>
        
        <KEYWORD>if</KEYWORD> c <KEYWORD>is</KEYWORD> <KEYWORD>not</KEYWORD> <VALUE>None</VALUE><OPERATOR>:</OPERATOR>          
          string<OPERATOR>+=</OPERATOR>c
          inc <OPERATOR>=</OPERATOR> <VALUE>True</VALUE>
          
        lb<OPERATOR>+=</OPERATOR><NUMERIC>1</NUMERIC>
      <COMMENT># no transitions  </COMMENT>
      <KEYWORD>if</KEYWORD> <KEYWORD>not</KEYWORD> inc<OPERATOR>:</OPERATOR>
        string <OPERATOR>+=</OPERATOR> <OBJ>random</OBJ><OPERATOR>.</OPERATOR><OO>choice</OO><OPERATOR>(</OPERATOR>alpha<OPERATOR>)</OPERATOR>
      <KEYWORD>if</KEYWORD> <FUNCTION>len</FUNCTION><OPERATOR>(</OPERATOR>string<OPERATOR>)</OPERATOR> <OPERATOR>&gt;</OPERATOR> length<OPERATOR>:</OPERATOR> <KEYWORD>break</KEYWORD>

    <KEYWORD>return</KEYWORD> string<OPERATOR>[</OPERATOR><NUMERIC>1</NUMERIC><OPERATOR>:</OPERATOR><OPERATOR>]</OPERATOR>
  
  
  
  <KEYWORD>def</KEYWORD> <USER_FUNCTION>__mangle_punctuation</USER_FUNCTION><OPERATOR>(</OPERATOR><VALUE>self</VALUE><OPERATOR>,</OPERATOR> phrase<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>
    
    s <OPERATOR>=</OPERATOR> <OBJ>syllables</OBJ><OPERATOR>.</OPERATOR><OO>split_syllables</OO><OPERATOR>(</OPERATOR>phrase<OPERATOR>)</OPERATOR>
    s <OPERATOR>=</OPERATOR> <OPERATOR>[</OPERATOR>s_ <OPERATOR>+</OPERATOR> <OPERATOR>(</OPERATOR><STRING>''</STRING> <KEYWORD>if</KEYWORD> <OBJ>random</OBJ><OPERATOR>.</OPERATOR><OO>randint</OO><OPERATOR>(</OPERATOR><NUMERIC>0</NUMERIC><OPERATOR>,</OPERATOR> <NUMERIC>4</NUMERIC><OPERATOR>)</OPERATOR> <OPERATOR>==</OPERATOR> <NUMERIC>0</NUMERIC> 
      <KEYWORD>else</KEYWORD> <OBJ>random</OBJ><OPERATOR>.</OPERATOR><OO>choice</OO><OPERATOR>(</OPERATOR><OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>punc</OO><OPERATOR>)</OPERATOR><OPERATOR>)</OPERATOR> 
      <KEYWORD>for</KEYWORD> s_ <KEYWORD>in</KEYWORD> s<OPERATOR>]</OPERATOR>
    <KEYWORD>return</KEYWORD> <STRING>''</STRING><OPERATOR>.</OPERATOR><OO>join</OO><OPERATOR>(</OPERATOR>s<OPERATOR>)</OPERATOR>
      
  
  <KEYWORD>def</KEYWORD> <USER_FUNCTION>__mangle_spaces_to_punc</USER_FUNCTION><OPERATOR>(</OPERATOR><VALUE>self</VALUE><OPERATOR>,</OPERATOR> phrase<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>    
    <KEYWORD>assert</KEYWORD><OPERATOR>(</OPERATOR><OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>punc</OO><OPERATOR>.</OPERATOR><OO>count</OO><OPERATOR>(</OPERATOR><STRING>' '</STRING><OPERATOR>)</OPERATOR> <OPERATOR>==</OPERATOR> <NUMERIC>0</NUMERIC><OPERATOR>)</OPERATOR> <COMMENT># infinite loop condition</COMMENT>
    <KEYWORD>while</KEYWORD> <NUMERIC>1</NUMERIC><OPERATOR>:</OPERATOR>
      s <OPERATOR>=</OPERATOR> <OBJ>phrase</OBJ><OPERATOR>.</OPERATOR><OO>replace</OO><OPERATOR>(</OPERATOR><STRING>' '</STRING><OPERATOR>,</OPERATOR> <OBJ>random</OBJ><OPERATOR>.</OPERATOR><OO>choice</OO><OPERATOR>(</OPERATOR><OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>punc</OO><OPERATOR>)</OPERATOR><OPERATOR>,</OPERATOR> <NUMERIC>1</NUMERIC><OPERATOR>)</OPERATOR>
      <KEYWORD>if</KEYWORD> s <OPERATOR>==</OPERATOR> phrase<OPERATOR>:</OPERATOR> <KEYWORD>break</KEYWORD>
      phrase <OPERATOR>=</OPERATOR> s
    <KEYWORD>return</KEYWORD> phrase
  
  <KEYWORD>def</KEYWORD> <USER_FUNCTION>__mangle_char_to_num</USER_FUNCTION><OPERATOR>(</OPERATOR><VALUE>self</VALUE><OPERATOR>,</OPERATOR> phrase<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>    
    <KEYWORD>for</KEYWORD> i<OPERATOR>,</OPERATOR> c <KEYWORD>in</KEYWORD> <FUNCTION>enumerate</FUNCTION><OPERATOR>(</OPERATOR>phrase<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>
      <KEYWORD>if</KEYWORD> <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>char_number_mappings</OO><OPERATOR>.</OPERATOR><OO>get</OO><OPERATOR>(</OPERATOR>c<OPERATOR>,</OPERATOR> <VALUE>None</VALUE><OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>
        <KEYWORD>if</KEYWORD> <OBJ>random</OBJ><OPERATOR>.</OPERATOR><OO>random</OO><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR> <OPERATOR>&lt;</OPERATOR>  <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>char_mangling_p</OO><OPERATOR>:</OPERATOR>
          phrase <OPERATOR>=</OPERATOR> phrase<OPERATOR>[</OPERATOR><OPERATOR>:</OPERATOR>i<OPERATOR>]</OPERATOR> <OPERATOR>+</OPERATOR> <OPERATOR>\</OPERATOR>
            <OBJ>random</OBJ><OPERATOR>.</OPERATOR><OO>choice</OO><OPERATOR>(</OPERATOR><OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>char_number_mappings</OO><OPERATOR>.</OPERATOR><OO>get</OO><OPERATOR>(</OPERATOR>c<OPERATOR>)</OPERATOR><OPERATOR>)</OPERATOR> <OPERATOR>+</OPERATOR> <OPERATOR>\</OPERATOR>
            phrase<OPERATOR>[</OPERATOR>i<OPERATOR>+</OPERATOR><NUMERIC>1</NUMERIC><OPERATOR>:</OPERATOR><OPERATOR>]</OPERATOR>
    <KEYWORD>return</KEYWORD> phrase
  
  <KEYWORD>def</KEYWORD> <USER_FUNCTION>__mangle_case</USER_FUNCTION><OPERATOR>(</OPERATOR><VALUE>self</VALUE><OPERATOR>,</OPERATOR> phrase<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>    
    <KEYWORD>for</KEYWORD> i<OPERATOR>,</OPERATOR> c <KEYWORD>in</KEYWORD> <FUNCTION>enumerate</FUNCTION><OPERATOR>(</OPERATOR>phrase<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>      
      <KEYWORD>if</KEYWORD> <OBJ>c</OBJ><OPERATOR>.</OPERATOR><OO>isalpha</OO><OPERATOR>:</OPERATOR>
        <KEYWORD>if</KEYWORD> <OBJ>c</OBJ><OPERATOR>.</OPERATOR><OO>isupper</OO><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR> <KEYWORD>and</KEYWORD> <OBJ>random</OBJ><OPERATOR>.</OPERATOR><OO>random</OO><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR> <OPERATOR>&lt;</OPERATOR>  <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>case_mangling_p</OO><OPERATOR>:</OPERATOR>
          phrase <OPERATOR>=</OPERATOR> phrase<OPERATOR>[</OPERATOR><OPERATOR>:</OPERATOR>i<OPERATOR>]</OPERATOR> <OPERATOR>+</OPERATOR> <OBJ>c</OBJ><OPERATOR>.</OPERATOR><OO>lower</OO><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR> <OPERATOR>+</OPERATOR> phrase<OPERATOR>[</OPERATOR>i<OPERATOR>+</OPERATOR><NUMERIC>1</NUMERIC><OPERATOR>:</OPERATOR><OPERATOR>]</OPERATOR>
        <KEYWORD>if</KEYWORD> <OBJ>c</OBJ><OPERATOR>.</OPERATOR><OO>lower</OO><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR> <KEYWORD>and</KEYWORD> <OBJ>random</OBJ><OPERATOR>.</OPERATOR><OO>random</OO><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR> <OPERATOR>&lt;</OPERATOR> <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>case_mangling_p</OO><OPERATOR>:</OPERATOR>
          phrase <OPERATOR>=</OPERATOR> phrase<OPERATOR>[</OPERATOR><OPERATOR>:</OPERATOR>i<OPERATOR>]</OPERATOR> <OPERATOR>+</OPERATOR> <OBJ>c</OBJ><OPERATOR>.</OPERATOR><OO>upper</OO><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR> <OPERATOR>+</OPERATOR> phrase<OPERATOR>[</OPERATOR>i<OPERATOR>+</OPERATOR><NUMERIC>1</NUMERIC><OPERATOR>:</OPERATOR><OPERATOR>]</OPERATOR>  
    <KEYWORD>return</KEYWORD> phrase
  
  <KEYWORD>def</KEYWORD> <USER_FUNCTION>mangle</USER_FUNCTION><OPERATOR>(</OPERATOR><VALUE>self</VALUE><OPERATOR>,</OPERATOR> phrase<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>
    <KEYWORD>if</KEYWORD> <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>mangle_punc</OO><OPERATOR>:</OPERATOR>
      phrase <OPERATOR>=</OPERATOR> <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>__mangle_punctuation</OO><OPERATOR>(</OPERATOR>phrase<OPERATOR>)</OPERATOR>
    <KEYWORD>if</KEYWORD> <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>mangle_chars</OO><OPERATOR>:</OPERATOR>
      phrase <OPERATOR>=</OPERATOR> <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>__mangle_char_to_num</OO><OPERATOR>(</OPERATOR>phrase<OPERATOR>)</OPERATOR>
    <KEYWORD>if</KEYWORD> <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>mangle_case</OO><OPERATOR>:</OPERATOR>
      phrase <OPERATOR>=</OPERATOR> <OBJ>self</OBJ><OPERATOR>.</OPERATOR><OO>__mangle_case</OO><OPERATOR>(</OPERATOR>phrase<OPERATOR>)</OPERATOR>
    <KEYWORD>return</KEYWORD> phrase
