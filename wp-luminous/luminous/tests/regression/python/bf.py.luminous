<COMMENT>#!/usr/bin/env python</COMMENT>

<KEYWORD>import</KEYWORD> <USER_FUNCTION>sys</USER_FUNCTION>

<KEYWORD>def</KEYWORD> <USER_FUNCTION>bf</USER_FUNCTION><OPERATOR>(</OPERATOR>code<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>
  input_ptr <OPERATOR>=</OPERATOR> <NUMERIC>0</NUMERIC>
  tape_ptr <OPERATOR>=</OPERATOR> <NUMERIC>0</NUMERIC>
  tape <OPERATOR>=</OPERATOR> <OPERATOR>[</OPERATOR><NUMERIC>0</NUMERIC><OPERATOR>]</OPERATOR> <OPERATOR>*</OPERATOR> <NUMERIC>30000</NUMERIC>

  <KEYWORD>while</KEYWORD> input_ptr <OPERATOR>&lt;</OPERATOR> <FUNCTION>len</FUNCTION><OPERATOR>(</OPERATOR>code<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>
    char <OPERATOR>=</OPERATOR> code<OPERATOR>[</OPERATOR>input_ptr<OPERATOR>]</OPERATOR>
    <KEYWORD>if</KEYWORD> char <OPERATOR>==</OPERATOR> <STRING>'&gt;'</STRING> <OPERATOR>:</OPERATOR> tape_ptr <OPERATOR>+=</OPERATOR> <NUMERIC>1</NUMERIC>
    <KEYWORD>elif</KEYWORD> char <OPERATOR>==</OPERATOR> <STRING>'&lt;'</STRING> <OPERATOR>:</OPERATOR> tape_ptr <OPERATOR>-=</OPERATOR> <NUMERIC>1</NUMERIC>
    <KEYWORD>elif</KEYWORD> char <OPERATOR>==</OPERATOR> <STRING>'+'</STRING> <OPERATOR>:</OPERATOR> tape<OPERATOR>[</OPERATOR>tape_ptr<OPERATOR>]</OPERATOR> <OPERATOR>+=</OPERATOR> <NUMERIC>1</NUMERIC>
    <KEYWORD>elif</KEYWORD> char <OPERATOR>==</OPERATOR> <STRING>'-'</STRING> <OPERATOR>:</OPERATOR> tape<OPERATOR>[</OPERATOR>tape_ptr<OPERATOR>]</OPERATOR> <OPERATOR>-=</OPERATOR> <NUMERIC>1</NUMERIC>
    <KEYWORD>elif</KEYWORD> char <OPERATOR>==</OPERATOR> <STRING>'.'</STRING> <OPERATOR>:</OPERATOR> <OBJ>sys</OBJ><OPERATOR>.</OPERATOR><OO>stdout</OO><OPERATOR>.</OPERATOR><OO>write</OO><OPERATOR>(</OPERATOR><FUNCTION>chr</FUNCTION><OPERATOR>(</OPERATOR>tape<OPERATOR>[</OPERATOR>tape_ptr<OPERATOR>]</OPERATOR><OPERATOR>)</OPERATOR><OPERATOR>)</OPERATOR>
    <KEYWORD>elif</KEYWORD> char <OPERATOR>==</OPERATOR> <STRING>','</STRING> <OPERATOR>:</OPERATOR> 
      <KEYWORD>try</KEYWORD><OPERATOR>:</OPERATOR> tape<OPERATOR>[</OPERATOR>tape_ptr<OPERATOR>]</OPERATOR> <OPERATOR>=</OPERATOR> <FUNCTION>ord</FUNCTION><OPERATOR>(</OPERATOR><FUNCTION>raw_input</FUNCTION><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR><OPERATOR>[</OPERATOR><NUMERIC>0</NUMERIC><OPERATOR>]</OPERATOR><OPERATOR>)</OPERATOR>
      <KEYWORD>except</KEYWORD><OPERATOR>:</OPERATOR> <KEYWORD>continue</KEYWORD>
    <KEYWORD>elif</KEYWORD> char <OPERATOR>==</OPERATOR> <STRING>'['</STRING> <KEYWORD>and</KEYWORD> <KEYWORD>not</KEYWORD> tape<OPERATOR>[</OPERATOR>tape_ptr<OPERATOR>]</OPERATOR> <KEYWORD>or</KEYWORD> char <OPERATOR>==</OPERATOR> <STRING>']'</STRING> <KEYWORD>and</KEYWORD> tape<OPERATOR>[</OPERATOR>tape_ptr<OPERATOR>]</OPERATOR><OPERATOR>:</OPERATOR>
      stack <OPERATOR>=</OPERATOR> <NUMERIC>0</NUMERIC>
      <KEYWORD>while</KEYWORD> <NUMERIC>0</NUMERIC> <OPERATOR>&lt;=</OPERATOR> input_ptr <OPERATOR>&lt;</OPERATOR> <FUNCTION>len</FUNCTION><OPERATOR>(</OPERATOR>code<OPERATOR>)</OPERATOR><OPERATOR>:</OPERATOR>
        input_ptr <OPERATOR>+=</OPERATOR> <NUMERIC>1</NUMERIC> <KEYWORD>if</KEYWORD> char <OPERATOR>==</OPERATOR> <STRING>'['</STRING> <KEYWORD>else</KEYWORD> <OPERATOR>-</OPERATOR><NUMERIC>1</NUMERIC>
        <KEYWORD>if</KEYWORD> code<OPERATOR>[</OPERATOR>input_ptr<OPERATOR>]</OPERATOR> <OPERATOR>==</OPERATOR> char<OPERATOR>:</OPERATOR> stack<OPERATOR>+=</OPERATOR><NUMERIC>1</NUMERIC>
        <KEYWORD>elif</KEYWORD> code<OPERATOR>[</OPERATOR>input_ptr<OPERATOR>]</OPERATOR> <OPERATOR>==</OPERATOR> <STRING>'['</STRING> <KEYWORD>or</KEYWORD> code<OPERATOR>[</OPERATOR>input_ptr<OPERATOR>]</OPERATOR> <OPERATOR>==</OPERATOR> <STRING>']'</STRING><OPERATOR>:</OPERATOR>
          <KEYWORD>if</KEYWORD> stack<OPERATOR>:</OPERATOR> stack <OPERATOR>-=</OPERATOR> <NUMERIC>1</NUMERIC>
          <KEYWORD>else</KEYWORD><OPERATOR>:</OPERATOR> 
            <KEYWORD>break</KEYWORD>
      <KEYWORD>if</KEYWORD> stack<OPERATOR>:</OPERATOR> <KEYWORD>raise</KEYWORD> <TYPE>Exception</TYPE><OPERATOR>(</OPERATOR><STRING>"Mismatched brackets"</STRING><OPERATOR>)</OPERATOR>

    input_ptr <OPERATOR>+=</OPERATOR> <NUMERIC>1</NUMERIC>

<KEYWORD>if</KEYWORD> __name__ <OPERATOR>==</OPERATOR> <STRING>'__main__'</STRING><OPERATOR>:</OPERATOR>
  code <OPERATOR>=</OPERATOR> <STRING>""</STRING>
  <KEYWORD>if</KEYWORD> <FUNCTION>len</FUNCTION><OPERATOR>(</OPERATOR><OBJ>sys</OBJ><OPERATOR>.</OPERATOR><OO>argv</OO><OPERATOR>)</OPERATOR> <OPERATOR>&lt;</OPERATOR> <NUMERIC>2</NUMERIC> <KEYWORD>or</KEYWORD> <OBJ>sys</OBJ><OPERATOR>.</OPERATOR><OO>argv</OO><OPERATOR>[</OPERATOR><NUMERIC>1</NUMERIC><OPERATOR>]</OPERATOR> <OPERATOR>==</OPERATOR> <STRING>'-'</STRING><OPERATOR>:</OPERATOR>
    code <OPERATOR>=</OPERATOR> <OBJ>sys</OBJ><OPERATOR>.</OPERATOR><OO>stdin</OO><OPERATOR>.</OPERATOR><OO>read</OO><OPERATOR>(</OPERATOR><OPERATOR>)</OPERATOR>
  <KEYWORD>else</KEYWORD><OPERATOR>:</OPERATOR> code <OPERATOR>=</OPERATOR> <OBJ>sys</OBJ><OPERATOR>.</OPERATOR><OO>argv</OO><OPERATOR>[</OPERATOR><NUMERIC>1</NUMERIC><OPERATOR>]</OPERATOR>
  <FUNCTION>bf</FUNCTION><OPERATOR>(</OPERATOR>code<OPERATOR>)</OPERATOR>

