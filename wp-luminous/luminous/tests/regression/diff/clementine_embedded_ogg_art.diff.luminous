<KEYWORD>Index: src/core/albumcoverloader.cpp</KEYWORD>
<KEYWORD>===================================================================</KEYWORD>
<DIFF_HEADER_OLD>--- src/core/albumcoverloader.cpp	(revision 2574)</DIFF_HEADER_OLD>
<DIFF_HEADER_NEW>+++ src/core/albumcoverloader.cpp	(working copy)</DIFF_HEADER_NEW>
<DIFF_RANGE>@@ -29,6 +29,10 @@</DIFF_RANGE>
<DIFF_UNCHANGED> #include &lt;taglib/fileref.h&gt;</DIFF_UNCHANGED>
<DIFF_UNCHANGED> #include &lt;taglib/id3v2tag.h&gt;</DIFF_UNCHANGED>
<DIFF_UNCHANGED> #include &lt;taglib/mpegfile.h&gt;</DIFF_UNCHANGED>
<DIFF_NEW>+#include &lt;taglib/oggfile.h&gt;</DIFF_NEW>
<DIFF_NEW>+#include &lt;taglib/oggflacfile.h&gt;</DIFF_NEW>
<DIFF_NEW>+#include &lt;taglib/speexfile.h&gt;</DIFF_NEW>
<DIFF_NEW>+#include &lt;taglib/vorbisfile.h&gt;</DIFF_NEW>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_UNCHANGED> const char* AlbumCoverLoader::kManuallyUnsetCover = "(unset)";</DIFF_UNCHANGED>
<DIFF_UNCHANGED> const char* AlbumCoverLoader::kEmbeddedCover = "(embedded)";</DIFF_UNCHANGED>
<DIFF_UNCHANGED></DIFF_UNCHANGED><DIFF_RANGE>@@ -164,18 +168,57 @@</DIFF_RANGE>
<DIFF_UNCHANGED>   if (ref.isNull())</DIFF_UNCHANGED>
<DIFF_UNCHANGED>     return ret;</DIFF_UNCHANGED>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_NEW>+  // mp3</DIFF_NEW>
<DIFF_UNCHANGED>   TagLib::MPEG::File* file = dynamic_cast&lt;TagLib::MPEG::File*&gt;(ref.file());</DIFF_UNCHANGED>
<DIFF_OLD>-  if (!file || !file-&gt;ID3v2Tag())</DIFF_OLD>
<DIFF_NEW>+  if (file &amp;&amp; file-&gt;ID3v2Tag()) {</DIFF_NEW>
<DIFF_UNCHANGED>     return ret;</DIFF_UNCHANGED>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_OLD>-  TagLib::ID3v2::FrameList apic_frames = file-&gt;ID3v2Tag()-&gt;frameListMap()["APIC"];</DIFF_OLD>
<DIFF_OLD>-  if (apic_frames.isEmpty())</DIFF_OLD>
<DIFF_OLD>-    return ret;</DIFF_OLD>
<DIFF_NEW>+    TagLib::ID3v2::FrameList apic_frames = file-&gt;ID3v2Tag()-&gt;frameListMap()["APIC"];</DIFF_NEW>
<DIFF_NEW>+    if (apic_frames.isEmpty())</DIFF_NEW>
<DIFF_NEW>+      return ret;</DIFF_NEW>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_OLD>-  TagLib::ID3v2::AttachedPictureFrame* pic =</DIFF_OLD>
<DIFF_OLD>-      static_cast&lt;TagLib::ID3v2::AttachedPictureFrame*&gt;(apic_frames.front());</DIFF_OLD>
<DIFF_NEW>+    TagLib::ID3v2::AttachedPictureFrame* pic =</DIFF_NEW>
<DIFF_NEW>+        static_cast&lt;TagLib::ID3v2::AttachedPictureFrame*&gt;(apic_frames.front());</DIFF_NEW>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_OLD>-  ret.loadFromData((const uchar*) pic-&gt;picture().data(), pic-&gt;picture().size());</DIFF_OLD>
<DIFF_NEW>+    ret.loadFromData((const uchar*) pic-&gt;picture().data(), pic-&gt;picture().size());</DIFF_NEW>
<DIFF_NEW>+    return ret;</DIFF_NEW>
<DIFF_NEW>+  }</DIFF_NEW>
<DIFF_NEW>+  </DIFF_NEW>
<DIFF_NEW>+  // Ogg vorbis/flac/speex</DIFF_NEW>
<DIFF_NEW>+  // these should all be equivalent</DIFF_NEW>
<DIFF_NEW>+  TagLib::Ogg::Vorbis::File* ogg_vorbis_file = </DIFF_NEW>
<DIFF_NEW>+    dynamic_cast&lt;TagLib::Ogg::Vorbis::File*&gt;(ref.file());</DIFF_NEW>
<DIFF_NEW>+  TagLib::Ogg::FLAC::File* ogg_flac_file = </DIFF_NEW>
<DIFF_NEW>+    dynamic_cast&lt;TagLib::Ogg::FLAC::File*&gt;(ref.file());</DIFF_NEW>
<DIFF_NEW>+  TagLib::Ogg::Speex::File* ogg_speex_file = </DIFF_NEW>
<DIFF_NEW>+    dynamic_cast&lt;TagLib::Ogg::Speex::File*&gt;(ref.file());</DIFF_NEW>
<DIFF_NEW>+    </DIFF_NEW>
<DIFF_NEW>+  if ( (ogg_vorbis_file &amp;&amp; ogg_vorbis_file-&gt;tag())</DIFF_NEW>
<DIFF_NEW>+      || (ogg_flac_file &amp;&amp; ogg_flac_file-&gt;tag())</DIFF_NEW>
<DIFF_NEW>+      || (ogg_speex_file &amp;&amp; ogg_flac_file-&gt;tag())</DIFF_NEW>
<DIFF_NEW>+  ) {</DIFF_NEW>
<DIFF_NEW>+    TagLib::Ogg::FieldListMap map;</DIFF_NEW>
<DIFF_NEW>+    if (ogg_vorbis_file)</DIFF_NEW>
<DIFF_NEW>+      map = ogg_vorbis_file-&gt;tag()-&gt;fieldListMap();</DIFF_NEW>
<DIFF_NEW>+    else if (ogg_flac_file)</DIFF_NEW>
<DIFF_NEW>+      map = ogg_flac_file-&gt;tag()-&gt;fieldListMap();</DIFF_NEW>
<DIFF_NEW>+    else if (ogg_speex_file)</DIFF_NEW>
<DIFF_NEW>+      map = ogg_speex_file-&gt;tag()-&gt;fieldListMap();</DIFF_NEW>
<DIFF_NEW>+    </DIFF_NEW>
<DIFF_NEW>+    </DIFF_NEW>
<DIFF_NEW>+    // Ogg lacks a definitive standard for embedding cover art, but it seems</DIFF_NEW>
<DIFF_NEW>+    // b64 encoding a field called COVERART is the general convention</DIFF_NEW>
<DIFF_NEW>+    if (!map.contains("COVERART"))</DIFF_NEW>
<DIFF_NEW>+      return ret;</DIFF_NEW>
<DIFF_NEW>+    </DIFF_NEW>
<DIFF_NEW>+    QByteArray image_data_b64(map["COVERART"].toString().toCString());</DIFF_NEW>
<DIFF_NEW>+    QByteArray image_data = QByteArray::fromBase64(image_data_b64);</DIFF_NEW>
<DIFF_NEW>+    </DIFF_NEW>
<DIFF_NEW>+    if (!ret.loadFromData(image_data))</DIFF_NEW>
<DIFF_NEW>+      ret.loadFromData(image_data_b64); //maybe it's not b64 after all</DIFF_NEW>
<DIFF_NEW>+    return ret;</DIFF_NEW>
<DIFF_NEW>+  }  </DIFF_NEW>
<DIFF_NEW>+  </DIFF_NEW>
<DIFF_UNCHANGED>   return ret;</DIFF_UNCHANGED>
<DIFF_UNCHANGED> }</DIFF_UNCHANGED>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_UNCHANGED></DIFF_UNCHANGED><KEYWORD>Index: src/core/song.cpp</KEYWORD>
<KEYWORD>===================================================================</KEYWORD>
<DIFF_HEADER_OLD>--- src/core/song.cpp	(revision 2574)</DIFF_HEADER_OLD>
<DIFF_HEADER_NEW>+++ src/core/song.cpp	(working copy)</DIFF_HEADER_NEW>
<DIFF_RANGE>@@ -416,6 +416,9 @@</DIFF_RANGE>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_UNCHANGED>   if (!map["COMPILATION"].isEmpty() )</DIFF_UNCHANGED>
<DIFF_UNCHANGED>     *compilation = TStringToQString( map["COMPILATION"].front() ).trimmed();</DIFF_UNCHANGED>
<DIFF_NEW>+  </DIFF_NEW>
<DIFF_NEW>+  if (!map["COVERART"].isEmpty())</DIFF_NEW>
<DIFF_NEW>+    d-&gt;art_automatic_ = AlbumCoverLoader::kEmbeddedCover;</DIFF_NEW>
<DIFF_UNCHANGED> }</DIFF_UNCHANGED>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_UNCHANGED> void Song::GuessFileType(TagLib::FileRef* fileref) {</DIFF_UNCHANGED>
<DIFF_UNCHANGED></DIFF_UNCHANGED>