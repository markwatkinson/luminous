<KEYWORD>Index: src/core/albumcoverloader.cpp</KEYWORD>
<KEYWORD>===================================================================</KEYWORD>
<DIFF_HEADER_OLD>--- src/core/albumcoverloader.cpp	(revision 2574)</DIFF_HEADER_OLD>
<DIFF_HEADER_NEW>+++ src/core/albumcoverloader.cpp	(working copy)</DIFF_HEADER_NEW>
<DIFF_RANGE>@@ -29,6 +29,10 @@</DIFF_RANGE>
<DIFF_UNCHANGED> <PREPROCESSOR>#include &lt;<STRING>taglib/fileref.h</STRING>&gt;</PREPROCESSOR></DIFF_UNCHANGED>
<DIFF_UNCHANGED> <PREPROCESSOR>#include &lt;<STRING>taglib/id3v2tag.h</STRING>&gt;</PREPROCESSOR></DIFF_UNCHANGED>
<DIFF_UNCHANGED> <PREPROCESSOR>#include &lt;<STRING>taglib/mpegfile.h</STRING>&gt;</PREPROCESSOR></DIFF_UNCHANGED>
<DIFF_NEW>+<PREPROCESSOR>#include &lt;<STRING>taglib/oggfile.h</STRING>&gt;</PREPROCESSOR></DIFF_NEW>
<DIFF_NEW>+<PREPROCESSOR>#include &lt;<STRING>taglib/oggflacfile.h</STRING>&gt;</PREPROCESSOR></DIFF_NEW>
<DIFF_NEW>+<PREPROCESSOR>#include &lt;<STRING>taglib/speexfile.h</STRING>&gt;</PREPROCESSOR></DIFF_NEW>
<DIFF_NEW>+<PREPROCESSOR>#include &lt;<STRING>taglib/vorbisfile.h</STRING>&gt;</PREPROCESSOR></DIFF_NEW>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_UNCHANGED> <KEYWORD>const</KEYWORD> <TYPE>char</TYPE><OPERATOR>*</OPERATOR> <OBJ>AlbumCoverLoader</OBJ><OPERATOR>::</OPERATOR><OO>kManuallyUnsetCover</OO> <OPERATOR>=</OPERATOR> <STRING>"(unset)"</STRING>;</DIFF_UNCHANGED>
<DIFF_UNCHANGED> <KEYWORD>const</KEYWORD> <TYPE>char</TYPE><OPERATOR>*</OPERATOR> <OBJ>AlbumCoverLoader</OBJ><OPERATOR>::</OPERATOR><OO>kEmbeddedCover</OO> <OPERATOR>=</OPERATOR> <STRING>"(embedded)"</STRING>;</DIFF_UNCHANGED>
<DIFF_UNCHANGED></DIFF_UNCHANGED><DIFF_RANGE>@@ -164,18 +168,57 @@</DIFF_RANGE>
<DIFF_UNCHANGED>   <KEYWORD>if</KEYWORD> (<OBJ>ref</OBJ><OPERATOR>.</OPERATOR><OO>isNull</OO>())</DIFF_UNCHANGED>
<DIFF_UNCHANGED>     <KEYWORD>return</KEYWORD> ret;</DIFF_UNCHANGED>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_NEW>+  <COMMENT>// mp3</COMMENT></DIFF_NEW>
<DIFF_UNCHANGED>   <OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>MPEG</OO><OPERATOR>::</OPERATOR><OO>File</OO><OPERATOR>*</OPERATOR> file <OPERATOR>=</OPERATOR> <KEYWORD>dynamic_cast</KEYWORD><OPERATOR>&lt;</OPERATOR><OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>MPEG</OO><OPERATOR>::</OPERATOR><OO>File</OO><OPERATOR>*&gt;</OPERATOR>(<OBJ>ref</OBJ><OPERATOR>.</OPERATOR><OO>file</OO>());</DIFF_UNCHANGED>
<DIFF_OLD>-  <KEYWORD>if</KEYWORD> (<OPERATOR>!</OPERATOR>file <OPERATOR>||</OPERATOR> <OPERATOR>!</OPERATOR><OBJ>file</OBJ><OPERATOR>-&gt;</OPERATOR><OO>ID3v2Tag</OO>())</DIFF_OLD>
<DIFF_NEW>+  <KEYWORD>if</KEYWORD> (file <OPERATOR>&amp;&amp;</OPERATOR> <OBJ>file</OBJ><OPERATOR>-&gt;</OPERATOR><OO>ID3v2Tag</OO>()) {</DIFF_NEW>
<DIFF_UNCHANGED>     <KEYWORD>return</KEYWORD> ret;</DIFF_UNCHANGED>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_OLD>-  <OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>ID3v2</OO><OPERATOR>::</OPERATOR><OO>FrameList</OO> apic_frames <OPERATOR>=</OPERATOR> <OBJ>file</OBJ><OPERATOR>-&gt;</OPERATOR><OO>ID3v2Tag</OO>()<OPERATOR>-&gt;</OPERATOR><OO>frameListMap</OO>()[<STRING>"APIC"</STRING>];</DIFF_OLD>
<DIFF_OLD>-  <KEYWORD>if</KEYWORD> (<OBJ>apic_frames</OBJ><OPERATOR>.</OPERATOR><OO>isEmpty</OO>())</DIFF_OLD>
<DIFF_OLD>-    <KEYWORD>return</KEYWORD> ret;</DIFF_OLD>
<DIFF_NEW>+    <OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>ID3v2</OO><OPERATOR>::</OPERATOR><OO>FrameList</OO> apic_frames <OPERATOR>=</OPERATOR> <OBJ>file</OBJ><OPERATOR>-&gt;</OPERATOR><OO>ID3v2Tag</OO>()<OPERATOR>-&gt;</OPERATOR><OO>frameListMap</OO>()[<STRING>"APIC"</STRING>];</DIFF_NEW>
<DIFF_NEW>+    <KEYWORD>if</KEYWORD> (<OBJ>apic_frames</OBJ><OPERATOR>.</OPERATOR><OO>isEmpty</OO>())</DIFF_NEW>
<DIFF_NEW>+      <KEYWORD>return</KEYWORD> ret;</DIFF_NEW>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_OLD>-  <OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>ID3v2</OO><OPERATOR>::</OPERATOR><OO>AttachedPictureFrame</OO><OPERATOR>*</OPERATOR> pic <OPERATOR>=</OPERATOR></DIFF_OLD>
<DIFF_OLD>-      <KEYWORD>static_cast</KEYWORD><OPERATOR>&lt;</OPERATOR><OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>ID3v2</OO><OPERATOR>::</OPERATOR><OO>AttachedPictureFrame</OO><OPERATOR>*&gt;</OPERATOR>(<OBJ>apic_frames</OBJ><OPERATOR>.</OPERATOR><OO>front</OO>());</DIFF_OLD>
<DIFF_NEW>+    <OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>ID3v2</OO><OPERATOR>::</OPERATOR><OO>AttachedPictureFrame</OO><OPERATOR>*</OPERATOR> pic <OPERATOR>=</OPERATOR></DIFF_NEW>
<DIFF_NEW>+        <KEYWORD>static_cast</KEYWORD><OPERATOR>&lt;</OPERATOR><OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>ID3v2</OO><OPERATOR>::</OPERATOR><OO>AttachedPictureFrame</OO><OPERATOR>*&gt;</OPERATOR>(<OBJ>apic_frames</OBJ><OPERATOR>.</OPERATOR><OO>front</OO>());</DIFF_NEW>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_OLD>-  <OBJ>ret</OBJ><OPERATOR>.</OPERATOR><OO>loadFromData</OO>((<KEYWORD>const</KEYWORD> uchar<OPERATOR>*</OPERATOR>) <OBJ>pic</OBJ><OPERATOR>-&gt;</OPERATOR><OO>picture</OO>()<OPERATOR>.</OPERATOR><OO>data</OO>(), <OBJ>pic</OBJ><OPERATOR>-&gt;</OPERATOR><OO>picture</OO>()<OPERATOR>.</OPERATOR><OO>size</OO>());</DIFF_OLD>
<DIFF_NEW>+    <OBJ>ret</OBJ><OPERATOR>.</OPERATOR><OO>loadFromData</OO>((<KEYWORD>const</KEYWORD> uchar<OPERATOR>*</OPERATOR>) <OBJ>pic</OBJ><OPERATOR>-&gt;</OPERATOR><OO>picture</OO>()<OPERATOR>.</OPERATOR><OO>data</OO>(), <OBJ>pic</OBJ><OPERATOR>-&gt;</OPERATOR><OO>picture</OO>()<OPERATOR>.</OPERATOR><OO>size</OO>());</DIFF_NEW>
<DIFF_NEW>+    <KEYWORD>return</KEYWORD> ret;</DIFF_NEW>
<DIFF_NEW>+  }</DIFF_NEW>
<DIFF_NEW>+  </DIFF_NEW>
<DIFF_NEW>+  <COMMENT>// Ogg vorbis/flac/speex</COMMENT></DIFF_NEW>
<DIFF_NEW>+  <COMMENT>// these should all be equivalent</COMMENT></DIFF_NEW>
<DIFF_NEW>+  <OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>Ogg</OO><OPERATOR>::</OPERATOR><OO>Vorbis</OO><OPERATOR>::</OPERATOR><OO>File</OO><OPERATOR>*</OPERATOR> ogg_vorbis_file <OPERATOR>=</OPERATOR> </DIFF_NEW>
<DIFF_NEW>+    <KEYWORD>dynamic_cast</KEYWORD><OPERATOR>&lt;</OPERATOR><OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>Ogg</OO><OPERATOR>::</OPERATOR><OO>Vorbis</OO><OPERATOR>::</OPERATOR><OO>File</OO><OPERATOR>*&gt;</OPERATOR>(<OBJ>ref</OBJ><OPERATOR>.</OPERATOR><OO>file</OO>());</DIFF_NEW>
<DIFF_NEW>+  <OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>Ogg</OO><OPERATOR>::</OPERATOR><OO>FLAC</OO><OPERATOR>::</OPERATOR><OO>File</OO><OPERATOR>*</OPERATOR> ogg_flac_file <OPERATOR>=</OPERATOR> </DIFF_NEW>
<DIFF_NEW>+    <KEYWORD>dynamic_cast</KEYWORD><OPERATOR>&lt;</OPERATOR><OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>Ogg</OO><OPERATOR>::</OPERATOR><OO>FLAC</OO><OPERATOR>::</OPERATOR><OO>File</OO><OPERATOR>*&gt;</OPERATOR>(<OBJ>ref</OBJ><OPERATOR>.</OPERATOR><OO>file</OO>());</DIFF_NEW>
<DIFF_NEW>+  <OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>Ogg</OO><OPERATOR>::</OPERATOR><OO>Speex</OO><OPERATOR>::</OPERATOR><OO>File</OO><OPERATOR>*</OPERATOR> ogg_speex_file <OPERATOR>=</OPERATOR> </DIFF_NEW>
<DIFF_NEW>+    <KEYWORD>dynamic_cast</KEYWORD><OPERATOR>&lt;</OPERATOR><OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>Ogg</OO><OPERATOR>::</OPERATOR><OO>Speex</OO><OPERATOR>::</OPERATOR><OO>File</OO><OPERATOR>*&gt;</OPERATOR>(<OBJ>ref</OBJ><OPERATOR>.</OPERATOR><OO>file</OO>());</DIFF_NEW>
<DIFF_NEW>+    </DIFF_NEW>
<DIFF_NEW>+  <KEYWORD>if</KEYWORD> ( (ogg_vorbis_file <OPERATOR>&amp;&amp;</OPERATOR> <OBJ>ogg_vorbis_file</OBJ><OPERATOR>-&gt;</OPERATOR><OO>tag</OO>())</DIFF_NEW>
<DIFF_NEW>+      <OPERATOR>||</OPERATOR> (ogg_flac_file <OPERATOR>&amp;&amp;</OPERATOR> <OBJ>ogg_flac_file</OBJ><OPERATOR>-&gt;</OPERATOR><OO>tag</OO>())</DIFF_NEW>
<DIFF_NEW>+      <OPERATOR>||</OPERATOR> (ogg_speex_file <OPERATOR>&amp;&amp;</OPERATOR> <OBJ>ogg_flac_file</OBJ><OPERATOR>-&gt;</OPERATOR><OO>tag</OO>())</DIFF_NEW>
<DIFF_NEW>+  ) {</DIFF_NEW>
<DIFF_NEW>+    <OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>Ogg</OO><OPERATOR>::</OPERATOR><OO>FieldListMap</OO> <TYPE>map</TYPE>;</DIFF_NEW>
<DIFF_NEW>+    <KEYWORD>if</KEYWORD> (ogg_vorbis_file)</DIFF_NEW>
<DIFF_NEW>+      <TYPE>map</TYPE> <OPERATOR>=</OPERATOR> <OBJ>ogg_vorbis_file</OBJ><OPERATOR>-&gt;</OPERATOR><OO>tag</OO>()<OPERATOR>-&gt;</OPERATOR><OO>fieldListMap</OO>();</DIFF_NEW>
<DIFF_NEW>+    <KEYWORD>else</KEYWORD> <KEYWORD>if</KEYWORD> (ogg_flac_file)</DIFF_NEW>
<DIFF_NEW>+      <TYPE>map</TYPE> <OPERATOR>=</OPERATOR> <OBJ>ogg_flac_file</OBJ><OPERATOR>-&gt;</OPERATOR><OO>tag</OO>()<OPERATOR>-&gt;</OPERATOR><OO>fieldListMap</OO>();</DIFF_NEW>
<DIFF_NEW>+    <KEYWORD>else</KEYWORD> <KEYWORD>if</KEYWORD> (ogg_speex_file)</DIFF_NEW>
<DIFF_NEW>+      <TYPE>map</TYPE> <OPERATOR>=</OPERATOR> <OBJ>ogg_speex_file</OBJ><OPERATOR>-&gt;</OPERATOR><OO>tag</OO>()<OPERATOR>-&gt;</OPERATOR><OO>fieldListMap</OO>();</DIFF_NEW>
<DIFF_NEW>+    </DIFF_NEW>
<DIFF_NEW>+    </DIFF_NEW>
<DIFF_NEW>+    <COMMENT>// Ogg lacks a definitive standard for embedding cover art, but it seems</COMMENT></DIFF_NEW>
<DIFF_NEW>+    <COMMENT>// b64 encoding a field called COVERART is the general convention</COMMENT></DIFF_NEW>
<DIFF_NEW>+    <KEYWORD>if</KEYWORD> (<OPERATOR>!</OPERATOR><OBJ>map</OBJ><OPERATOR>.</OPERATOR><OO>contains</OO>(<STRING>"COVERART"</STRING>))</DIFF_NEW>
<DIFF_NEW>+      <KEYWORD>return</KEYWORD> ret;</DIFF_NEW>
<DIFF_NEW>+    </DIFF_NEW>
<DIFF_NEW>+    QByteArray image_data_b64(<TYPE>map</TYPE>[<STRING>"COVERART"</STRING>]<OPERATOR>.</OPERATOR><OO>toString</OO>()<OPERATOR>.</OPERATOR><OO>toCString</OO>());</DIFF_NEW>
<DIFF_NEW>+    QByteArray image_data <OPERATOR>=</OPERATOR> <OBJ>QByteArray</OBJ><OPERATOR>::</OPERATOR><OO>fromBase64</OO>(image_data_b64);</DIFF_NEW>
<DIFF_NEW>+    </DIFF_NEW>
<DIFF_NEW>+    <KEYWORD>if</KEYWORD> (<OPERATOR>!</OPERATOR><OBJ>ret</OBJ><OPERATOR>.</OPERATOR><OO>loadFromData</OO>(image_data))</DIFF_NEW>
<DIFF_NEW>+      <OBJ>ret</OBJ><OPERATOR>.</OPERATOR><OO>loadFromData</OO>(image_data_b64); <COMMENT>//maybe it's not b64 after all</COMMENT></DIFF_NEW>
<DIFF_NEW>+    <KEYWORD>return</KEYWORD> ret;</DIFF_NEW>
<DIFF_NEW>+  }  </DIFF_NEW>
<DIFF_NEW>+  </DIFF_NEW>
<DIFF_UNCHANGED>   <KEYWORD>return</KEYWORD> ret;</DIFF_UNCHANGED>
<DIFF_UNCHANGED> }</DIFF_UNCHANGED>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_UNCHANGED></DIFF_UNCHANGED><KEYWORD>Index: src/core/song.cpp</KEYWORD>
<KEYWORD>===================================================================</KEYWORD>
<DIFF_HEADER_OLD>--- src/core/song.cpp	(revision 2574)</DIFF_HEADER_OLD>
<DIFF_HEADER_NEW>+++ src/core/song.cpp	(working copy)</DIFF_HEADER_NEW>
<DIFF_RANGE>@@ -416,6 +416,9 @@</DIFF_RANGE>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_UNCHANGED>   <KEYWORD>if</KEYWORD> (<OPERATOR>!</OPERATOR><TYPE>map</TYPE>[<STRING>"COMPILATION"</STRING>]<OPERATOR>.</OPERATOR><OO>isEmpty</OO>() )</DIFF_UNCHANGED>
<DIFF_UNCHANGED>     <OPERATOR>*</OPERATOR>compilation <OPERATOR>=</OPERATOR> TStringToQString( <TYPE>map</TYPE>[<STRING>"COMPILATION"</STRING>]<OPERATOR>.</OPERATOR><OO>front</OO>() )<OPERATOR>.</OPERATOR><OO>trimmed</OO>();</DIFF_UNCHANGED>
<DIFF_NEW>+  </DIFF_NEW>
<DIFF_NEW>+  <KEYWORD>if</KEYWORD> (<OPERATOR>!</OPERATOR><TYPE>map</TYPE>[<STRING>"COVERART"</STRING>]<OPERATOR>.</OPERATOR><OO>isEmpty</OO>())</DIFF_NEW>
<DIFF_NEW>+    <OBJ>d</OBJ><OPERATOR>-&gt;</OPERATOR><OO>art_automatic_</OO> <OPERATOR>=</OPERATOR> <OBJ>AlbumCoverLoader</OBJ><OPERATOR>::</OPERATOR><OO>kEmbeddedCover</OO>;</DIFF_NEW>
<DIFF_UNCHANGED> }</DIFF_UNCHANGED>
<DIFF_UNCHANGED> </DIFF_UNCHANGED>
<DIFF_UNCHANGED> <TYPE>void</TYPE> <OBJ>Song</OBJ><OPERATOR>::</OPERATOR><OO>GuessFileType</OO>(<OBJ>TagLib</OBJ><OPERATOR>::</OPERATOR><OO>FileRef</OO><OPERATOR>*</OPERATOR> fileref) {</DIFF_UNCHANGED>
<DIFF_UNCHANGED></DIFF_UNCHANGED>