<DOCCOMMENT>/**</DOCCOMMENT>
<DOCCOMMENT> * Tabify script for jQuery</DOCCOMMENT>
<DOCCOMMENT> * </DOCCOMMENT>
<DOCCOMMENT> * CSS classes:</DOCCOMMENT>
<DOCCOMMENT> * 'tab_title'  - A title element</DOCCOMMENT>
<DOCCOMMENT> * 'tab_hover' - a hovered (mouseover) title element</DOCCOMMENT>
<DOCCOMMENT> * 'tab_selected' - the title element corresponding to the currently displayed </DOCCOMMENT>
<DOCCOMMENT> *                  tab.</DOCCOMMENT>
<DOCCOMMENT> * </DOCCOMMENT>
<DOCCOMMENT> * </DOCCOMMENT>
<DOCCOMMENT> * Usage: Build your content, and wrap your tabs in a an element and your menu</DOCCOMMENT>
<DOCCOMMENT> * in another element. Your menu may contain either &lt;a&gt; elements, or, if not, </DOCCOMMENT>
<DOCCOMMENT> * then the child elements of your menu wrapper are used as the 'clickers'.</DOCCOMMENT>
<DOCCOMMENT> * The elements in the menu (direct children or &lt;a&gt;) should correspond 1-1 </DOCCOMMENT>
<DOCCOMMENT> * with the first level children in the tab wrapper element. Call tabify on </DOCCOMMENT>
<DOCCOMMENT> * your tabs wrapper and give the first argument as the menu wrapper. e.g.:</DOCCOMMENT>
<DOCCOMMENT> * </DOCCOMMENT>
<DOCCOMMENT> * </DOCCOMMENT>
<DOCCOMMENT> * &lt;div id='menu'&gt; &lt;span&gt;go to tab 1&lt;/span&gt; &lt;span&gt;go to tab 2&lt;/span&gt; </DOCCOMMENT>
<DOCCOMMENT> *      &lt;span&gt;go to tab 3&lt;/span&gt; &lt;/div&gt;</DOCCOMMENT>
<DOCCOMMENT> * </DOCCOMMENT>
<DOCCOMMENT> * &lt;div id='tabs'&gt;</DOCCOMMENT>
<DOCCOMMENT> *      &lt;div&gt; tab 1 &lt;/div&gt;</DOCCOMMENT>
<DOCCOMMENT> *      &lt;div&gt; tab 2 &lt;/div&gt;</DOCCOMMENT>
<DOCCOMMENT> *      &lt;div&gt; tab 3 &lt;/div&gt;</DOCCOMMENT>
<DOCCOMMENT> * &lt;/div&gt;</DOCCOMMENT>
<DOCCOMMENT> * </DOCCOMMENT>
<DOCCOMMENT> * </DOCCOMMENT>
<DOCCOMMENT> * &lt;script&gt;</DOCCOMMENT>
<DOCCOMMENT> * $('#tabs').tabify($('#menu'), true);</DOCCOMMENT>
<DOCCOMMENT> * &lt;/script&gt;</DOCCOMMENT>
<DOCCOMMENT> * </DOCCOMMENT>
<DOCCOMMENT> * The last argument controls whether or not to try to emulate back/forward </DOCCOMMENT>
<DOCCOMMENT> * buttons. This must be false if you have multiple tabified elements per </DOCCOMMENT>
<DOCCOMMENT> * page.</DOCCOMMENT>
<DOCCOMMENT> * </DOCCOMMENT>
<DOCCOMMENT> * </DOCCOMMENT>
<DOCCOMMENT> * You may apply your own CSS theming to #tabs and #menu to arrange it as you </DOCCOMMENT>
<DOCCOMMENT> * like</DOCCOMMENT>
<DOCCOMMENT> */</DOCCOMMENT>


(<KEYWORD>function</KEYWORD>(<FUNCTION>$</FUNCTION>){
  <OBJ>$</OBJ><OPERATOR>.</OPERATOR><OO>fn</OO><OPERATOR>.</OPERATOR><OO>tabify</OO> <OPERATOR>=</OPERATOR> <KEYWORD>function</KEYWORD>(menu<OPERATOR>,</OPERATOR> hashwatch){
    <KEYWORD>var</KEYWORD> element <OPERATOR>=</OPERATOR> <KEYWORD>this</KEYWORD><OPERATOR>;</OPERATOR>
    <KEYWORD>var</KEYWORD> tabs <OPERATOR>=</OPERATOR> <OBJ>this</OBJ><OPERATOR>.</OPERATOR><OO>children</OO>()<OPERATOR>;</OPERATOR>
    <KEYWORD>var</KEYWORD> clickers <OPERATOR>=</OPERATOR> <FUNCTION>$</FUNCTION>(<STRING>'a'</STRING><OPERATOR>,</OPERATOR> menu)<OPERATOR>;</OPERATOR>
    <KEYWORD>var</KEYWORD> titles <OPERATOR>=</OPERATOR> <OBJ>menu</OBJ><OPERATOR>.</OPERATOR><OO>children</OO>()<OPERATOR>;</OPERATOR>
    <KEYWORD>if</KEYWORD> (<OPERATOR>!</OPERATOR><OBJ>clickers</OBJ><OPERATOR>.</OPERATOR><OO>length</OO>) clickers <OPERATOR>=</OPERATOR> titles<OPERATOR>;</OPERATOR>
    <OBJ>element</OBJ><OPERATOR>.</OPERATOR><OO>data</OO>(<STRING>'active'</STRING><OPERATOR>,</OPERATOR> <OPERATOR>-</OPERATOR><NUMERIC>1</NUMERIC>)<OPERATOR>;</OPERATOR>
    
    <FUNCTION>$</FUNCTION>(tabs)<OPERATOR>.</OPERATOR><OO>hide</OO>()<OPERATOR>;</OPERATOR>

    <OBJ>clickers</OBJ><OPERATOR>.</OPERATOR><OO>each</OO>(<KEYWORD>function</KEYWORD>(i){
      <FUNCTION>$</FUNCTION>(<KEYWORD>this</KEYWORD>)<OPERATOR>.</OPERATOR><OO>click</OO>(<KEYWORD>function</KEYWORD>(e){ 
        <FUNCTION>$</FUNCTION>(tabs[i])<OPERATOR>.</OPERATOR><OO>fadeIn</OO>(<NUMERIC>250</NUMERIC>)<OPERATOR>;</OPERATOR>
        <KEYWORD>var</KEYWORD> active <OPERATOR>=</OPERATOR> <OBJ>element</OBJ><OPERATOR>.</OPERATOR><OO>data</OO>(<STRING>'active'</STRING>)<OPERATOR>;</OPERATOR>
        <KEYWORD>if</KEYWORD> (active <OPERATOR>!=</OPERATOR> <OPERATOR>-</OPERATOR><NUMERIC>1</NUMERIC> <OPERATOR>&amp;&amp;</OPERATOR> active <OPERATOR>!=</OPERATOR> i <OPERATOR>&amp;&amp;</OPERATOR> active <OPERATOR>&lt;</OPERATOR> <OBJ>tabs</OBJ><OPERATOR>.</OPERATOR><OO>length</OO>)
          <FUNCTION>$</FUNCTION>(<OBJ>element</OBJ><OPERATOR>.</OPERATOR><OO>children</OO>()<OPERATOR>.</OPERATOR><OO>get</OO>(<OBJ>element</OBJ><OPERATOR>.</OPERATOR><OO>data</OO>(<STRING>'active'</STRING>)))<OPERATOR>.</OPERATOR><OO>hide</OO>()<OPERATOR>;</OPERATOR>

        <FUNCTION>$</FUNCTION>(<STRING>'.tab_selected'</STRING><OPERATOR>,</OPERATOR> menu)<OPERATOR>.</OPERATOR><OO>removeClass</OO>(<STRING>'tab_selected'</STRING>)<OPERATOR>;</OPERATOR> 
        <OBJ>element</OBJ><OPERATOR>.</OPERATOR><OO>data</OO>(<STRING>'active'</STRING><OPERATOR>,</OPERATOR> i)<OPERATOR>;</OPERATOR>
        <KEYWORD>if</KEYWORD> (hashwatch <OPERATOR>===</OPERATOR> <KEYWORD>true</KEYWORD>)
          <OBJ>parent</OBJ><OPERATOR>.</OPERATOR><OO>location</OO><OPERATOR>.</OPERATOR><OO>hash</OO> <OPERATOR>=</OPERATOR> i<OPERATOR>;</OPERATOR>
        $el <OPERATOR>=</OPERATOR> ((<FUNCTION>$</FUNCTION>(<KEYWORD>this</KEYWORD>)<OPERATOR>.</OPERATOR><OO>parent</OO>()[<NUMERIC>0</NUMERIC>] <OPERATOR>==</OPERATOR> <FUNCTION>$</FUNCTION>(menu)[<NUMERIC>0</NUMERIC>])<OPERATOR>?</OPERATOR> <FUNCTION>$</FUNCTION>(<KEYWORD>this</KEYWORD>) <OPERATOR>:</OPERATOR> <FUNCTION>$</FUNCTION>(titles[i]))<OPERATOR>;</OPERATOR>
        <OBJ>$el</OBJ><OPERATOR>.</OPERATOR><OO>addClass</OO>(<STRING>'tab_selected'</STRING>)<OPERATOR>;</OPERATOR>
        
        <OBJ>e</OBJ><OPERATOR>.</OPERATOR><OO>preventDefault</OO>()<OPERATOR>;</OPERATOR>
      })<OPERATOR>;</OPERATOR>
    })<OPERATOR>;</OPERATOR>
    <COMMENT>// toggleClass seems unreliable with hover.</COMMENT>
    <OBJ>clickers</OBJ><OPERATOR>.</OPERATOR><OO>hover</OO>(<KEYWORD>function</KEYWORD>(e){<FUNCTION>$</FUNCTION>(<KEYWORD>this</KEYWORD>)<OPERATOR>.</OPERATOR><OO>addClass</OO>(<STRING>'tab_hover'</STRING>)}<OPERATOR>,</OPERATOR>
                  <KEYWORD>function</KEYWORD>(e){<FUNCTION>$</FUNCTION>(<KEYWORD>this</KEYWORD>)<OPERATOR>.</OPERATOR><OO>removeClass</OO>(<STRING>'tab_hover'</STRING>)})<OPERATOR>.</OPERATOR><OO>addClass</OO>(<STRING>'tab_title'</STRING>)<OPERATOR>;</OPERATOR>
    <OBJ>tabs</OBJ><OPERATOR>.</OPERATOR><OO>addClass</OO>(<STRING>'tab'</STRING>)<OPERATOR>;</OPERATOR>
    
    <KEYWORD>var</KEYWORD> trigger <OPERATOR>=</OPERATOR> <KEYWORD>true</KEYWORD><OPERATOR>;</OPERATOR>
    <KEYWORD>if</KEYWORD> (hashwatch <OPERATOR>===</OPERATOR> <KEYWORD>true</KEYWORD>)
    {
      <KEYWORD>if</KEYWORD> (<OBJ>parent</OBJ><OPERATOR>.</OPERATOR><OO>location</OO><OPERATOR>.</OPERATOR><OO>hash</OO><OPERATOR>.</OPERATOR><OO>replace</OO>(<REGEX><DELIMITER>/</DELIMITER>^#<REGEX_OPERATOR>|</REGEX_OPERATOR><ESC>\s</ESC><REGEX_OPERATOR>*</REGEX_OPERATOR>$<DELIMITER>/</DELIMITER><KEYWORD>g</KEYWORD></REGEX><OPERATOR>,</OPERATOR> <STRING>''</STRING>)<OPERATOR>.</OPERATOR><OO>match</OO>(<REGEX><DELIMITER>/</DELIMITER>^<ESC>\d</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR>$<DELIMITER>/</DELIMITER></REGEX>))
        trigger <OPERATOR>=</OPERATOR> <KEYWORD>false</KEYWORD><OPERATOR>;</OPERATOR>
        
      <FUNCTION>setInterval</FUNCTION>(<KEYWORD>function</KEYWORD>(){
        <KEYWORD>var</KEYWORD> hash <OPERATOR>=</OPERATOR> <OBJ>parent</OBJ><OPERATOR>.</OPERATOR><OO>location</OO><OPERATOR>.</OPERATOR><OO>hash</OO><OPERATOR>.</OPERATOR><OO>replace</OO>(<REGEX><DELIMITER>/</DELIMITER>^#<REGEX_OPERATOR>|</REGEX_OPERATOR><ESC>\s</ESC><REGEX_OPERATOR>*</REGEX_OPERATOR>$<DELIMITER>/</DELIMITER><KEYWORD>g</KEYWORD></REGEX><OPERATOR>,</OPERATOR> <STRING>''</STRING>)<OPERATOR>;</OPERATOR>
        <KEYWORD>if</KEYWORD> (<OBJ>hash</OBJ><OPERATOR>.</OPERATOR><OO>match</OO>(<REGEX><DELIMITER>/</DELIMITER>^<ESC>\d</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR>$<DELIMITER>/</DELIMITER></REGEX>))
          hash <OPERATOR>=</OPERATOR> <FUNCTION>parseInt</FUNCTION>(hash)<OPERATOR>;</OPERATOR>
        <KEYWORD>else</KEYWORD> 
          <KEYWORD>return</KEYWORD><OPERATOR>;</OPERATOR>                    
        <KEYWORD>if</KEYWORD> (hash <OPERATOR>!=</OPERATOR> <OBJ>element</OBJ><OPERATOR>.</OPERATOR><OO>data</OO>(<STRING>'active'</STRING>) <OPERATOR>&amp;&amp;</OPERATOR> hash <OPERATOR>&lt;</OPERATOR> <OBJ>clickers</OBJ><OPERATOR>.</OPERATOR><OO>length</OO>)
          <FUNCTION>$</FUNCTION>(<OBJ>clickers</OBJ><OPERATOR>.</OPERATOR><OO>get</OO>(hash))<OPERATOR>.</OPERATOR><OO>trigger</OO>(<STRING>'click'</STRING>)<OPERATOR>;</OPERATOR>
      }<OPERATOR>,</OPERATOR> <NUMERIC>200</NUMERIC>)<OPERATOR>;</OPERATOR>
    }
    
    <KEYWORD>if</KEYWORD> (trigger)
      <OBJ>clickers</OBJ><OPERATOR>.</OPERATOR><OO>first</OO>()<OPERATOR>.</OPERATOR><OO>trigger</OO>(<STRING>'click'</STRING>)<OPERATOR>;</OPERATOR>

    
    <KEYWORD>return</KEYWORD> <KEYWORD>this</KEYWORD><OPERATOR>;</OPERATOR>
  }<OPERATOR>;</OPERATOR>
})(<FUNCTION>jQuery</FUNCTION>)<OPERATOR>;</OPERATOR>
