<COMMENT>#!/usr/bin/env bash</COMMENT>

<COMMENT># short script to perform a clean export of the current SVN trunk version of</COMMENT>
<COMMENT># luminous, and package it into a zip and tar.bz2 archive for redistribution.</COMMENT>

<COMMENT># It omits all the rubbish that people don't need (shell scripts, testing </COMMENT>
<COMMENT># scripts, etc).</COMMENT>

<COMMENT># It also compresses the main CSS file and javascript file with</COMMENT>
<COMMENT># yui-compressor if found. </COMMENT>


<VARIABLE>svn_url</VARIABLE>=<STRING>"http://luminous.googlecode.com/svn/trunk/"</STRING>

<VARIABLE>revision</VARIABLE>=<KEYWORD>`</KEYWORD><FUNCTION>svn</FUNCTION> info <VARIABLE>$svn_url</VARIABLE> | <FUNCTION>grep</FUNCTION> revision -i | <FUNCTION>awk</FUNCTION> <STRING>'{print <VARIABLE>$2</VARIABLE>}'</STRING><KEYWORD>`</KEYWORD>
<VARIABLE>revision</VARIABLE>=<STRING>"r<VARIABLE>$revision</VARIABLE>"</STRING>
<VARIABLE>dir</VARIABLE>=<KEYWORD>`</KEYWORD><FUNCTION>dirname</FUNCTION> <VARIABLE>$0</VARIABLE><KEYWORD>`</KEYWORD>
<KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$dir</VARIABLE> = <STRING>"."</STRING> <KEYWORD>]</KEYWORD>; <KEYWORD>then</KEYWORD>
  <VARIABLE>dir</VARIABLE>=<KEYWORD>`</KEYWORD><FUNCTION>pwd</FUNCTION><KEYWORD>`</KEYWORD>
<KEYWORD>fi</KEYWORD>


<FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$dir</VARIABLE>/dist/"</STRING>
<FUNCTION>echo</FUNCTION> <VARIABLE>$dir</VARIABLE> 

<FUNCTION>svn</FUNCTION> <FUNCTION>export</FUNCTION> <VARIABLE>$svn_url</VARIABLE> luminous-<VARIABLE>$revision</VARIABLE>

<KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$?</VARIABLE> -ne 0 <KEYWORD>]</KEYWORD>; <KEYWORD>then</KEYWORD>
  <FUNCTION>echo</FUNCTION> <STRING>"svn checkout failed with exit status $?"</STRING>
  <FUNCTION>exit</FUNCTION> 1
<KEYWORD>fi</KEYWORD>

  
<FUNCTION>cd</FUNCTION> luminous-<VARIABLE>$revision</VARIABLE>

<COMMENT># compress the javascript and main CSS file if we've got yui installed</COMMENT>
<KEYWORD>if</KEYWORD> <FUNCTION>which</FUNCTION> yui-compressor &amp;<KEYWORD>&gt;</KEYWORD> /dev/null; <KEYWORD>then</KEYWORD>
  yui-compressor style/luminous.css -o style/luminous.min.css
  yui-compressor client/luminous.js -o client/luminous.min.js
<KEYWORD>fi</KEYWORD>

<COMMENT># Figure out the version number from the README</COMMENT>
<VARIABLE>version</VARIABLE>=<KEYWORD>$(</KEYWORD> <FUNCTION>sed</FUNCTION> -r <STRING>'1s/.*[<ESC>\t</ESC> ]//'</STRING> <CONSTANT>README</CONSTANT> | <FUNCTION>head</FUNCTION> -n 1<KEYWORD>)</KEYWORD>
<FUNCTION>echo</FUNCTION> <STRING>"Luminous version <VARIABLE>$version</VARIABLE>, is this correct? [y]es/[n]o/[q]uit"</STRING>

<FUNCTION>read</FUNCTION> confirm
<VARIABLE>confirm</VARIABLE>=<KEYWORD>$(</KEYWORD><FUNCTION>echo</FUNCTION> <VARIABLE>$confirm</VARIABLE> | <FUNCTION>tr</FUNCTION> <STRING>'[A-Z]'</STRING> <STRING>'[a-z]'</STRING><KEYWORD>)</KEYWORD>
<KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>${confirm[0]:0:1}</VARIABLE>"</STRING> == <STRING>"n"</STRING> <KEYWORD>]</KEYWORD>; <KEYWORD>then</KEYWORD>
  <FUNCTION>echo</FUNCTION> Enter version number:
  <FUNCTION>read</FUNCTION> version
<KEYWORD>elif</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>${confirm[0]:0:1}</VARIABLE>"</STRING> != <STRING>"y"</STRING> <KEYWORD>]</KEYWORD>; <KEYWORD>then</KEYWORD>
  <FUNCTION>exit</FUNCTION> 1   
<KEYWORD>fi</KEYWORD>

<FUNCTION>cd</FUNCTION> ../
<FUNCTION>mv</FUNCTION> luminous-<VARIABLE>$revision</VARIABLE> <STRING>"luminous-<VARIABLE>$version</VARIABLE>"</STRING>
<FUNCTION>cd</FUNCTION> <STRING>"luminous-<VARIABLE>$version</VARIABLE>"</STRING>

<COMMENT># remove DEV section from doxyfile</COMMENT>
<FUNCTION>sed</FUNCTION> -i -r <STRING>'s/(ENABLED_SECTIONS<ESC>\s</ESC>*=<ESC>\s</ESC>*.*?)(DEV)(.*?)/<ESC>\1</ESC>/'</STRING> Doxyfile

<VARIABLE>dir</VARIABLE>=<KEYWORD>$(</KEYWORD><FUNCTION>pwd</FUNCTION> | <FUNCTION>sed</FUNCTION> -r <STRING>'s/.*?<ESC>\/</ESC>//'</STRING><KEYWORD>)</KEYWORD>


<COMMENT># zip wants each individual file specified,</COMMENT>
<COMMENT># tar doesn't. It's a pain</COMMENT>
<VARIABLE>excludes</VARIABLE>=(
          <VARIABLE>$dir</VARIABLE>/*.sh
          <VARIABLE>$dir</VARIABLE>/**/*~ 
          <VARIABLE>$dir</VARIABLE>/tests/*
          <VARIABLE>$dir</VARIABLE>/tests
          <VARIABLE>$dir</VARIABLE>/docs/*
          <VARIABLE>$dir</VARIABLE>/docs

          );

<VARIABLE>tar_ex</VARIABLE>=
<VARIABLE>zip_ex</VARIABLE>=<STRING>"-x"</STRING>

<KEYWORD>for</KEYWORD> x <KEYWORD>in</KEYWORD> <KEYWORD>${</KEYWORD>excludes<KEYWORD>[</KEYWORD>@<KEYWORD>]</KEYWORD><KEYWORD>}</KEYWORD>
<KEYWORD>do</KEYWORD>
  <VARIABLE>tar_ex</VARIABLE>=<STRING>"<VARIABLE>$tar_ex</VARIABLE> --exclude=<VARIABLE>$x</VARIABLE>"</STRING>
  <VARIABLE>zip_ex</VARIABLE>=<STRING>"<VARIABLE>$zip_ex</VARIABLE> <VARIABLE>$x</VARIABLE>"</STRING>
<KEYWORD>done</KEYWORD>


<FUNCTION>cd</FUNCTION> ..
<FUNCTION>tar</FUNCTION> -cvvjf luminous-<VARIABLE>$version</VARIABLE>.<FUNCTION>tar</FUNCTION>.bz2 <VARIABLE>$tar_ex</VARIABLE> <VARIABLE>$dir</VARIABLE>
zip -r luminous-<VARIABLE>$version</VARIABLE>.zip <VARIABLE>$tar_ex</VARIABLE>  <VARIABLE>$dir</VARIABLE>

<FUNCTION>echo</FUNCTION> <STRING>"Done"</STRING>

