<COMMENT>#!/bin/sh</COMMENT>
<COMMENT># Quick and dirty script to download and install various</COMMENT>
<COMMENT># redistributable runtime libraries</COMMENT>
<COMMENT>#</COMMENT>
<COMMENT># Current maintainers: Austin English, Dan Kegel</COMMENT>
<COMMENT># Copyright 2007, 2008, 2009 Google (Dan Kegel, dank@kegel.com)</COMMENT>
<COMMENT># Copyright 2008, 2009 Austin English (austinenglish@gmail.com)</COMMENT>
<COMMENT># Thanks to Detlef Riekenberg for lots of updates</COMMENT>
<COMMENT># Thanks to Saulius Krasuckas for corrections and suggestions</COMMENT>
<COMMENT># Thanks to Erik Inge Bols√∏ for several patches</COMMENT>
<COMMENT># Thanks to Hugh Perkins for the directplay patch</COMMENT>
<COMMENT># Please report problems at http://code.google.com/p/winezeug/issues</COMMENT>
<COMMENT># See also http://wiki.winehq.org/winetricks</COMMENT>
<COMMENT>#</COMMENT>
<COMMENT># Note to contributors: please avoid gnu extensions in this shell script,</COMMENT>
<COMMENT># as it has to run on MacOSX and Solaris, too.  A good book on the topic is</COMMENT>
<COMMENT># "Portable Shell Programming" by Bruce Blinn</COMMENT>

<COMMENT>#---- Constants -------------------------------------------------</COMMENT>

<COMMENT># Name of this version of winetricks (YYYYMMDD)</COMMENT>
<VARIABLE>VERSION</VARIABLE>=20091213

early_wine()
{
    <VARIABLE>WINEDLLOVERRIDES</VARIABLE>=mshtml= <VARIABLE>$WINE</VARIABLE> <STRING>"$@"</STRING>
}

<COMMENT># Default values for important settings if not already in environment.</COMMENT>
<COMMENT># These settings should not need editing here.</COMMENT>
<KEYWORD>case</KEYWORD> <STRING>"<VARIABLE>$OS</VARIABLE>"</STRING> <KEYWORD>in</KEYWORD>
 <STRING>"Windows_NT"</STRING>)
    <COMMENT># Cheezy fix for getting rid of double slashes when running cygwin in wine</COMMENT>
    <KEYWORD>case</KEYWORD> <VARIABLE>$HOME</VARIABLE> <KEYWORD>in</KEYWORD>
      /) <CONSTANT>HOME</CONSTANT>=<STRING>""</STRING> ;;
    <KEYWORD>esac</KEYWORD>
    <VARIABLE>WINE</VARIABLE>=<STRING>""</STRING>
    <VARIABLE>WINEPREFIX</VARIABLE>=<KEYWORD>${</KEYWORD><CONSTANT>WINEPREFIX</CONSTANT>:-<VARIABLE>$HOME</VARIABLE>/.wine<KEYWORD>}</KEYWORD>
    <VARIABLE>DRIVE_C</VARIABLE>=<STRING>"C:/"</STRING>
    <VARIABLE>XXXPATH</VARIABLE>=cygpath
    ;;
 *)
    <VARIABLE>WINE</VARIABLE>=<KEYWORD>${</KEYWORD><CONSTANT>WINE</CONSTANT>:-wine<KEYWORD>}</KEYWORD>
    <VARIABLE>WINEPREFIX</VARIABLE>=<KEYWORD>${</KEYWORD><CONSTANT>WINEPREFIX</CONSTANT>:-<VARIABLE>$HOME</VARIABLE>/.wine<KEYWORD>}</KEYWORD>
    <VARIABLE>DRIVE_C</VARIABLE>=<STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>/drive_c"</STRING>
    <VARIABLE>XXXPATH</VARIABLE>=<STRING>"early_wine winepath"</STRING>
    ;;
<KEYWORD>esac</KEYWORD>

<COMMENT># Internal variables; these locations are not too important</COMMENT>
<VARIABLE>WINETRICKS_CACHE</VARIABLE>=<VARIABLE>$HOME</VARIABLE>/winetrickscache
<COMMENT># Default to hiding the directory, by popular demand</COMMENT>
<FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING> || <CONSTANT>WINETRICKS_CACHE</CONSTANT>=<VARIABLE>$HOME</VARIABLE>/.winetrickscache
<VARIABLE>WINETRICKS_CACHE_WIN</VARIABLE>=<STRING>"`<VARIABLE>$XXXPATH</VARIABLE> -w <VARIABLE>$WINETRICKS_CACHE</VARIABLE>`"</STRING>
<VARIABLE>WINETRICKS_TMP</VARIABLE>=<STRING>"<VARIABLE>$DRIVE_C</VARIABLE>"</STRING>/winetrickstmp
<VARIABLE>WINETRICKS_TMP_WIN</VARIABLE>=<STRING>'c:<ESC>\w</ESC>inetrickstmp'</STRING>
<FUNCTION>mkdir</FUNCTION> -p <VARIABLE>$WINETRICKS_TMP</VARIABLE>

<COMMENT># Overridden for windows</COMMENT>
<VARIABLE>ISO_MOUNT_ROOT</VARIABLE>=/mnt/winetricks

<VARIABLE>WINDIR</VARIABLE>=<STRING>"<VARIABLE>$DRIVE_C</VARIABLE>/windows"</STRING>

<COMMENT># Which sourceforge mirror to use.  Rotate based on time, since</COMMENT>
<COMMENT># their mirror picker sometimes persistantly sends you to a broken</COMMENT>
<COMMENT># mirror.</COMMENT>
<KEYWORD>case</KEYWORD> <KEYWORD>`</KEYWORD><FUNCTION>date</FUNCTION> +%S<KEYWORD>`</KEYWORD> <KEYWORD>in</KEYWORD>
*<KEYWORD>[</KEYWORD>01<KEYWORD>]</KEYWORD>) <CONSTANT>SOURCEFORGE</CONSTANT>=http://internap.dl.sourceforge.net/sourceforge ;;
*<KEYWORD>[</KEYWORD>23<KEYWORD>]</KEYWORD>) <CONSTANT>SOURCEFORGE</CONSTANT>=http://easynews.dl.sourceforge.net/sourceforge ;;
*)     <CONSTANT>SOURCEFORGE</CONSTANT>=http://downloads.sourceforge.net;;
<KEYWORD>esac</KEYWORD>

<COMMENT>#---- Functions -------------------------------------------------</COMMENT>

<COMMENT># Check for known desktop environments</COMMENT>
<COMMENT># Set variable DE to the desktop environment's name, lowercase</COMMENT>
detectDE() {
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> x<STRING>"<VARIABLE>$KDE_FULL_SESSION</VARIABLE>"</STRING> = x<STRING>"true"</STRING> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        <VARIABLE>DE</VARIABLE>=kde
    <KEYWORD>elif</KEYWORD> <KEYWORD>[</KEYWORD> x<STRING>"<VARIABLE>$GNOME_DESKTOP_SESSION_ID</VARIABLE>"</STRING> != x<STRING>""</STRING> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        <VARIABLE>DE</VARIABLE>=gnome
    <KEYWORD>elif</KEYWORD> <KEYWORD>[</KEYWORD> x<STRING>"<VARIABLE>$DISPLAY</VARIABLE>"</STRING> != x<STRING>""</STRING> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        <VARIABLE>DE</VARIABLE>=x
    <KEYWORD>else</KEYWORD>
        <VARIABLE>DE</VARIABLE>=none
    <KEYWORD>fi</KEYWORD>
}

warn() {
    <FUNCTION>echo</FUNCTION> <STRING>"$@"</STRING>

    <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$GUI</VARIABLE>"</STRING> = 1 || <FUNCTION>return</FUNCTION>

    <KEYWORD>case</KEYWORD> <VARIABLE>$DE</VARIABLE> <KEYWORD>in</KEYWORD>
    gnome) zenity --error --title=Winetricks --text=<STRING>"$@"</STRING> --no-wrap ;;
    kde) kdialog --title Winetricks --error <STRING>"$@"</STRING> ;;
    x) xmessage -title Winetricks -center <STRING>"  Error: $@  "</STRING> ;;
    <KEYWORD>esac</KEYWORD>
}

die() {
    warn <STRING>"$@"</STRING>

    <FUNCTION>exit</FUNCTION> 1
}

<COMMENT># Abort if user doesn't own the given directory (or its parent, if it doesn't exist yet)</COMMENT>
die_if_user_not_dirowner() {
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <KEYWORD>then</KEYWORD>
        <VARIABLE>checkdir</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <KEYWORD>else</KEYWORD>
        <COMMENT># fixme: quoting problem?</COMMENT>
        <VARIABLE>checkdir</VARIABLE>=<KEYWORD>`</KEYWORD><FUNCTION>dirname</FUNCTION> <STRING>"<VARIABLE>$1</VARIABLE>"</STRING><KEYWORD>`</KEYWORD>
    <KEYWORD>fi</KEYWORD>
    <VARIABLE>nuser</VARIABLE>=<KEYWORD>`</KEYWORD><FUNCTION>id</FUNCTION> -u<KEYWORD>`</KEYWORD>
    <VARIABLE>nowner</VARIABLE>=<KEYWORD>`</KEYWORD><FUNCTION>ls</FUNCTION> -l -n -d <STRING>"<VARIABLE>$checkdir</VARIABLE>"</STRING> | <FUNCTION>awk</FUNCTION> <STRING>'{print <VARIABLE>$3</VARIABLE>}'</STRING><KEYWORD>`</KEYWORD>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> x<VARIABLE>$nuser</VARIABLE> != x<VARIABLE>$nowner</VARIABLE>
    <KEYWORD>then</KEYWORD>
        die <STRING>"You (`id -un`) don't own <VARIABLE>$checkdir</VARIABLE>. Don't run winetricks as another user!"</STRING>
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

usage() {
    <FUNCTION>set</FUNCTION> +x
    <COMMENT># WARNING: do not use single quote in any package description; that breaks the gui menu.</COMMENT>
    <FUNCTION>echo</FUNCTION> <STRING>"Usage: <VARIABLE>$0</VARIABLE> [options] package [package] ..."</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"This script can help you prepare your system for Windows applications"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"that mistakenly assume all users' systems have all the needed"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"redistributable runtime libraries or fonts."</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"Some options require the Linux 'cabextract' program."</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>""</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"Options:"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" -q         quiet.  You must have already agreed to the EULAs."</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" -v         verbose"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" -V         display Version"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"Packages:"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" art2kmin      MS Access 2007 runtime"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" atmlib        Adobe Type Manager. Needed for Adobe CS4"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" autohotkey    Autohotkey (open source gui scripting language)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" cmake         CMake, the cross-platform, open-source build system"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" colorprofile  Standard RGB color profile"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" comctl32      MS common controls 5.80"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" comctl32.ocx  MS comctl32.ocx and mscomctl.ocx, comctl32 wrappers for VB6"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" controlpad    MS ActiveX Control Pad"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" corefonts     MS Arial, Courier, Times fonts"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" cygwin        Unix apps for Windows (needed by some build scripts)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" d3dx9         MS d3dx9_??.dll (from DirectX 9 user redistributable)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" dcom98        MS DCOM (ole32, oleaut32); requires Windows 98 license, but does not check for one"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" dinput8       MS dinput8.dll (from DirectX 9 user redistributable)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" dirac0.8      the obsolete Dirac 0.8 directshow filter"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" directplay    MS DirectPlay (from DirectX 9 user redistributable)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" directx9      MS DirectX 9 user redistributable (not recommended! use d3dx9 instead)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" divx          divx video codec"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" dotnet11      MS .NET 1.1 (requires Windows license, but does not check for one)"</STRING>
<COMMENT># Doesn't work yet, don't make it public</COMMENT>
<COMMENT>#    echo " dotnet11sdk   MS .NET Framework SDK Version 1.1 (requires Windows license, but does not check for one; may not work yet)"</COMMENT>
    <FUNCTION>echo</FUNCTION> <STRING>" dotnet20      MS .NET 2.0 (requires Windows license, but does not check for one)"</STRING>
<COMMENT># Doesn't work yet, don't make it public</COMMENT>
<COMMENT>#    echo " dotnet20sdk   MS .NET Framework SDK Version 2.0 (requires Windows license, but does not check for one, may not work yet)"</COMMENT>
    <FUNCTION>echo</FUNCTION> <STRING>" dotnet20sp2   MS .NET 2.0 sp2 (requires Windows license, but does not check for one)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" dotnet30      MS .NET 3.0 (requires Windows license, but does not check for one, might not work yet)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" droid         Droid fonts (on LCD, looks better with fontsmooth-rgb)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" ffdshow       ffdshow video codecs"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" firefox       Firefox web browser"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" flash         Adobe Flash Player ActiveX and firefox plugins"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" fm20          MS Forms 2.0 Object Library"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" fontfix       Fix bad fonts which cause crash in some apps (e.g. .net)."</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" fontsmooth-bgr        Enables subpixel smoothing for BGR LCDs"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" fontsmooth-disable    Disables font smoothing"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" fontsmooth-gray       Enables grayscale font smoothing"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" fontsmooth-rgb        Enables subpixel smoothing for RGB LCDs"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" gdiplus       MS gdiplus.dll"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" gecko-dbg     The HTML rendering Engine (Mozilla), with debugging symbols"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" gecko         The HTML rendering Engine (Mozilla)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" hosts         Adds empty C:<ESC>\w</ESC>indows<ESC>\s</ESC>ystem32<ESC>\d</ESC>rivers<ESC>\e</ESC>tc<ESC>\{</ESC>hosts,services} files"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" icodecs       Intel Codecs (Indeo)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" ie6           Microsoft Internet Explorer 6.0"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" ie7           Microsoft Internet Explorer 7.0"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" jet40         MS Jet 4.0 Service Pack 8"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" kde           KDE for Windows installer"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" liberation    Red Hat Liberation fonts (Sans, Serif, Mono)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mdac25        MS MDAC 2.5: Microsoft ODBC drivers, etc."</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mdac27        MS MDAC 2.7"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mdac28        MS MDAC 2.8"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mfc40         MS mfc40 (Microsoft Foundation Classes from Visual C++ 4)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mfc42         MS mfc42 (same as vcrun6 below)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mingw-gdb     GDB for MinGW"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mingw         Minimalist GNU for Windows, including GCC for Windows!"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mono20        mono-2.0.1"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mono22        mono-2.2"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mono24        mono-2.4"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mozillabuild  Mozilla build environment"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mpc           Media Player Classic"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" mshflxgd      MS Hierarchical Flex Grid Control"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" msi2          MS Installer 2.0"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" msls31        MS Line Services 3.1 (needed by native riched?)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" msmask        MS Masked Edit Control"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" msscript      MS Script Control"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" msxml3        MS XML version 3"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" msxml4        MS XML version 4"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" msxml6        MS XML version 6"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" ogg           ogg filters/codecs: flac, theora, speex, vorbis, schroedinger"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" ole2          MS 16 bit OLE"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" openwatcom    Open Watcom C/C++ compiler (can compile win16 code!)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" pdh           MS pdh.dll (Performance Data Helper)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" physx         NVIDIA/AGEIA PhysX runtime"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" psdk2003      MS Platform SDK 2003"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" psdkvista     MS Vista SDK (does not install yet)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" psdkwin7      MS Windows 7 SDK (installing just headers and c++ compiler works)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" python26      Python 2.6.2 (and pywin32)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" python-comtypes Python 0.6.1-1 comtypes package"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" quicktime72   Apple Quicktime 7.2"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" riched20      MS riched20 and riched32"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" riched30      MS riched30"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" richtx32      MS Rich TextBox Control 6.0"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" shockwave     Adobe Shockwave Player"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" tahoma        MS Tahoma font (not part of corefonts)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" urlmon        MS urlmon.dll"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vb2run        MS Visual Basic 2 runtime"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vb3run        MS Visual Basic 3 runtime"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vb4run        MS Visual Basic 4 runtime"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vb5run        MS Visual Basic 5 runtime"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vb6run        MS Visual Basic 6 Service Pack 6 runtime"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vc2005express MS Visual C++ 2005 Express"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vc2005expresssp1 MS Visual C++ 2005 Express SP1 (does not work yet)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vc2005sp1     MS Visual C++ 2005 Service Pack 1 (install trial 1st)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vc2005trial   MS Visual C++ 2005 Trial"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vcrun2003     MS Visual C++ 2003 libraries (mfc71,msvcp71,msvcr71)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vcrun2005     MS Visual C++ 2005 sp1 libraries (mfc80,msvcp80,msvcr80)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vcrun2008     MS Visual C++ 2008 libraries (mfc90,msvcp90,msvcr90)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vcrun6        MS Visual C++ 6 sp4 libraries (mfc42, msvcp60, msvcrt)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vcrun6sp6     MS Visual C++ 6 sp6 libraries (mfc42, msvcp60, msvcrt; 64 MB download)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vjrun20       MS Visual J# 2.0 SE libraries (requires dotnet20)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vlc           VLC media player"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" wenquanyi     WenQuanYi CJK font (on LCD looks better with fontsmooth-rgb)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" wininet       MS wininet.dll (requires Windows license, but does not check for one)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" wme9          MS Windows Media Encoder 9 (requires Windows license, but does not check for one)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" wmp10         MS Windows Media Player 10 (requires Windows license, but does not check for one)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" wmp9          MS Windows Media Player 9 (requires Windows license, but does not check for one)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" wsh56js       MS Windows scripting 5.6, jscript only, no cscript"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" wsh56         MS Windows Scripting Host 5.6"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" wsh56vb       MS Windows scripting 5.6, vbscript only, no cscript"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" xact          MS XACT Engine (x3daudio?_?.dll, xactengine?_?.dll)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" xvid          xvid video codec"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"Pseudopackages:"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" allfonts      All listed fonts (corefonts, tahoma, liberation)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" allcodecs     All listed codecs (xvid, ffdshow, icodecs)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" fakeie6       Set registry to claim IE6sp1 is installed"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" glsl-disable  Disable GLSL use by Wine Direct3D"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" glsl-enable   Enable GLSL use by Wine Direct3D (default)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" heapcheck     Enable heap checking"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" native_mdac   Override odbc32, odbccp32 and oledb32"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" native_oleaut32 Override oleaut32"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" nocrashdialog Disable the graphical crash dialog"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" orm=backbuffer Registry tweak: OffscreenRenderingMode=backbuffer"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" orm=fbo        Registry tweak: OffscreenRenderingMode=fbo (default)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" orm=pbuffer    Registry tweak: OffscreenRenderingMode=pbuffer"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" sandbox       Sandbox the wineprefix - remove links to ~"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" sound=alsa       Set sound driver to ALSA"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" sound=audioio    Set sound driver to AudioIO"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" sound=coreaudio  Set sound driver to CoreAudio"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" sound=esound     Set sound driver to Esound"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" sound=jack       Set sound driver to Jack"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" sound=nas        Set sound driver to Nas"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" sound=oss        Set sound driver to OSS"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" nt40          Set windows version to nt40"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" win98         Set windows version to Windows 98"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" win2k         Set windows version to Windows 2000"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" winxp         Set windows version to Windows XP"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" vista         Set windows version to Windows Vista"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" winver=       Set windows version to default (winxp)"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>" volnum        Rename drive_c to harddiskvolume0 (needed by some installers)"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>
<COMMENT># Trivial GUI just to handle case where user tries running without commandline</COMMENT>

kde_showmenu() {
    <VARIABLE>title</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>shift</FUNCTION>
    <VARIABLE>text</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>shift</FUNCTION>
    <VARIABLE>col1name</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>shift</FUNCTION>
    <VARIABLE>col2name</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>shift</FUNCTION>
    <KEYWORD>while</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$#</VARIABLE> -gt 0
    <KEYWORD>do</KEYWORD>
        <VARIABLE>args</VARIABLE>=<STRING>"<VARIABLE>$args</VARIABLE> <VARIABLE>$1</VARIABLE> <VARIABLE>$1</VARIABLE> off"</STRING>
        <FUNCTION>shift</FUNCTION>
    <KEYWORD>done</KEYWORD>
    kdialog --title <STRING>"<VARIABLE>$title</VARIABLE>"</STRING> --separate-output --checklist <STRING>"<VARIABLE>$text</VARIABLE>"</STRING> <VARIABLE>$args</VARIABLE>
}

x_showmenu() {
    <VARIABLE>title</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>shift</FUNCTION>
    <VARIABLE>text</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>shift</FUNCTION>
    <VARIABLE>col1name</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>shift</FUNCTION>
    <VARIABLE>col2name</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>shift</FUNCTION>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$#</VARIABLE> -gt 0
    <KEYWORD>then</KEYWORD>
        <VARIABLE>args</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
        <FUNCTION>shift</FUNCTION>
    <KEYWORD>fi</KEYWORD>
    <KEYWORD>while</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$#</VARIABLE> -gt 0
    <KEYWORD>do</KEYWORD>
        <VARIABLE>args</VARIABLE>=<STRING>"<VARIABLE>$args</VARIABLE>,<VARIABLE>$1</VARIABLE>"</STRING>
        <FUNCTION>shift</FUNCTION>
    <KEYWORD>done</KEYWORD>
    (<FUNCTION>echo</FUNCTION> <STRING>"<VARIABLE>$title</VARIABLE>"</STRING>; <FUNCTION>echo</FUNCTION> <STRING>""</STRING>; <FUNCTION>echo</FUNCTION> <STRING>"<VARIABLE>$text</VARIABLE>"</STRING>) | \
    xmessage -print -file - -buttons <STRING>"Cancel,<VARIABLE>$args</VARIABLE>"</STRING> | <FUNCTION>sed</FUNCTION> <STRING>'s/Cancel//'</STRING>
}

showmenu()
{
    <KEYWORD>case</KEYWORD> <VARIABLE>$DE</VARIABLE> <KEYWORD>in</KEYWORD>
    kde) kde_showmenu <STRING>"$@"</STRING> ;;
    gnome|x) x_showmenu <STRING>"$@"</STRING> ;;
    none) usage <KEYWORD>1&gt;&amp;2</KEYWORD>; <FUNCTION>exit</FUNCTION> 1;;
    <KEYWORD>esac</KEYWORD>
}

dogui()
{
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$DE</VARIABLE> = gnome <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"zenity --title 'Select a package to install' --text 'Install?' --list --checklist --column '' --column Package --column Description --height 440 --width 600 <ESC>\\</ESC>"</STRING> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/zenity.sh
        usage | <FUNCTION>grep</FUNCTION> <STRING>'^ [a-z]'</STRING> | <FUNCTION>sed</FUNCTION> <STRING>'s/^ <ESC>\(</ESC>[^ ]*<ESC>\)</ESC> *<ESC>\(</ESC>.*<ESC>\)</ESC>/FALSE "<ESC>\1</ESC>" '</STRING><STRING>"'<ESC>\2</ESC>'/"</STRING> | <FUNCTION>sed</FUNCTION> <STRING>'s/$/ <ESC>\\</ESC>/'</STRING> <KEYWORD>&gt;&gt;</KEYWORD> <VARIABLE>$WINETRICKS_TMP</VARIABLE>/zenity.sh
        <VARIABLE>todo</VARIABLE>=<STRING>"`sh "</STRING><VARIABLE>$WINETRICKS_TMP</VARIABLE><STRING>"/zenity.sh | tr '|' ' '`"</STRING>
    <KEYWORD>else</KEYWORD>
        <VARIABLE>packages</VARIABLE>=<KEYWORD>`</KEYWORD>usage | <FUNCTION>awk</FUNCTION> <STRING>'/^ [a-z]/ {print <VARIABLE>$1</VARIABLE>}'</STRING><KEYWORD>`</KEYWORD>
        <VARIABLE>todo</VARIABLE>=<STRING>"`showmenu "</STRING>winetricks<STRING>" "</STRING>Select a package to <FUNCTION>install</FUNCTION><STRING>" "</STRING>Install?<STRING>" "</STRING>Package<STRING>" <VARIABLE>$packages</VARIABLE>`"</STRING>
    <KEYWORD>fi</KEYWORD>

    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$todo</VARIABLE>"</STRING>x = x
    <KEYWORD>then</KEYWORD>
       <FUNCTION>exit</FUNCTION> 0
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#-----  Helpers  ------------------------------------------------</COMMENT>

<COMMENT># Execute with error checking</COMMENT>
try() {
    <COMMENT># "VAR=foo try cmd" fails to put VAR in the environment</COMMENT>
    <COMMENT># with some versions of bash if try is a shell function?!</COMMENT>
    <COMMENT># Adding this explicit export works around it.</COMMENT>
    <FUNCTION>export</FUNCTION> <CONSTANT>WINEDLLOVERRIDES</CONSTANT>
    <FUNCTION>echo</FUNCTION> Executing <STRING>"$@"</STRING>
    <COMMENT># Mark executable - needed if running on windows vista</COMMENT>
    <KEYWORD>case</KEYWORD> <STRING>"<VARIABLE>$1</VARIABLE>"</STRING> <KEYWORD>in</KEYWORD>
    *.exe) <FUNCTION>chmod</FUNCTION> +x <STRING>"<VARIABLE>$1</VARIABLE>"</STRING> || <FUNCTION>true</FUNCTION>
      cmd /c <STRING>"$@"</STRING>
      ;;
    *)
      <STRING>"$@"</STRING>
      ;;
    <KEYWORD>esac</KEYWORD>
    <VARIABLE>status</VARIABLE>=<VARIABLE>$?</VARIABLE>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$status</VARIABLE> -ne 0
    <KEYWORD>then</KEYWORD>
        die <STRING>"Note: command '$@' returned status <VARIABLE>$status</VARIABLE>.  Aborting."</STRING>
    <KEYWORD>fi</KEYWORD>
}

try_regedit() {
    try early_wine regedit <STRING>"$@"</STRING>
}

regedit() {
    die oops, bug, please report
}

<COMMENT># verify an sha1sum</COMMENT>
verify_sha1sum() {
    <VARIABLE>wantsum</VARIABLE>=<VARIABLE>$1</VARIABLE>
    <VARIABLE>file</VARIABLE>=<VARIABLE>$2</VARIABLE>

    <VARIABLE>gotsum</VARIABLE>=<KEYWORD>`</KEYWORD><VARIABLE>$SHA1SUM</VARIABLE> <KEYWORD>&lt;</KEYWORD> <VARIABLE>$file</VARIABLE> | <FUNCTION>sed</FUNCTION> <STRING>'s/ .*//'</STRING><KEYWORD>`</KEYWORD>
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>$gotsum</VARIABLE>"</STRING>x != <STRING>"<VARIABLE>$wantsum</VARIABLE>"</STRING>x <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
       die <STRING>"sha1sum mismatch!  Rename <VARIABLE>$file</VARIABLE> and try again."</STRING>
    <KEYWORD>fi</KEYWORD>
}

<COMMENT># Download a file</COMMENT>
<COMMENT># Usage: package url [sha1sum [filename]]</COMMENT>
<COMMENT># Caches downloads in winetrickscache/$package</COMMENT>
download() {
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>$4</VARIABLE>"</STRING>x != <STRING>""</STRING>x <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        <VARIABLE>file</VARIABLE>=<STRING>"<VARIABLE>$4</VARIABLE>"</STRING>
    <KEYWORD>else</KEYWORD>
        <VARIABLE>file</VARIABLE>=<KEYWORD>`</KEYWORD><FUNCTION>basename</FUNCTION> <STRING>"<VARIABLE>$2</VARIABLE>"</STRING><KEYWORD>`</KEYWORD>
    <KEYWORD>fi</KEYWORD>
    <VARIABLE>cache</VARIABLE>=<STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>/<VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>mkdir</FUNCTION> -p <STRING>"<VARIABLE>$cache</VARIABLE>"</STRING>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -f <STRING>"<VARIABLE>$cache</VARIABLE>/<VARIABLE>$file</VARIABLE>"</STRING>
    <KEYWORD>then</KEYWORD>
        <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$cache</VARIABLE>"</STRING>
        <COMMENT># Mac folks tend to have curl rather than wget</COMMENT>
        <COMMENT># On Mac, 'which' doesn't return good exit status</COMMENT>
        <COMMENT># Need to jam in --header "Accept-Encoding: gzip,deflate" else</COMMENT>
        <COMMENT># redhat.com decompresses liberation-fonts.tar.gz!</COMMENT>
        <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> -x <STRING>"`which wget`"</STRING> <KEYWORD>]</KEYWORD>
        <KEYWORD>then</KEYWORD>
           <COMMENT># Use -nd to insulate ourselves from people who set -x in WGETRC</COMMENT>
           <COMMENT># [*] --retry-connrefused works around the broken sf.net mirroring</COMMENT>
           <COMMENT># system when downloading corefonts</COMMENT>
           <COMMENT># [*] --read-timeout is useful on the adobe server that doesn't</COMMENT>
           <COMMENT># close the connection unless you tell it to (control-C or closing</COMMENT>
           <COMMENT># the socket)</COMMENT>
           try wget -O <STRING>"<VARIABLE>$file</VARIABLE>"</STRING> -nd -c --read-timeout=300 --retry-connrefused --header <STRING>"Accept-Encoding: gzip,deflate"</STRING> <STRING>"<VARIABLE>$2</VARIABLE>"</STRING>
        <KEYWORD>else</KEYWORD>
           <COMMENT># curl doesn't get filename from the location given by the server!</COMMENT>
           <COMMENT># fortunately, we know it</COMMENT>
           try curl -L -o <STRING>"<VARIABLE>$file</VARIABLE>"</STRING> -C - --header <STRING>"Accept-Encoding: gzip,deflate"</STRING> <STRING>"<VARIABLE>$2</VARIABLE>"</STRING>
        <KEYWORD>fi</KEYWORD>
        <COMMENT># Need to decompress .exe's that are compressed, else cygwin fails</COMMENT>
        <COMMENT># Only affects cygwin, so don't barf if 'file' not installed</COMMENT>
        <VARIABLE>FILE</VARIABLE>=<KEYWORD>`</KEYWORD><FUNCTION>which</FUNCTION> <FUNCTION>file</FUNCTION><KEYWORD>`</KEYWORD>
        <KEYWORD>case</KEYWORD> <VARIABLE>$FILE</VARIABLE>-<VARIABLE>$file</VARIABLE> <KEYWORD>in</KEYWORD>
        /*-*.exe)
            <KEYWORD>case</KEYWORD> <KEYWORD>`</KEYWORD><FUNCTION>file</FUNCTION> <VARIABLE>$file</VARIABLE><KEYWORD>`</KEYWORD> <KEYWORD>in</KEYWORD>
            *<FUNCTION>gzip</FUNCTION>*) <FUNCTION>mv</FUNCTION> <VARIABLE>$file</VARIABLE> <VARIABLE>$file</VARIABLE>.gz; gunzip <KEYWORD>&lt;</KEYWORD> <VARIABLE>$file</VARIABLE>.gz <KEYWORD>&gt;</KEYWORD> <VARIABLE>$file</VARIABLE>;;
            <KEYWORD>esac</KEYWORD>
        <KEYWORD>esac</KEYWORD>
           
        <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
    <KEYWORD>fi</KEYWORD>
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>$3</VARIABLE>"</STRING>x != <STRING>""</STRING>x <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        verify_sha1sum <VARIABLE>$3</VARIABLE>  <STRING>"<VARIABLE>$cache</VARIABLE>/<VARIABLE>$file</VARIABLE>"</STRING>
    <KEYWORD>fi</KEYWORD>
}

set_winver() {
    <FUNCTION>echo</FUNCTION> <STRING>"Setting Windows version to <VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/set-winver.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Software\Wine]</HEREDOC>
<HEREDOC>"Version"="$1"</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/set-winver.reg
}

set_app_winver() {
    <VARIABLE>app</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <VARIABLE>version</VARIABLE>=<STRING>"<VARIABLE>$2</VARIABLE>"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"Setting <VARIABLE>$app</VARIABLE> to <VARIABLE>$version</VARIABLE> mode"</STRING>
    (
    <FUNCTION>echo</FUNCTION> <CONSTANT>REGEDIT4</CONSTANT>
    <FUNCTION>echo</FUNCTION> <STRING>""</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"[HKEY_CURRENT_USER<ESC>\\</ESC>Software<ESC>\\</ESC>Wine<ESC>\\</ESC>AppDefaults<ESC>\\</ESC><VARIABLE>$app</VARIABLE>]"</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"<ESC>\"</ESC>Version<ESC>\"</ESC>=<ESC>\"</ESC><VARIABLE>$version</VARIABLE><ESC>\"</ESC>"</STRING>
    ) <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/set-winver.reg

    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/set-winver.reg
    <FUNCTION>rm</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/set-winver.reg
}

set_orm() {
    <FUNCTION>echo</FUNCTION> <STRING>"Setting OffscreenRenderingMode to <VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/set-orm.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Software\Wine\Direct3D]</HEREDOC>
<HEREDOC>"OffscreenRenderingMode"="$1"</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/set-orm.reg
}

set_sound_driver() {
    <FUNCTION>echo</FUNCTION> <STRING>"Setting sound driver to to <VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/set-sound.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Software\Wine\Drivers]</HEREDOC>
<HEREDOC>"Audio"="$1"</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/set-sound.reg
}

disable_crashdialog() {
    <FUNCTION>echo</FUNCTION> <STRING>"Disabling graphical crash dialog"</STRING>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/crashdialog.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Software\Wine\WineDbg]</HEREDOC>
<HEREDOC>"ShowCrashDialog"=dword:00000000</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/crashdialog.reg
}

sandbox() {
    <COMMENT># remove symlinks</COMMENT>
    try <FUNCTION>rm</FUNCTION> <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>/drive_c/users/<VARIABLE>$USER</VARIABLE>/Desktop"</STRING>
    try <FUNCTION>rm</FUNCTION> <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>/drive_c/users/<VARIABLE>$USER</VARIABLE>/My Documents"</STRING>
    try <FUNCTION>rm</FUNCTION> <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>/drive_c/users/<VARIABLE>$USER</VARIABLE>/My Music"</STRING>
    try <FUNCTION>rm</FUNCTION> <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>/drive_c/users/<VARIABLE>$USER</VARIABLE>/My Pictures"</STRING>
    try <FUNCTION>rm</FUNCTION> <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>/drive_c/users/<VARIABLE>$USER</VARIABLE>/My Videos"</STRING>
    <COMMENT># create replacement directories</COMMENT>
    try <FUNCTION>mkdir</FUNCTION> <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>/drive_c/users/<VARIABLE>$USER</VARIABLE>/Desktop"</STRING>
    try <FUNCTION>mkdir</FUNCTION> <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>/drive_c/users/<VARIABLE>$USER</VARIABLE>/My Documents"</STRING>
    try <FUNCTION>mkdir</FUNCTION> <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>/drive_c/users/<VARIABLE>$USER</VARIABLE>/My Music"</STRING>
    try <FUNCTION>mkdir</FUNCTION> <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>/drive_c/users/<VARIABLE>$USER</VARIABLE>/My Pictures"</STRING>
    try <FUNCTION>mkdir</FUNCTION> <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>/drive_c/users/<VARIABLE>$USER</VARIABLE>/My Videos"</STRING>
}

unset_winver() {
    <FUNCTION>echo</FUNCTION> <STRING>"Clearing Windows version back to default"</STRING>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/unset-winver.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Software\Wine]</HEREDOC>
<HEREDOC>"Version"=-</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/unset-winver.reg
}

override_dlls() {
    <VARIABLE>mode</VARIABLE>=<VARIABLE>$1</VARIABLE>
    <FUNCTION>shift</FUNCTION>
    <FUNCTION>echo</FUNCTION> Using <VARIABLE>$mode</VARIABLE> override <KEYWORD>for</KEYWORD> following DLLs: <VARIABLE>$@</VARIABLE>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/override-dll.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Software\Wine\DllOverrides]</HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    <KEYWORD>while</KEYWORD> <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$1</VARIABLE>"</STRING> != <STRING>""</STRING>
    <KEYWORD>do</KEYWORD>
        <KEYWORD>case</KEYWORD> <STRING>"<VARIABLE>$1</VARIABLE>"</STRING> <KEYWORD>in</KEYWORD>
        comctl32)
           <FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/winsxs/manifests/x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.2600.2982_none_deadbeef.manifest
           ;;
        <KEYWORD>esac</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"<ESC>\"</ESC><VARIABLE>$1</VARIABLE><ESC>\"</ESC>=<ESC>\"</ESC><VARIABLE>$mode</VARIABLE><ESC>\"</ESC>"</STRING> <KEYWORD>&gt;&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/override-dll.reg
        <FUNCTION>shift</FUNCTION>
    <KEYWORD>done</KEYWORD>

    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/override-dll.reg
    <FUNCTION>rm</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/override-dll.reg
}

override_app_dlls() {
    <VARIABLE>app</VARIABLE>=<VARIABLE>$1</VARIABLE>
    <FUNCTION>shift</FUNCTION>
    <VARIABLE>mode</VARIABLE>=<VARIABLE>$1</VARIABLE>
    <FUNCTION>shift</FUNCTION>
    <FUNCTION>echo</FUNCTION> Using <VARIABLE>$mode</VARIABLE> override <KEYWORD>for</KEYWORD> following DLLs when running <VARIABLE>$app</VARIABLE>: <VARIABLE>$@</VARIABLE>
    (
    <FUNCTION>echo</FUNCTION> <CONSTANT>REGEDIT4</CONSTANT>
    <FUNCTION>echo</FUNCTION> <STRING>""</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"[HKEY_CURRENT_USER<ESC>\\</ESC>Software<ESC>\\</ESC>Wine<ESC>\\</ESC>AppDefaults<ESC>\\</ESC><VARIABLE>$app</VARIABLE><ESC>\\</ESC>DllOverrides]"</STRING>
    ) <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/override-dll.reg

    <KEYWORD>while</KEYWORD> <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$1</VARIABLE>"</STRING> != <STRING>""</STRING>
    <KEYWORD>do</KEYWORD>
        <KEYWORD>case</KEYWORD> <STRING>"<VARIABLE>$1</VARIABLE>"</STRING> <KEYWORD>in</KEYWORD>
        comctl32)
           <FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/winsxs/manifests/x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.2600.2982_none_deadbeef.manifest
           ;;
        <KEYWORD>esac</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"<ESC>\"</ESC><VARIABLE>$1</VARIABLE><ESC>\"</ESC>=<ESC>\"</ESC><VARIABLE>$mode</VARIABLE><ESC>\"</ESC>"</STRING> <KEYWORD>&gt;&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/override-dll.reg
        <FUNCTION>shift</FUNCTION>
    <KEYWORD>done</KEYWORD>

    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/override-dll.reg
    <FUNCTION>rm</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/override-dll.reg
}

register_font() {
    <VARIABLE>file</VARIABLE>=<VARIABLE>$1</VARIABLE>
    <FUNCTION>shift</FUNCTION>
    <VARIABLE>font</VARIABLE>=<VARIABLE>$1</VARIABLE>
    <COMMENT>#echo "Registering $file as $font"</COMMENT>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/register-font.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Fonts]</HEREDOC>
<HEREDOC>"$font"="$file"</HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    <COMMENT># too verbose</COMMENT>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/register-font.reg
}

append_path() {
<COMMENT># Get the %PATH%</COMMENT>
<VARIABLE>WIN_PATH</VARIABLE>=<STRING>"`WINEDEBUG= <VARIABLE>$WINE</VARIABLE> cmd.exe /c echo "</STRING>%<CONSTANT>PATH</CONSTANT>%<STRING>"`"</STRING>

<COMMENT># Set the path. Make sure to not remove any other variables in %PATH% set by the user/other programs:</COMMENT>
    <VARIABLE>NEW_PATH</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/path.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\Environment]</HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>

    <FUNCTION>printf</FUNCTION> <STRING>'"PATH"="'</STRING> <KEYWORD>&gt;&gt;</KEYWORD><STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/path.reg
    <FUNCTION>printf</FUNCTION> <STRING>"<VARIABLE>$NEW_PATH</VARIABLE>;<VARIABLE>$WIN_PATH</VARIABLE>"</STRING><STRING>'<ESC>\"</ESC>'</STRING> | <FUNCTION>sed</FUNCTION> <STRING>"s/<ESC>\\</ESC><ESC>\\</ESC>/<ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC>/g"</STRING> <KEYWORD>&gt;&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/path.reg

    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/path.reg
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/path.reg

}
<COMMENT>#----- common download for several verbs</COMMENT>
helper_directx_dl() {
    <COMMENT># Aug 2009 DirectX 9c User Redistributable</COMMENT>
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?displaylang=en&amp;FamilyID=04ac064b-00d1-474e-b7b1-442d8712d553</COMMENT>
    download . http://download.microsoft.com/download/B/7/9/B79FC9D7-47B8-48B7-A75E-101DEBEB5AB4/directx_aug2009_redist.exe 563b96a3d78d6038d10428f23954f083320b4019

    <VARIABLE>DIRECTX_NAME</VARIABLE>=directx_aug2009_redist.exe
}

<COMMENT>#----- One function per package, in alphabetical order ----------</COMMENT>

load_art2kmin() {
    <COMMENT># See http://www.microsoft.com/downloads/details.aspx?familyid=d9ae78d9-9dc6-4b38-9fa6-2c745a175aed&amp;displaylang=en</COMMENT>
    download . http://download.microsoft.com/download/D/2/A/D2A2FC8B-0447-491C-A5EF-E8AA3A74FB98/AccessRuntime.exe 571811b7536e97cf4e4e53bbf8260cddd69f9b2d
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>
    try <VARIABLE>$WINE</VARIABLE> AccessRuntime.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_atmlib() {
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?FamilyID=1001AAF1-749F-49F4-8010-297BD6CA33A0&amp;displaylang=en</COMMENT>
    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> This is a huge download for a single dll.</COMMENT>
    download . http://download.microsoft.com/download/E/6/A/E6A04295-D2A8-40D0-A0C5-241BFECD095E/<CONSTANT>W2KSP4_EN</CONSTANT>.EXE fadea6d94a014b039839fecc6e6a11c20afa4fa8
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>
    try cabextract <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<CONSTANT>W2KSP4_EN</CONSTANT>.EXE i386/atmlib.dl_
    try <FUNCTION>cp</FUNCTION> atmlib.dll <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32
    try <FUNCTION>rm</FUNCTION> -rf i386
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_autohotkey() {
    download . http://www.autohotkey.net/programs/AutoHotkey104805_Install.exe 13e5a9ca6d5b7705f1cd02560c3af4d38b1904fc
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/AutoHotkey104805_Install.exe <VARIABLE>$WINETRICKS_S</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_cc580() {
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?familyid=6f94d31a-d1e0-4658-a566-93af0d8d4a1e</COMMENT>
    download . http://download.microsoft.com/download/platformsdk/redist/5.80.2614.3600/w9xnt4/en-us/cc32inst.exe 94c3c494258cc54bd65d2f0153815737644bffde

    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/cc32inst.exe <STRING>"/T:<VARIABLE>$winetricks_tmp_win</VARIABLE>"</STRING> /c <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
    try unzip -o <VARIABLE>$WINETRICKS_UNIXQUIET</VARIABLE> -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/temp <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/comctl32.exe
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/temp/x86/50ComUpd.Exe <STRING>"/T:<VARIABLE>$winetricks_tmp_win</VARIABLE>"</STRING> /c <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
    try <FUNCTION>cp</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/comcnt.dll <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/comctl32.dll

    override_dlls native,<FUNCTION>builtin</FUNCTION> comctl32

    <COMMENT># some builtin apps don't like native comctl32</COMMENT>
    override_app_dlls winecfg.exe <FUNCTION>builtin</FUNCTION> comctl32
    override_app_dlls explorer.exe <FUNCTION>builtin</FUNCTION> comctl32
    override_app_dlls iexplore.exe <FUNCTION>builtin</FUNCTION> comctl32
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_cmake() {
    download . http://www.cmake.org/files/v2.6/cmake-2.6.4-win32-x86.exe 00bd502423546b8bce19ffc180ea78e0e2f396cf
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/cmake-2.6.4-win32-x86.exe
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_comctl32ocx() {
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?FamilyID=25437D98-51D0-41C1-BB14-64662F5F62FE</COMMENT>
    download . http://download.microsoft.com/download/3/a/5/3a5925ac-e779-4b1c-bb01-af67dc2f96fc/VisualBasic6-KB896559-v1-ENU.exe f52cf2034488235b37a1da837d1c40eb2a1bad84

    try cabextract -q --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/VisualBasic6-KB896559-v1-ENU.exe
    try <FUNCTION>cp</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/mscomctl.ocx <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/mscomctl.ocx
    try <FUNCTION>cp</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/comctl32.ocx <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/comctl32.ocx
    try <VARIABLE>$WINE</VARIABLE> regsvr32 comctl32.ocx
    try <VARIABLE>$WINE</VARIABLE> regsvr32 mscomctl.ocx
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_colorprofile() {
    download . http://download.microsoft.com/download/whistler/hwdev1/1.0/wxp/en-us/ColorProfile.exe 6b72836b32b343c82d0760dff5cb51c2f47170eb
    try unzip -o <VARIABLE>$WINETRICKS_UNIXQUIET</VARIABLE> -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/ColorProfile.exe
    <FUNCTION>mkdir</FUNCTION> -p <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/spool/drivers/color
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/sRGB Color Space Profile.icm"</STRING> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/spool/drivers/color
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_controlpad() {
    <COMMENT># http://msdn.microsoft.com/en-us/library/ms968493.aspx</COMMENT>
    <COMMENT># Fixes error "Failed to load UniText..."</COMMENT>
    load_wsh56
    download . http://download.microsoft.com/download/activexcontrolpad/<FUNCTION>install</FUNCTION>/4.0.0.950/win98mexp/en-us/setuppad.exe 8921e0f52507ca6a373c94d222777c750fb48af7
    try cabextract --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/setuppad.exe
    <FUNCTION>echo</FUNCTION> <STRING>"If setup says 'Unable to start DDE ...', press Ignore"</STRING>
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/setup <VARIABLE>$WINETRICKS_QUIET_T</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_corefonts() {
    <COMMENT># See http://corefonts.sf.net</COMMENT>
    <COMMENT># <COMMENT_NOTE>TODO:</COMMENT_NOTE> let user pick mirror,</COMMENT>
    <COMMENT># see http://corefonts.sourceforge.net/msttcorefonts-2.0-1.spec for how</COMMENT>
    <COMMENT># <COMMENT_NOTE>TODO:</COMMENT_NOTE> add more fonts</COMMENT>

    <COMMENT># Added More Fonts (see msttcorefonts)</COMMENT>
    <COMMENT># [*] Pointed download locations to sites that actually contained the</COMMENT>
    <COMMENT># fonts to download (as of 04-03-2008)</COMMENT>
    <COMMENT>#download . $SOURCEFORGE/corefonts/andale32.exe c4db8cbe42c566d12468f5fdad38c43721844c69</COMMENT>
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/corefonts/arial32.exe 6d75f8436f39ab2da5c31ce651b7443b4ad2916e
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/corefonts/arialb32.exe d45cdab84b7f4c1efd6d1b369f50ed0390e3d344
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/corefonts/comic32.exe 2371d0327683dcc5ec1684fe7c275a8de1ef9a51
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/corefonts/courie32.exe 06a745023c034f88b4135f5e294fece1a3c1b057
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/corefonts/georgi32.exe 90e4070cb356f1d811acb943080bf97e419a8f1e
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/corefonts/impact32.exe 86b34d650cfbbe5d3512d49d2545f7509a55aad2
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/corefonts/times32.exe 20b79e65cdef4e2d7195f84da202499e3aa83060
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/corefonts/trebuc32.exe 50aab0988423efcc9cf21fac7d64d534d6d0a34a
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/corefonts/verdan32.exe f5b93cedf500edc67502f116578123618c64a42a
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/corefonts/webdin32.exe 2fb4a42c53e50bc70707a7b3c57baf62ba58398f

    <COMMENT># Natively installed versions of these fonts will cause the installers</COMMENT>
    <COMMENT># to exit silently. Because there are apps out there that depend on the</COMMENT>
    <COMMENT># files being present in the Windows font directory we use cabextract</COMMENT>
    <COMMENT># to obtain the files and register the fonts by hand.</COMMENT>

    <COMMENT># Andale needs a FontSubstitutes entry</COMMENT>
    <COMMENT># try cabextract --directory="$WINETRICKS_TMP" "$WINETRICKS_CACHE"/andale32.exe</COMMENT>

    <COMMENT># Display EULA</COMMENT>
    <FUNCTION>test</FUNCTION> x<STRING>"<VARIABLE>$WINETRICKS_QUIET</VARIABLE>"</STRING> = x<STRING>""</STRING> || try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/arial32.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>

    try cabextract -q --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/arial32.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/Arial*.TTF <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font Arial.TTF <STRING>"Arial (TrueType)"</STRING>
    register_font Arialbd.TTF <STRING>"Arial Bold (TrueType)"</STRING>
    register_font Arialbi.TTF <STRING>"Arial Bold Italic (TrueType)"</STRING>
    register_font Ariali.TTF <STRING>"Arial Italic (TrueType)"</STRING>

    try cabextract -q --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/arialb32.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/AriBlk.TTF <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font AriBlk.TTF <STRING>"Arial Black (TrueType)"</STRING>

    try cabextract -q --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/comic32.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/Comic*.TTF <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font Comic.TTF <STRING>"Comic Sans MS (TrueType)"</STRING>
    register_font Comicbd.TTF <STRING>"Comic Sans MS Bold (TrueType)"</STRING>

    try cabextract -q --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/courie32.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/cour*.ttf <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font Cour.TTF <STRING>"Courier New (TrueType)"</STRING>
    register_font CourBD.TTF <STRING>"Courier New Bold (TrueType)"</STRING>
    register_font CourBI.TTF <STRING>"Courier New Bold Italic (TrueType)"</STRING>
    register_font Couri.TTF <STRING>"Courier New Italic (TrueType)"</STRING>

    try cabextract -q --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/georgi32.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/Georgia*.TTF <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font Georgia.TTF <STRING>"Georgia (TrueType)"</STRING>
    register_font Georgiab.TTF <STRING>"Georgia Bold (TrueType)"</STRING>
    register_font Georgiaz.TTF <STRING>"Georgia Bold Italic (TrueType)"</STRING>
    register_font Georgiai.TTF <STRING>"Georgia Italic (TrueType)"</STRING>

    try cabextract -q --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/impact32.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/Impact.TTF <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font Impact.TTF <STRING>"Impact (TrueType)"</STRING>

    try cabextract -q --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/times32.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/Times*.TTF <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font Times.TTF <STRING>"Times New Roman (TrueType)"</STRING>
    register_font Timesbd.TTF <STRING>"Times New Roman Bold (TrueType)"</STRING>
    register_font Timesbi.TTF <STRING>"Times New Roman Bold Italic (TrueType)"</STRING>
    register_font Timesi.TTF <STRING>"Times New Roman Italic (TrueType)"</STRING>

    try cabextract -q --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/trebuc32.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/trebuc*.ttf <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font Trebuc.TTF <STRING>"Trebucet MS (TrueType)"</STRING>
    register_font Trebucbd.TTF <STRING>"Trebucet MS Bold (TrueType)"</STRING>
    register_font Trebucbi.TTF <STRING>"Trebucet MS Bold Italic (TrueType)"</STRING>
    register_font Trebucit.TTF <STRING>"Trebucet MS Italic (TrueType)"</STRING>

    try cabextract -q --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/verdan32.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/Verdana*.TTF <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font Verdana.TTF <STRING>"Verdana (TrueType)"</STRING>
    register_font Verdanab.TTF <STRING>"Verdana Bold (TrueType)"</STRING>
    register_font Verdanaz.TTF <STRING>"Verdana Bold Italic (TrueType)"</STRING>
    register_font Verdanai.TTF <STRING>"Verdana Italic (TrueType)"</STRING>

    try cabextract -q --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/webdin32.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/Webdings.TTF <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font Webdings.TTF <STRING>"Webdings (TrueType)"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_cygwin() {
    download cygwin http://cygwin.com/setup.exe 5cfb8ebe4f385b0fcffa04d22d607ec75ea05180
    <FUNCTION>mkdir</FUNCTION> -p <STRING>"<VARIABLE>$DRIVE_C</VARIABLE>"</STRING>/cygpkgs
    <FUNCTION>cp</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>/cygwin/setup.exe"</STRING> <STRING>"<VARIABLE>$DRIVE_C</VARIABLE>"</STRING>/cygpkgs
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$DRIVE_C</VARIABLE>"</STRING>/cygpkgs
    try <VARIABLE>$WINE</VARIABLE> setup.exe
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_d3dx9() {
    helper_directx_dl

    <COMMENT># Kinder, less invasive directx - only extract and override d3dx9_??.dll</COMMENT>
    cabextract -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> -L -F <STRING>'*d3dx9*x86*'</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<VARIABLE>$DIRECTX_NAME</VARIABLE>
    <KEYWORD>for</KEYWORD> x <KEYWORD>in</KEYWORD> <KEYWORD>`</KEYWORD><FUNCTION>ls</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/*.cab<KEYWORD>`</KEYWORD>
    <KEYWORD>do</KEYWORD>
      cabextract -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32 -L -F <STRING>'*.dll'</STRING> <STRING>"<VARIABLE>$x</VARIABLE>"</STRING>
    <KEYWORD>done</KEYWORD>

    <COMMENT># For now, not needed, but when Wine starts preferring our builtin dll over native it will be.</COMMENT>
    override_dlls native d3dx9_24 d3dx9_25 d3dx9_26 d3dx9_27 d3dx9_28 d3dx9_29 d3dx9_30
    override_dlls native d3dx9_31 d3dx9_32 d3dx9_33 d3dx9_34 d3dx9_35 d3dx9_36 d3dx9_37
    override_dlls native d3dx9_38 d3dx9_39 d3dx9_40 d3dx9_41 d3dx9_42
}

<COMMENT>#----------------------------------------------------------------</COMMENT>
load_dinput8() {
    helper_directx_dl

    cabextract -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> -L -F <STRING>'dxnt.cab'</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<VARIABLE>$DIRECTX_NAME</VARIABLE>
    cabextract -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32 -L -F <STRING>'dinput8.dll'</STRING> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/dxnt.cab"</STRING>

    try <VARIABLE>$WINE</VARIABLE> regsvr32 dinput8

    override_dlls native dinput8
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_dirac08() {
    download . http://codecpack.<FUNCTION>nl</FUNCTION>/dirac_dsfilter_080.exe aacfcddf6b2636de5f0a50422ba9155e395318af
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dirac_dsfilter_080.exe <VARIABLE>$WINETRICKS_SILENT</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_directplay() {
    helper_directx_dl

    cabextract -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> -L -F dxnt.cab <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<VARIABLE>$DIRECTX_NAME</VARIABLE>
    cabextract -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32 -L -F <STRING>'dplaysvr.exe'</STRING> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/dxnt.cab"</STRING>
    cabextract -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32 -L -F <STRING>'dplayx.dll'</STRING> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/dxnt.cab"</STRING>
    cabextract -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32 -L -F <STRING>'dpnet.dll'</STRING> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/dxnt.cab"</STRING>
    cabextract -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32 -L -F <STRING>'dpnhpast.dll'</STRING> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/dxnt.cab"</STRING>
    cabextract -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32 -L -F <STRING>'dpwsockx.dll'</STRING> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/dxnt.cab"</STRING>

    try <VARIABLE>$WINE</VARIABLE> regsvr32 dplayx.dll
    try <VARIABLE>$WINE</VARIABLE> regsvr32 dpnet.dll
    try <VARIABLE>$WINE</VARIABLE> regsvr32 dpnhpast.dll

    override_dlls native dplayx dpnet dpnhpast dpwsockx
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_directx9() {
    helper_directx_dl

    <COMMENT># Stefan suggested that, when installing, one should override as follows:</COMMENT>
    <COMMENT># 1) use builtin wintrust (we don't run native properly somehow?)</COMMENT>
    <COMMENT># 2) disable mscoree (else if it's present some module misbehaves?)</COMMENT>
    <COMMENT># 3) override native any directx DLL whose Wine version doesn't register itself well yet</COMMENT>
    <COMMENT># For #3, I have no idea which DLLs don't register themselves well yet,</COMMENT>
    <COMMENT># so I'm just listing a few of the basic ones.  Let's whittle that</COMMENT>
    <COMMENT># list down as soon as we can.</COMMENT>
    <FUNCTION>echo</FUNCTION> <STRING>"You probably shouldn't be using this. It's VERY invasive."</STRING>
    <FUNCTION>echo</FUNCTION> <STRING>"Use 'winetricks d3dx9' instead."</STRING>
    set_winver win2k
    <VARIABLE>WINEDLLOVERRIDES</VARIABLE>=<STRING>"wintrust=b,mscoree=,ddraw,d3d8,d3d9,dsound,dinput=n"</STRING> \
       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<VARIABLE>$DIRECTX_NAME</VARIABLE> /t:<STRING>"<VARIABLE>$WINETRICKS_TMP_WIN</VARIABLE>"</STRING> <VARIABLE>$WINETRICKS_QUIET</VARIABLE>

    <COMMENT># How many of these do we really need?</COMMENT>
    <COMMENT># We should probably remove most of these...?</COMMENT>
    override_dlls native d3dim d3drm d3dx8 d3dx9_24 d3dx9_25 d3dx9_26 d3dx9_27 d3dx9_28 d3dx9_29
    override_dlls native d3dx9_30 d3dx9_31 d3dx9_32 d3dx9_33 d3dx9_34 d3dx9_35 d3dx9_36 d3dx9_37
    override_dlls native d3dx9_38 d3dx9_39 d3dx9_40 d3dx9_41 d3dx9_42 d3dxof
    override_dlls native dciman32 ddrawex devenum dmband dmcompos dmime dmloader dmscript dmstyle
    override_dlls native dmsynth dmusic dmusic32 dnsapi dplay dplayx dpnaddr dpnet dpnhpast dpnlobby
    override_dlls native dswave dxdiagn mscoree msdmo qcap quartz streamci
    override_dlls <FUNCTION>builtin</FUNCTION> d3d8 d3d9 dinput dinput8 dsound

    <COMMENT># Should be below, but fails on Wine when used silently.</COMMENT>
    <COMMENT>#if [ $WINETRICKS_QUIET ]</COMMENT>
    <COMMENT>#then</COMMENT>
    <COMMENT>#    try $WINE "$WINETRICKS_TMP_WIN"/DXSETUP.exe /silent</COMMENT>
    <COMMENT>#else</COMMENT>
    <COMMENT>#    try $WINE "$WINETRICKS_TMP_WIN"/DXSETUP.exe</COMMENT>
    <COMMENT>#fi</COMMENT>

    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_TMP_WIN</VARIABLE>"</STRING>/<CONSTANT>DXSETUP</CONSTANT>.exe

    unset_winver
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_divx() {
    <COMMENT># 6.8.2: 02203fdc4dddd13e789c39b22902837da31d2a1d ?</COMMENT>
    <COMMENT># 6.8.2: e36bf87c1675d0cf9169839bc0cd8f866b9db026 as of 4 Jun 2008 as http://download.divx.com/divx/DivXInstaller.exe</COMMENT>
    <COMMENT># 6.8.3: f4f4387ef89316aea440a29f3e24c1f1945e14af as of 20 Jun 2008 as http://download.divx.com/divx/abt/b1/DivXInstaller.exe</COMMENT>
    <COMMENT># 6.8.4: c5fcb1465a1bb24d1c104c2588fdb6706d1e1476 as of 10 Jul 2008 as http://download.divx.com/divx/abt/b1/DivXInstaller.exe</COMMENT>
    <COMMENT># 6.8.4: d28a2b041f4af45d22c4dedfe7608f2958cf997d as of 23 Aug 2008 as http://download.divx.com/divx/DivXInstaller.exe</COMMENT>

    <COMMENT># 7.? 4d91ef90ae26a6088851560c4263ef0cdbf09123 as of 22 Mar 2009 as http://download.divx.com/divx/DivXInstaller.exe</COMMENT>
    <COMMENT># 7.0.? 19c9ba3104025d1fab335e405e7f411dfbbcb477 as of 28 May 2009 as http://download.divx.com/divx/DivXInstaller.exe</COMMENT>
    <COMMENT># 7.0.? 786aef0f421df5e7358d2d740d9911f9afd055de as of 24 June 2009 as http://download.divx.com/divx/DivXInstaller.exe</COMMENT>
    <COMMENT># 7.0.? ad420bf8bf72e924e658c9c6ad6bba76b848fb79 as of 23 Sep 2009 as http://download.divx.com/divx/DivXInstaller.exe</COMMENT>
    <COMMENT># 7.0.? 3385aa8f6ba64ae32e06f651bbbea247bcc1a44d as of 12 Dec 2009 as http://download.divx.com/divx/DivXInstaller.exe</COMMENT>
    
    download divx-7 http://download.divx.com/divx/DivXInstaller.exe 3385aa8f6ba64ae32e06f651bbbea247bcc1a44d

    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/divx-7/DivXInstaller
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_dcom98() {
    <COMMENT># Install native dcom per http://wiki.winehq.org/NativeDcom</COMMENT>
    <COMMENT># to avoid http://bugs.winehq.org/show_bug.cgi?id=4228</COMMENT>
    <COMMENT># See http://www.microsoft.com/downloads/details.aspx?familyid=08b1ac1b-7a11-43e8-b59d-0867f9bdda66</COMMENT>
    download . http://download.microsoft.com/download/d/1/3/d13cd456-f0cf-4fb2-a17f-20afc79f8a51/<CONSTANT>DCOM98</CONSTANT>.EXE aff002bd03f17340b2bef2e6b9ea8e3798e9ccc1

    <COMMENT># Pick win98 so we can install native dcom</COMMENT>
    set_winver win98

    <COMMENT># Avoid "err:setupapi:SetupDefaultQueueCallbackA copy error 5 ..."</COMMENT>
    <COMMENT># Those messages are suspect, probably shouldn't be err's.</COMMENT>
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/ole32.dll
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/olepro32.dll
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/oleaut32.dll
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/rpcrt4.dll

    <COMMENT># Normally only need to override ole32, but overriding advpack</COMMENT>
    <COMMENT># as well gets us the correct exit status.</COMMENT>
    <VARIABLE>WINEDLLOVERRIDES</VARIABLE>=<STRING>"ole32,advpack=n"</STRING> try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<CONSTANT>DCOM98</CONSTANT>.EXE <VARIABLE>$WINETRICKS_QUIET</VARIABLE>

    <COMMENT># Set native DCOM by default for all apps (ok, this might be overkill)</COMMENT>
    override_dlls native,<FUNCTION>builtin</FUNCTION> ole32 oleaut32 rpcrt4

    <COMMENT># but not for a few builtin apps that don't like it</COMMENT>
    override_app_dlls explorer.exe <FUNCTION>builtin</FUNCTION> ole32 oleaut32 rpcrt4
    override_app_dlls iexplore.exe <FUNCTION>builtin</FUNCTION> ole32 oleaut32 rpcrt4
    override_app_dlls services.exe <FUNCTION>builtin</FUNCTION> ole32 oleaut32 rpcrt4
    override_app_dlls wineboot.exe <FUNCTION>builtin</FUNCTION> ole32 oleaut32 rpcrt4
    override_app_dlls winedevice.exe <FUNCTION>builtin</FUNCTION> ole32 oleaut32 rpcrt4

    <COMMENT># and undo version win98</COMMENT>
    unset_winver
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_dotnet11() {
    <VARIABLE>DOTNET_INSTALL_DIR</VARIABLE>=<STRING>"<VARIABLE>$WINDIR</VARIABLE>/Microsoft.NET/Framework/v1.1.4322"</STRING>

    <COMMENT># If this is just a dependency check, don't re-install</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != dotnet11 &amp;&amp; <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$DOTNET_INSTALL_DIR</VARIABLE>"</STRING>
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"prerequisite dotnet11 already installed, skipping"</STRING>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>

    <COMMENT># need corefonts, else installer crashes</COMMENT>
    load_corefonts

    <COMMENT># http://www.microsoft.com/downloads/details.aspx?FamilyId=262D25E3-F589-4842-8157-034D1E7CF3A3</COMMENT>
    download dotnet11 http://download.microsoft.com/download/a/a/c/aac39226-8825-44ce-90e3-bf8203e74006/dotnetfx.exe 16a354a2207c4c8846b617cbc78f7b7c1856340e
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$WINETRICKS_QUIET</VARIABLE> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet11/dotnetfx.exe /q /C:<STRING>"install /q"</STRING>
    <KEYWORD>else</KEYWORD>
        try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet11/dotnetfx.exe
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_dotnet11sdk() {
    load_dotnet11

    warn <STRING>"Installer hangs at end... not sure if it works fully."</STRING>
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?familyid=9B3A2CA6-3647-4070-9F41-A333C6B9181D</COMMENT>
    download dotnet11sdk http://download.microsoft.com/download/5/2/0/5202f918-306e-426d-9637-d7ee26fbe507/setup.exe 9509b14924bcaf84a7780de3f6ad7894004c3450
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet11sdk
    try <VARIABLE>$WINE</VARIABLE> setup.exe
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_dotnet20() {
    <COMMENT># If this is just a dependency check, don't re-install</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != dotnet20 &amp;&amp; <FUNCTION>test</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/l_intl.nls
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"prerequisite dotnet20 already installed, skipping"</STRING>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>
    warn <STRING>"Instaling .net 2.0 runtime.  Can take several minutes.  See http://wiki.winehq.org/MicrosoftDotNet for tips."</STRING>

    <COMMENT># Recipe from http://bugs.winehq.org/show_bug.cgi?id=10467#c57</COMMENT>
    <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>/gecko"</STRING> || <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>/system32/gecko"</STRING> || load_gecko
    set_winver win2k
    <COMMENT># See http://kegel.com/wine/l_intl-sh.txt for how l_intl.nls was generated</COMMENT>
    download dotnet20 http://kegel.com/wine/l_intl.nls 0d2e3f025bcdf852b192c9408a361ac2659fa249
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet20/l_intl.nls <STRING>"<VARIABLE>$WINDIR</VARIABLE>/system32/"</STRING>

    <COMMENT># http://www.microsoft.com/downloads/details.aspx?FamilyID=0856eacb-4362-4b0d-8edd-aab15c5e04f5</COMMENT>
    download dotnet20 http://download.microsoft.com/download/5/6/7/567758a3-759e-473e-bf8f-52154438565a/dotnetfx.exe a3625c59d7a2995fb60877b5f5324892a1693b2a
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_QUIET</VARIABLE>"</STRING>x = <STRING>""</STRING>x <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet20/dotnetfx.exe
    <KEYWORD>else</KEYWORD>
       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet20/dotnetfx.exe /q /c:<STRING>"install.exe /q"</STRING>
    <KEYWORD>fi</KEYWORD>
    unset_winver
}
<COMMENT>#----------------------------------------------------------------</COMMENT>

load_dotnet20sp2() {
    warn <STRING>"Instaling .net 2.0 runtime.  Can take several minutes.  See http://wiki.winehq.org/MicrosoftDotNet for tips."</STRING>

    <COMMENT># Recipe from http://bugs.winehq.org/show_bug.cgi?id=10467#c57</COMMENT>
    <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>/gecko"</STRING> || <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>/system32/gecko"</STRING> || load_gecko
    <COMMENT>#set_winver win2k</COMMENT>
    <COMMENT># See http://kegel.com/wine/l_intl-sh.txt for how l_intl.nls was generated</COMMENT>
    download dotnet20 http://kegel.com/wine/l_intl.nls 0d2e3f025bcdf852b192c9408a361ac2659fa249
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet20/l_intl.nls <STRING>"<VARIABLE>$WINDIR</VARIABLE>/system32/"</STRING>

    <COMMENT># http://www.microsoft.com/downloads/details.aspx?familyid=5B2C0358-915B-4EB5-9B1D-10E506DA9D0F</COMMENT>
    download dotnet20 http://download.microsoft.com/download/c/6/e/c6e88215-0178-4c6c-b5f3-158ff77b1f38/NetFx20SP2_x86.exe 22d776d4d204863105a5db99e8b8888be23c61a7
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_QUIET</VARIABLE>"</STRING>x = <STRING>""</STRING>x <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet20/NetFx20SP2_x86.exe
    <KEYWORD>else</KEYWORD>
       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet20/NetFx20SP2_x86.exe /q /c:<STRING>"install.exe /q"</STRING>
    <KEYWORD>fi</KEYWORD>
    unset_winver
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_dotnet20sdk() {
    load_dotnet20

    <COMMENT># http://www.microsoft.com/downloads/details.aspx?familyid=9B3A2CA6-3647-4070-9F41-A333C6B9181D</COMMENT>
    download dotnet20sdk http://download.microsoft.com/download/c/4/b/c4b15d7d-6f37-4d5a-b9c6-8f07e7d46635/setup.exe 4e4b1072b5e65e855358e2028403f2dc52a62ab4
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet20sdk
    try <VARIABLE>$WINE</VARIABLE> setup.exe
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_dotnet30() {
    <COMMENT># If this is just a dependency check, don't re-install</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != dotnet30 &amp;&amp; <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>/Microsoft.NET/Framework/v3.0/Microsoft .NET Framework 3.0"</STRING>
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"prerequisite dotnet30 already installed, skipping"</STRING>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>

    warn <STRING>"Instaling .net 3.0 runtime.  Can take 15-30 minutes.  See http://wiki.winehq.org/MicrosoftDotNet for tips."</STRING>
    load_dotnet20

    <COMMENT># http://msdn.microsoft.com/en-us/netframework/bb264589.aspx</COMMENT>
    download dotnet30 http://download.microsoft.com/download/3/F/0/3F0A922C-F239-4B9B-9CB0-DF53621C57D9/dotnetfx3.exe f3d2c3c7e4c0c35450cf6dab1f9f2e9e7ff50039

    <FUNCTION>export</FUNCTION> <CONSTANT>_SFX_CAB_SHUTDOWN_REQUEST</CONSTANT>=1
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_QUIET</VARIABLE>"</STRING>x = <STRING>""</STRING>x <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet30/dotnetfx3.exe
    <KEYWORD>else</KEYWORD>
       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet30/dotnetfx3.exe /q /c:<STRING>"install.exe /q"</STRING>
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_dotnet35() {
    warn <STRING>"This does not work yet"</STRING>

    <COMMENT># According to AF's recipe, installing dotnet30 first works around msi bugs</COMMENT>
    load_dotnet30

    <COMMENT># http://www.microsoft.com/downloads/details.aspx?FamilyId=333325FD-AE52-4E35-B531-508D977D32A6</COMMENT>
    download dotnet35 http://download.microsoft.com/download/6/0/f/60fc5854-3cb8-4892-b6db-bd4f42510f28/dotnetfx35.exe 

    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_QUIET</VARIABLE>"</STRING>x = <STRING>""</STRING>x <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet35/dotnetfx35.exe
    <KEYWORD>else</KEYWORD>
       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/dotnet35/dotnetfx35.exe /q /c:<STRING>"install.exe /q"</STRING>
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

do_droid() {
    download . <KEYWORD>${</KEYWORD><CONSTANT>DROID_URL</CONSTANT><KEYWORD>}</KEYWORD><VARIABLE>$1</VARIABLE><STRING>';hb=HEAD'</STRING>   <VARIABLE>$3</VARIABLE>  <VARIABLE>$1</VARIABLE>
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<VARIABLE>$1</VARIABLE> <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font <VARIABLE>$1</VARIABLE> <STRING>"<VARIABLE>$2</VARIABLE>"</STRING>
}

load_droid() {
    <COMMENT># See http://en.wikipedia.org/wiki/Droid_(font)</COMMENT>
    <VARIABLE>DROID_URL</VARIABLE>=<STRING>'http://android.git.kernel.org/?p=platform/frameworks/base.git;a=blob_plain;f=data/fonts/'</STRING>

    do_droid DroidSans-Bold.ttf        <STRING>"Droid Sans Bold"</STRING>         ada4e79c592f3c54546b7587b48f2b232d95ce2f
    do_droid DroidSansFallback.ttf     <STRING>"Droid Sans Fallback"</STRING>     2f8a266389a8e22f68f402b775731eec6b760334
    do_droid DroidSansJapanese.ttf     <STRING>"Droid Sans Japanese"</STRING>     b3a248c11692aa88a30eb25df425b8910fe05dc5
    do_droid DroidSansMono.ttf         <STRING>"Droid Sans Mono"</STRING>         f0815c6f36c72be1d0f2f5e2b82fa85c8bf95655
    do_droid DroidSans.ttf             <STRING>"Droid Sans"</STRING>              da5b3c7758a2c8fbc4775beb69d7150493c7d312
    do_droid DroidSerif-BoldItalic.ttf <STRING>"Droid Serif Bold Italic"</STRING> c1602dc11bf0f7131aec21c7c3888195ad78e486
    do_droid DroidSerif-Bold.ttf       <STRING>"Droid Serif Bold"</STRING>        d7896b9c0723299553e95a00d27cbe52f7515c8c
    do_droid DroidSerif-Italic.ttf     <STRING>"Droid Serif Italic"</STRING>      117941be102c8f38a86a70ebccaecb8078f7027e
    do_droid DroidSerif-Regular.ttf    <STRING>"Droid Serif"</STRING>             7f243858e496ed1bb1faca9f3a7bbe52defcbb5d
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

<COMMENT># Fake IE per workaround in http://bugs.winehq.org/show_bug.cgi?id=3453</COMMENT>
<COMMENT># Just the first registry key works for most apps.</COMMENT>
<COMMENT># The App Paths part is required by a few apps, like Quickbooks Pro;</COMMENT>
<COMMENT># see http://windowsxp.mvps.org/ie/qbooks.htm</COMMENT>
set_fakeie6() {

    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fakeie6.reg &lt;&lt;<DELIMITER>"_EOF_"</DELIMITER><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer]</HEREDOC>
<HEREDOC>"Version"="6.0.2900.2180"</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\App Paths\IEXPLORE.EXE]</HEREDOC>
<HEREDOC></HEREDOC><DELIMITER>_EOF_</DELIMITER>

    <FUNCTION>echo</FUNCTION> -n <STRING>'@="'</STRING> <KEYWORD>&gt;&gt;</KEYWORD><STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fakeie6.reg
    <FUNCTION>echo</FUNCTION> -n <STRING>"<VARIABLE>${programfilesdir_win}</VARIABLE>"</STRING> | <FUNCTION>sed</FUNCTION> <STRING>"s/<ESC>\\</ESC><ESC>\\</ESC>/<ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC>/"</STRING> <KEYWORD>&gt;&gt;</KEYWORD><STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fakeie6.reg
    <FUNCTION>echo</FUNCTION> <STRING>'<ESC>\\</ESC><ESC>\\</ESC>Internet Explorer<ESC>\\</ESC><ESC>\\</ESC>iexplore.exe"'</STRING> <KEYWORD>&gt;&gt;</KEYWORD><STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fakeie6.reg

    <FUNCTION>echo</FUNCTION> -n <STRING>'"PATH"="'</STRING> <KEYWORD>&gt;&gt;</KEYWORD><STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fakeie6.reg
    <FUNCTION>echo</FUNCTION> -n <STRING>"<VARIABLE>${programfilesdir_win}</VARIABLE>"</STRING> | <FUNCTION>sed</FUNCTION> <STRING>"s/<ESC>\\</ESC><ESC>\\</ESC>/<ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC>/"</STRING> <KEYWORD>&gt;&gt;</KEYWORD><STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fakeie6.reg
    <FUNCTION>echo</FUNCTION> <STRING>'<ESC>\\</ESC><ESC>\\</ESC>Internet Explorer"'</STRING> <KEYWORD>&gt;&gt;</KEYWORD><STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fakeie6.reg

    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fakeie6.reg

    <COMMENT># On old wineprefixes iexplore.exe is not created. Create a fake dll using</COMMENT>
    <COMMENT># shdocvw.dll that should have similar VERSIONINFO.</COMMENT>
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> ! -f <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/Internet Explorer/iexplore.exe"</STRING> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"You have an old wineprefix without iexplore.exe. Will create a fake now"</STRING>
        <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> ! -d <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/Internet Explorer/iexplore.exe"</STRING> <KEYWORD>]</KEYWORD>
        <KEYWORD>then</KEYWORD>
            try <FUNCTION>mkdir</FUNCTION> <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/Internet Explorer"</STRING>;
        <KEYWORD>fi</KEYWORD>
        try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>/system32/shdocvw.dll"</STRING> <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/Internet Explorer/iexplore.exe"</STRING>
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_firefox() {
    download . <STRING>"http://releases.mozilla.org//pub/mozilla.org/firefox/releases/3.5.5/win32/en-US/Firefox%20Setup%203.5.5.exe"</STRING> 39126be271b28ef50c48e3acbe52ee83bbf31066 <STRING>"Firefox Setup 3.5.5.exe"</STRING>
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_QUIET</VARIABLE>"</STRING>x = <STRING>""</STRING>x <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<STRING>"Firefox Setup 3.5.5.exe"</STRING>
    <KEYWORD>else</KEYWORD>
       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<STRING>"Firefox Setup 3.5.5.exe"</STRING> -ms
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_ffdshow() {
    <COMMENT># ffdshow</COMMENT>
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/ffdshow-tryout/ffdshow_beta5_rev2033_20080705_clsid.exe 6da6837e2f400923ff5294a6591a88a3eee5ee40
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/ffdshow_beta5_rev2033_20080705_clsid.exe <VARIABLE>$WINETRICKS_SILENT</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_flash() {
    <COMMENT># www.adobe.com/products/flashplayer/</COMMENT>

    <COMMENT># Active X plugin</COMMENT>
    <COMMENT># http://blogs.adobe.com/psirt/2008/03/preparing_for_april_flash_play.html</COMMENT>
    <COMMENT># http://fpdownload.macromedia.com/get/flashplayer/current/licensing/win/install_flash_player_active_x.msi</COMMENT>
    <COMMENT># 2008-04-01: old version sha1sum f4dd1c0c715b791db2c972aeba90d3b78372996a</COMMENT>
    <COMMENT># 2008-04-18: new version sha1sum 04ac79c4f1eb1e1ca689f27fa71f12bb5cd11cc2</COMMENT>
    <COMMENT># Version 10 http://fpdownload.macromedia.com/get/flashplayer/current/install_flash_player_ax.exe</COMMENT>
    <COMMENT># 2008-11-27: 10 sha1sum 7f6850ae815e953311bb94a8aa9d226f97a646dd</COMMENT>
    <COMMENT># 2009-02-27: sha1sum 86745020a25edc9695a1a6a4d59eae375665a0b3</COMMENT>
    <COMMENT># 2009-07-31: sha1sum 11a81ad1b19344c28b1e1249169f15dfbd2a04f5</COMMENT>
    <COMMENT># 2009-12-09: sha1sum f4ec0e95099e354fd01cd3bb27c202f54932dc70</COMMENT>

    download . http://fpdownload.macromedia.com/get/flashplayer/current/install_flash_player_ax.exe f4ec0e95099e354fd01cd3bb27c202f54932dc70
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/install_flash_player_ax.exe <VARIABLE>$WINETRICKS_S</VARIABLE>

    <COMMENT># Mozilla / Firefox plugin</COMMENT>
    <COMMENT># 2008-07-22: sha1sum 1e6f7627784a5b791e99ae9ad63133dc11c7940b</COMMENT>
    <COMMENT># 2008-11-27: sha1sum 20ec0300a8cae19105c903a7ec6c0801e016beb0</COMMENT>
    <COMMENT># 2009-02-27: sha1sum 770db9ad471ffd4357358bc16ff0bb6c98d71e5d</COMMENT>
    <COMMENT># 2009-07-31: sha1sum 9590fb87cc33d3a3a1f2f42a1918f06b9f0fd88d</COMMENT>
    <COMMENT># 2009-12-09: sha1sum ccb4811b1cc26721c4abb2e5a080868acdee7b87</COMMENT>
    
    download . http://fpdownload.macromedia.com/get/flashplayer/current/install_flash_player.exe ccb4811b1cc26721c4abb2e5a080868acdee7b87
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/install_flash_player.exe <VARIABLE>$WINETRICKS_S</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_fontfix() {
    <COMMENT># some versions of ukai.ttf and uming.ttf crash .net and picasa</COMMENT>
    <COMMENT># See http://bugs.winehq.org/show_bug.cgi?id=7098#c9</COMMENT>
    <COMMENT># Could fix globally, but that needs root, so just fix for wine</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> -f /usr/share/fonts/truetype/arphic/ukai.ttf
    <KEYWORD>then</KEYWORD>
        <VARIABLE>gotsum</VARIABLE>=<KEYWORD>`</KEYWORD><VARIABLE>$SHA1SUM</VARIABLE> <KEYWORD>&lt;</KEYWORD> /usr/share/fonts/truetype/arphic/ukai.ttf | <FUNCTION>sed</FUNCTION> <STRING>'s/ .*//'</STRING><KEYWORD>`</KEYWORD>
        <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> do all affected versions of the font have same sha1sum as Gutsy?  Seems unlikely.</COMMENT>
        <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>$gotsum</VARIABLE>"</STRING>x = <STRING>"96e1121f89953e5169d3e2e7811569148f573985"</STRING>x <KEYWORD>]</KEYWORD>
        <KEYWORD>then</KEYWORD>
            download . https://launchpadlibrarian.net/1499628/ttf-arphic-ukai_0.1.20060108.orig.<FUNCTION>tar</FUNCTION>.gz 92e577602d71454a108968e79ab667451f3602a2
            <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/"</STRING>
            gunzip -dc <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>/ttf-arphic-ukai_0.1.20060108.orig.tar.gz"</STRING> | <FUNCTION>tar</FUNCTION> -xf -
            try <FUNCTION>mv</FUNCTION> ttf-arphic-ukai-0.1.20060108/*.ttf <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
            <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
        <KEYWORD>fi</KEYWORD>
    <KEYWORD>fi</KEYWORD>

    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> -f /usr/share/fonts/truetype/arphic/uming.ttf
    <KEYWORD>then</KEYWORD>
        <VARIABLE>gotsum</VARIABLE>=<KEYWORD>`</KEYWORD><VARIABLE>$SHA1SUM</VARIABLE> <KEYWORD>&lt;</KEYWORD> /usr/share/fonts/truetype/arphic/uming.ttf | <FUNCTION>sed</FUNCTION> <STRING>'s/ .*//'</STRING><KEYWORD>`</KEYWORD>
        <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>$gotsum</VARIABLE>"</STRING>x = <STRING>"2a4f4a69e343c21c24d044b2cb19fd4f0decc82c"</STRING>x <KEYWORD>]</KEYWORD>
        <KEYWORD>then</KEYWORD>
            download . https://launchpadlibrarian.net/1564410/ttf-arphic-uming_0.1.20060108.orig.<FUNCTION>tar</FUNCTION>.gz 1439cdd731906e9e5311f320c2cb33262b24ef91
            <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/"</STRING>
            gunzip -dc <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>/ttf-arphic-uming_0.1.20060108.orig.tar.gz"</STRING> | <FUNCTION>tar</FUNCTION> -xf -
            try <FUNCTION>mv</FUNCTION> ttf-arphic-uming-0.1.20060108/*.ttf <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
            <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
        <KEYWORD>fi</KEYWORD>
    <KEYWORD>fi</KEYWORD>

    <COMMENT># Focht says Samyak is bad news, and font substitution isn't a good workaround.</COMMENT>
    <KEYWORD>if</KEYWORD> xlsfonts | <FUNCTION>grep</FUNCTION> -i samyak
    <KEYWORD>then</KEYWORD>
        warn <STRING>"Please uninstall the Samyak font.  It has been known to cause problems."</STRING>
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>
load_fs_disable() {
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fs_disable.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Control Panel\Desktop]</HEREDOC>
<HEREDOC>"FontSmoothing"="0"</HEREDOC>
<HEREDOC>"FontSmoothingGamma"=dword:00000578</HEREDOC>
<HEREDOC>"FontSmoothingOrientation"=dword:00000001</HEREDOC>
<HEREDOC>"FontSmoothingType"=dword:00000000</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fs_disable.reg
}
<COMMENT>#----------------------------------------------------------------</COMMENT>
load_fs_grayscale() {
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fs_grayscale.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Control Panel\Desktop]</HEREDOC>
<HEREDOC>"FontSmoothing"="2"</HEREDOC>
<HEREDOC>"FontSmoothingGamma"=dword:00000578</HEREDOC>
<HEREDOC>"FontSmoothingOrientation"=dword:00000001</HEREDOC>
<HEREDOC>"FontSmoothingType"=dword:00000001</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fs_grayscale.reg
}
<COMMENT>#----------------------------------------------------------------</COMMENT>
load_fs_bgr() {
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fs_bgr.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Control Panel\Desktop]</HEREDOC>
<HEREDOC>"FontSmoothing"="2"</HEREDOC>
<HEREDOC>"FontSmoothingGamma"=dword:00000578</HEREDOC>
<HEREDOC>"FontSmoothingOrientation"=dword:00000000</HEREDOC>
<HEREDOC>"FontSmoothingType"=dword:00000002</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fs_bgr.reg
}
<COMMENT>#----------------------------------------------------------------</COMMENT>
load_fs_rgb() {
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fs_rgb.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Control Panel\Desktop]</HEREDOC>
<HEREDOC>"FontSmoothing"="2"</HEREDOC>
<HEREDOC>"FontSmoothingGamma"=dword:00000578</HEREDOC>
<HEREDOC>"FontSmoothingOrientation"=dword:00000001</HEREDOC>
<HEREDOC>"FontSmoothingType"=dword:00000002</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/fs_rgb.reg
}
<COMMENT>#----------------------------------------------------------------</COMMENT>

load_gecko() {
    <COMMENT># Load the HTML rendering Engine (Gecko)</COMMENT>
    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> shouldn't this code be in some script installed</COMMENT>
    <COMMENT># as part of Wine instead of in winetricks?</COMMENT>
    <COMMENT># (e.g. we hardcode gecko's url here, but it's normally</COMMENT>
    <COMMENT># only hardcoded in wine.inf, and fetched from the registry thereafter,</COMMENT>
    <COMMENT># so we're adding a maintenance burden here.)</COMMENT>
    <KEYWORD>case</KEYWORD> <KEYWORD>`</KEYWORD><VARIABLE>$WINE</VARIABLE> --version<KEYWORD>`</KEYWORD> <KEYWORD>in</KEYWORD>
    wine-0*|wine-1.0*|wine-1.1|wine-1.1.?|wine-1.1.11)
        <VARIABLE>GECKO_DIR</VARIABLE>=<STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>
        <VARIABLE>GECKO_VERSION</VARIABLE>=0.1.0
        <VARIABLE>GECKO_SHA1SUM</VARIABLE>=c16f1072dc6b0ced20935662138dcf019a38cd56
        ;;
    wine-1.1.1<KEYWORD>[</KEYWORD>234<KEYWORD>]</KEYWORD>*)
        <VARIABLE>GECKO_DIR</VARIABLE>=<STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>
        <VARIABLE>GECKO_VERSION</VARIABLE>=0.9.0
        <VARIABLE>GECKO_SHA1SUM</VARIABLE>=5cf410ff7fdd3f9d625f481f9d409968728d3d09
        ;;
    wine-1.1.1<KEYWORD>[</KEYWORD>56789<KEYWORD>]</KEYWORD>*|wine-1.1.2<KEYWORD>[</KEYWORD>0123456<KEYWORD>]</KEYWORD>*)
        <VARIABLE>GECKO_DIR</VARIABLE>=<STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>
        <VARIABLE>GECKO_VERSION</VARIABLE>=0.9.1
        <VARIABLE>GECKO_SHA1SUM</VARIABLE>=9a49fc691740596517e381b47096a4bdf19a87d8
        ;;
    *)
        <VARIABLE>GECKO_DIR</VARIABLE>=<STRING>"<VARIABLE>$WINDIR</VARIABLE>/system32"</STRING>
        <VARIABLE>GECKO_VERSION</VARIABLE>=1.0.0
        <VARIABLE>GECKO_ARCH</VARIABLE>=-x86
        <VARIABLE>GECKO_SHA1SUM</VARIABLE>=afa22c52bca4ca77dcb9edb3c9936eb23793de01
        ;;
    <KEYWORD>esac</KEYWORD>

    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -f <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/wine_gecko-<VARIABLE>$GECKO_VERSION</VARIABLE><VARIABLE>$GECKO_ARCH</VARIABLE>.cab
    <KEYWORD>then</KEYWORD>
       <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> busted if using curl!</COMMENT>
       download . <STRING>"http://downloads.sourceforge.net/wine/wine_gecko-<VARIABLE>$GECKO_VERSION</VARIABLE><VARIABLE>$GECKO_ARCH</VARIABLE>.cab"</STRING> \
                <VARIABLE>$GECKO_SHA1SUM</VARIABLE> wine_gecko-<VARIABLE>$GECKO_VERSION</VARIABLE><VARIABLE>$GECKO_ARCH</VARIABLE>.cab
    <KEYWORD>fi</KEYWORD>

    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/geckopath.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\\Software\\Wine\\MSHTML\\$GECKO_VERSION]</HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>

    <FUNCTION>printf</FUNCTION> <STRING>'"GeckoPath"="'</STRING> <KEYWORD>&gt;&gt;</KEYWORD><STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/geckopath.reg
    <KEYWORD>case</KEYWORD> <VARIABLE>$GECKO_VERSION</VARIABLE> <KEYWORD>in</KEYWORD>
    0.*)
        <FUNCTION>printf</FUNCTION> <STRING>'c:<ESC>\\</ESC>windows<ESC>\\</ESC>gecko<ESC>\\</ESC>'</STRING><VARIABLE>$GECKO_VERSION</VARIABLE><STRING>'<ESC>\\</ESC>wine_gecko<ESC>\\</ESC>"'</STRING> |
           <FUNCTION>sed</FUNCTION> <STRING>"s/<ESC>\\</ESC><ESC>\\</ESC>/<ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC>/g"</STRING> <KEYWORD>&gt;&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/geckopath.reg
        ;;
    1.*)
        <FUNCTION>printf</FUNCTION> <STRING>'c:<ESC>\\</ESC>windows<ESC>\\</ESC>system32<ESC>\\</ESC>gecko<ESC>\\</ESC>'</STRING><VARIABLE>$GECKO_VERSION</VARIABLE><STRING>'<ESC>\\</ESC>wine_gecko<ESC>\\</ESC>"'</STRING> |
           <FUNCTION>sed</FUNCTION> <STRING>"s/<ESC>\\</ESC><ESC>\\</ESC>/<ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC>/g"</STRING> <KEYWORD>&gt;&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/geckopath.reg
        ;;
    <KEYWORD>esac</KEYWORD>

    <COMMENT># extract the files</COMMENT>
    <FUNCTION>mkdir</FUNCTION> -p <STRING>"<VARIABLE>$GECKO_DIR</VARIABLE>/gecko/<VARIABLE>$GECKO_VERSION</VARIABLE>"</STRING>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$GECKO_DIR</VARIABLE>/gecko/<VARIABLE>$GECKO_VERSION</VARIABLE>"</STRING>
    try cabextract <VARIABLE>$WINETRICKS_UNIXQUIET</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/wine_gecko-<VARIABLE>$GECKO_VERSION</VARIABLE><VARIABLE>$GECKO_ARCH</VARIABLE>.cab
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>

    <COMMENT># set install-path</COMMENT>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/geckopath.reg
    
    <COMMENT># register the dll, since it was disabled before</COMMENT>
    try <VARIABLE>$WINE</VARIABLE> regsvr32 mshtml
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_gecko_dbg() {
    <COMMENT># Load the HTML rendering Engine (Gecko), with debugging symbols</COMMENT>
    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> shouldn't this code be in some script installed</COMMENT>
    <COMMENT># as part of Wine instead of in winetricks?</COMMENT>
    <COMMENT># (e.g. we hardcode gecko's url here, but it's normally</COMMENT>
    <COMMENT># only hardcoded in wine.inf, and fetched from the registry thereafter,</COMMENT>
    <COMMENT># so we're adding a maintenance burden here.)</COMMENT>
    <KEYWORD>case</KEYWORD> <KEYWORD>`</KEYWORD><VARIABLE>$WINE</VARIABLE> --version<KEYWORD>`</KEYWORD> <KEYWORD>in</KEYWORD>
    wine-0*|wine-1.0*|wine-1.1|wine-1.1.?|wine-1.1.11)
        die <STRING>"There isn't a gecko debug build for your Wine version."</STRING>
        ;;
    wine-1.1.1<KEYWORD>[</KEYWORD>234<KEYWORD>]</KEYWORD>*)
        <VARIABLE>GECKO_DIR</VARIABLE>=<STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>
        <VARIABLE>GECKO_VERSION</VARIABLE>=0.9.0
        <VARIABLE>GECKO_SHA1SUM</VARIABLE>=23e354a82d7b7e61a6abe0384cc44669fbf92f86
        ;;
    wine-1.1.1<KEYWORD>[</KEYWORD>56789<KEYWORD>]</KEYWORD>*|wine-1.1.2<KEYWORD>[</KEYWORD>0123456<KEYWORD>]</KEYWORD>*)
        <VARIABLE>GECKO_DIR</VARIABLE>=<STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>
        <VARIABLE>GECKO_VERSION</VARIABLE>=0.9.1
        <VARIABLE>GECKO_SHA1SUM</VARIABLE>=a9b58d3330f8c78524fe4683f348302bfce96ff4
        ;;
    *)
        <VARIABLE>GECKO_DIR</VARIABLE>=<STRING>"<VARIABLE>$WINDIR</VARIABLE>/system32"</STRING>
        <VARIABLE>GECKO_VERSION</VARIABLE>=1.0.0
        <VARIABLE>GECKO_ARCH</VARIABLE>=-x86
        <VARIABLE>GECKO_SHA1SUM</VARIABLE>=2de16b443826295f646cd5d54313ca421fd71210
        ;;
    <KEYWORD>esac</KEYWORD>

    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -f <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/wine_gecko-<VARIABLE>$GECKO_VERSION</VARIABLE><VARIABLE>$GECKO_ARCH</VARIABLE>-dbg.cab
    <KEYWORD>then</KEYWORD>
       <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> busted if using curl!</COMMENT>
       download . <STRING>"http://downloads.sourceforge.net/wine/wine_gecko-<VARIABLE>$GECKO_VERSION</VARIABLE><VARIABLE>$GECKO_ARCH</VARIABLE>-dbg.cab"</STRING> <VARIABLE>$GECKO_SHA1SUM</VARIABLE> wine_gecko-<VARIABLE>$GECKO_VERSION</VARIABLE><VARIABLE>$GECKO_ARCH</VARIABLE>-dbg.cab
    <KEYWORD>fi</KEYWORD>

    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/geckopath.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\\Software\\Wine\\MSHTML\\$GECKO_VERSION]</HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>

    <FUNCTION>printf</FUNCTION> <STRING>'"GeckoPath"="'</STRING> <KEYWORD>&gt;&gt;</KEYWORD><STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/geckopath.reg
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> ! <STRING>"<VARIABLE>$GECKO_VERSION</VARIABLE>"</STRING> = <STRING>"1.0.0"</STRING> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        <FUNCTION>printf</FUNCTION> <STRING>'c:<ESC>\\</ESC>windows<ESC>\\</ESC>gecko<ESC>\\</ESC>'</STRING><VARIABLE>$GECKO_VERSION</VARIABLE><STRING>'<ESC>\\</ESC>wine_gecko<ESC>\\</ESC>"'</STRING> | <FUNCTION>sed</FUNCTION> <STRING>"s/<ESC>\\</ESC><ESC>\\</ESC>/<ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC>/g"</STRING> <KEYWORD>&gt;&gt;</KEYWORD><STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/geckopath.reg
    <KEYWORD>else</KEYWORD>
        <FUNCTION>printf</FUNCTION> <STRING>'c:<ESC>\\</ESC>windows<ESC>\\</ESC>system32<ESC>\\</ESC>gecko<ESC>\\</ESC>'</STRING><VARIABLE>$GECKO_VERSION</VARIABLE><STRING>'<ESC>\\</ESC>wine_gecko<ESC>\\</ESC>"'</STRING> | <FUNCTION>sed</FUNCTION> <STRING>"s/<ESC>\\</ESC><ESC>\\</ESC>/<ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC><ESC>\\</ESC>/g"</STRING> <KEYWORD>&gt;&gt;</KEYWORD><STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/geckopath.reg
    <KEYWORD>fi</KEYWORD>

    <COMMENT># extract the files</COMMENT>
    <FUNCTION>mkdir</FUNCTION> -p <STRING>"<VARIABLE>$GECKO_DIR</VARIABLE>/gecko/<VARIABLE>$GECKO_VERSION</VARIABLE>"</STRING>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$GECKO_DIR</VARIABLE>/gecko/<VARIABLE>$GECKO_VERSION</VARIABLE>"</STRING>
    try cabextract <VARIABLE>$WINETRICKS_UNIXQUIET</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/wine_gecko-<VARIABLE>$GECKO_VERSION</VARIABLE><VARIABLE>$GECKO_ARCH</VARIABLE>-dbg.cab
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>

    <COMMENT># set install-path</COMMENT>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/geckopath.reg
    
    <COMMENT># register the dll, since it was disabled before</COMMENT>
    try <VARIABLE>$WINE</VARIABLE> regsvr32 mshtml
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_gdiplus() {
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?familyid=6A63AB9C-DF12-4D41-933C-BE590FEAA05A&amp;displaylang=en</COMMENT>
    download . http://download.microsoft.com/download/a/b/c/abc45517-97a0-4cee-a362-1957be2f24e1/WindowsXP-KB975337-x86-ENU.exe b9a84bc3de92863bba1f5eb1d598446567fbc646
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/WindowsXP-KB975337-x86-ENU.exe /extract:<VARIABLE>$WINETRICKS_TMP_WIN</VARIABLE> <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
    <COMMENT># And then make it globally available.</COMMENT>
    try <FUNCTION>cp</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/asms/10/msft/windows/gdiplus/gdiplus.dll"</STRING> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/

    <COMMENT># For some reason, native,builtin isn't good enough...?</COMMENT>
    override_dlls native gdiplus
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_glsl_disable() {
    <FUNCTION>echo</FUNCTION> <STRING>"Disabling GLSL"</STRING>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/disableglsl.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Software\Wine\Direct3D]</HEREDOC>
<HEREDOC>"UseGLSL"="disabled"</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/disableglsl.reg
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_glsl_enable() {
    <FUNCTION>echo</FUNCTION> <STRING>"Enabling GLSL"</STRING>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/enableglsl.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_CURRENT_USER\Software\Wine\Direct3D]</HEREDOC>
<HEREDOC>"UseGLSL"="enabled"</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/enableglsl.reg
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_hosts() {
    <COMMENT># Create fake system32\drivers\etc\hosts and system32\drivers\etc\services files.</COMMENT>
    <COMMENT># The hosts file is used to map network names to IP addresses without DNS.</COMMENT>
    <COMMENT># The services file is used map service names to network ports.</COMMENT>
    <COMMENT># Some apps depend on these files, but they're not implemented in wine.</COMMENT>
    <COMMENT># Fortunately, empty files in the correct location satisfy those apps.</COMMENT>
    <COMMENT># See http://bugs.winehq.org/show_bug.cgi?id=12076</COMMENT>
    <FUNCTION>mkdir</FUNCTION> -p <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/drivers/etc
    <FUNCTION>touch</FUNCTION> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/drivers/etc/hosts
    <FUNCTION>touch</FUNCTION> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/drivers/etc/services
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

set_heapcheck() {
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/heapcheck.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager]</HEREDOC>
<HEREDOC>"GlobalFlag"=dword:00200030</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/heapcheck.reg
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_icodecs() {
    <COMMENT># http://downloadcenter.intel.com/Detail_Desc.aspx?strState=LIVE&amp;ProductID=355&amp;DwnldID=2846</COMMENT>
    download . http://downloadmirror.intel.com/2846/eng/codinstl.exe 2c5d64f472abe3f601ce352dcca75b4f02996f8a
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/codinstl.exe
    <COMMENT># Work around bug in codec's installer?</COMMENT>
    <COMMENT># http://support.britannica.com/other/touchthesky/win/issues/TSTUw_150.htm</COMMENT>
    <COMMENT># http://appdb.winehq.org/objectManager.php?sClass=version&amp;iId=7091</COMMENT>
    try <VARIABLE>$WINE</VARIABLE> regsvr32 ir50_32.dll
}

<COMMENT>#----------------------------------------------------------------</COMMENT>
load_ie6() {
    load_msls31

    <COMMENT># Unregister Wine IE</COMMENT>
    try <VARIABLE>$WINE</VARIABLE> iexplore -unregserver

    <COMMENT># Change the override to the native so we are sure we use and register them</COMMENT>
    override_dlls native,<FUNCTION>builtin</FUNCTION> iexplore.exe itircl itss jscript mlang mshtml msimtf shdoclc shdocvw shlwapi urlmon

    <COMMENT># Remove the fake dlls, if any</COMMENT>
    <FUNCTION>mv</FUNCTION> <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>"</STRING>/<STRING>"Internet Explorer"</STRING>/iexplore.exe <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>"</STRING>/<STRING>"Internet Explorer"</STRING>/iexplore.exe.bak
    <KEYWORD>for</KEYWORD> dll <KEYWORD>in</KEYWORD> itircl itss jscript mlang mshtml msimtf shdoclc shdocvw shlwapi urlmon
    <KEYWORD>do</KEYWORD>
        <FUNCTION>test</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/<VARIABLE>$dll</VARIABLE>.dll &amp;&amp;
          <FUNCTION>mv</FUNCTION> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/<VARIABLE>$dll</VARIABLE>.dll <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/<VARIABLE>$dll</VARIABLE>.dll.bak
    <KEYWORD>done</KEYWORD>

    <COMMENT># The installer doesn't want to install iexplore.exe in XP mode.</COMMENT>
    set_winver win2k

    <COMMENT># Workaround a IE6 Installer bug, not Wine's fault</COMMENT>
    <COMMENT># See http://bugs.winehq.org/show_bug.cgi?id=5409</COMMENT>
    <COMMENT># Actual value downloaded doesn't matter</COMMENT>
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/ie6sites.dat
    download . http://www.microsoft.com/windows/ie/ie6sp1/download/rtw/x86/ie6sites.dat

    <COMMENT># Install</COMMENT>
    download . http://download.microsoft.com/download/ie6sp1/finrel/6_sp1/W98NT42KMeXP/EN-US/ie6setup.exe f3ab61a785eb9611fa583612e83f3b69377f2cef
    
    <COMMENT># Workaround http://bugs.winehq.org/show_bug.cgi?id=21009</COMMENT>
    <COMMENT># See also http://code.google.com/p/winezeug/issues/detail?id=78</COMMENT>
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/browseui.dll <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/inseng.dll

    <COMMENT># Silent install recipe from:</COMMENT>
    <COMMENT># http://www.axonpro.sk/japo/info/MS/SILENT%20INSTALL/Unattended-Silent%20Installation%20Switches%20for%20Windows%20Apps.htm</COMMENT>
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$WINETRICKS_QUIET</VARIABLE> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/ie6setup.exe /q:a /r:n /c:<STRING>"ie6wzd /S:"</STRING><STRING>"#e"</STRING><STRING>" /q:a /r:n"</STRING>
    <KEYWORD>else</KEYWORD>
        <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/ie6setup.exe
    <KEYWORD>fi</KEYWORD>
    <COMMENT># IE6 exits with 194 to signal a reboot</COMMENT>
    <VARIABLE>status</VARIABLE>=<VARIABLE>$?</VARIABLE>
    <KEYWORD>case</KEYWORD> <VARIABLE>$status</VARIABLE> <KEYWORD>in</KEYWORD>
    0|194) ;;
    *) die ie6 installation failed
    <KEYWORD>esac</KEYWORD>

    <COMMENT># Work around DLL registration bug until ierunonce/RunOnce/wineboot is fixed</COMMENT>
    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> whittle down this list</COMMENT>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/
    <KEYWORD>for</KEYWORD> i <KEYWORD>in</KEYWORD> actxprxy.dll browseui.dll browsewm.dll cdfview.dll ddraw.dll \
      dispex.dll dsound.dll iedkcs32.dll iepeers.dll iesetup.dll \
      imgutil.dll inetcomm.dll inseng.dll isetup.dll jscript.dll laprxy.dll \
      mlang.dll mshtml.dll mshtmled.dll msi.dll msident.dll \
      msoeacct.dll msrating.dll mstime.dll msxml3.dll occache.dll \
      ole32.dll oleaut32.dll olepro32.dll pngfilt.dll quartz.dll \
      rpcrt4.dll rsabase.dll rsaenh.dll scrobj.dll scrrun.dll \
      shdocvw.dll shell32.dll urlmon.dll vbscript.dll webcheck.dll \
      wshcon.dll wshext.dll asctrls.ocx hhctrl.ocx mscomct2.ocx \
      plugin.ocx proctexe.ocx tdc.ocx webcheck.dll wshom.ocx
    <KEYWORD>do</KEYWORD>
        <VARIABLE>$WINE</VARIABLE> regsvr32 /i <VARIABLE>$i</VARIABLE> <KEYWORD>&gt;</KEYWORD> /dev/null <KEYWORD>2&gt;&amp;1</KEYWORD>
    <KEYWORD>done</KEYWORD>

    <COMMENT># Set windows version back to user's default. Leave at win2k for better rendering (is there a bug for that?)</COMMENT>
    unset_winver

    <COMMENT># try $WINE "$programfilesdir_unix"/"Internet Explorer"/IEXPLORE.EXE http://www.winehq.org</COMMENT>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_ie7() {
    <COMMENT># Unregister Wine IE</COMMENT>
    try <VARIABLE>$WINE</VARIABLE> iexplore -unregserver

    <COMMENT># Change the override to the native so we are sure we use and register them</COMMENT>
    override_dlls native,<FUNCTION>builtin</FUNCTION> iexplore.exe itircl itss jscript mshtml msimtf shdoclc shdocvw shlwapi urlmon xmllite

    <COMMENT># Bundled updspapi cannot work on wine</COMMENT>
    override_dlls <FUNCTION>builtin</FUNCTION> updspapi

    <COMMENT># Remove the fake dlls from the existing WINEPREFIX</COMMENT>
    <KEYWORD>for</KEYWORD> dll <KEYWORD>in</KEYWORD> itircl itss jscript mshtml msimtf shdoclc shdocvw shlwapi urlmon
    <KEYWORD>do</KEYWORD>
        <FUNCTION>test</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/<VARIABLE>$dll</VARIABLE>.dll &amp;&amp;
        <FUNCTION>mv</FUNCTION> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/<VARIABLE>$dll</VARIABLE>.dll <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/<VARIABLE>$dll</VARIABLE>.dll.bak
    <KEYWORD>done</KEYWORD>

    <COMMENT># See http://bugs.winehq.org/show_bug.cgi?id=16013</COMMENT>
    <COMMENT># Find instructions to create this file in dlls/wintrust/tests/crypt.c</COMMENT>
    download . http://winezeug.googlecode.com/<FUNCTION>svn</FUNCTION>/trunk/winetricks_files/winetest.<FUNCTION>cat</FUNCTION> ac8f50dd54d011f3bb1dd79240dae9378748449f

    <COMMENT># Put a dummy catalog file in place</COMMENT>
    <FUNCTION>mkdir</FUNCTION> -p <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/catroot/\{f750e6c3-38ee-11d1-85e5-00c04fc295ee\}
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/winetest.<FUNCTION>cat</FUNCTION> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/catroot/\{f750e6c3-38ee-11d1-85e5-00c04fc295ee\}/oem0.<FUNCTION>cat</FUNCTION>

    <COMMENT># Install</COMMENT>
    download . http://download.microsoft.com/download/3/8/8/38889DC1-848C-4BF2-8335-86C573AD86D9/IE7-WindowsXP-x86-enu.exe d39b89c360fbaa9706b5181ae4718100687a5326
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$WINETRICKS_QUIET</VARIABLE> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/IE7-WindowsXP-x86-enu.exe /quiet
    <KEYWORD>else</KEYWORD>
        <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/IE7-WindowsXP-x86-enu.exe
    <KEYWORD>fi</KEYWORD>

    <COMMENT># Work around DLL registration bug until ierunonce/RunOnce/wineboot is fixed</COMMENT>
    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> whittle down this list</COMMENT>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/
    <KEYWORD>for</KEYWORD> i <KEYWORD>in</KEYWORD> actxprxy.dll browseui.dll browsewm.dll cdfview.dll ddraw.dll \
      dispex.dll dsound.dll iedkcs32.dll iepeers.dll iesetup.dll \
      imgutil.dll inetcomm.dll inseng.dll isetup.dll jscript.dll laprxy.dll \
      mlang.dll mshtml.dll mshtmled.dll msi.dll msident.dll \
      msoeacct.dll msrating.dll mstime.dll msxml3.dll occache.dll \
      ole32.dll oleaut32.dll olepro32.dll pngfilt.dll quartz.dll \
      rpcrt4.dll rsabase.dll rsaenh.dll scrobj.dll scrrun.dll \
      shdocvw.dll shell32.dll urlmon.dll vbscript.dll webcheck.dll \
      wshcon.dll wshext.dll asctrls.ocx hhctrl.ocx mscomct2.ocx \
      plugin.ocx proctexe.ocx tdc.ocx webcheck.dll wshom.ocx
    <KEYWORD>do</KEYWORD>
        <VARIABLE>$WINE</VARIABLE> regsvr32 /i <VARIABLE>$i</VARIABLE> <KEYWORD>&gt;</KEYWORD> /dev/null <KEYWORD>2&gt;&amp;1</KEYWORD>
    <KEYWORD>done</KEYWORD>

    <COMMENT># Seeing is believing</COMMENT>
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_QUIET</VARIABLE>"</STRING> = <STRING>""</STRING> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        warn <STRING>"Starting ie7.  To start it later, use the command <VARIABLE>$WINE</VARIABLE> '<VARIABLE>${programfilesdir_win}</VARIABLE><ESC>\\</ESC><ESC>\\</ESC>Internet Explorer<ESC>\\</ESC><ESC>\\</ESC>iexplore'"</STRING>
        <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>${programfilesdir_win}</VARIABLE><ESC>\\</ESC>Internet Explorer<ESC>\\</ESC>iexplore"</STRING> http://www.microsoft.com/windows/internet-explorer/ie7/ <KEYWORD>&gt;</KEYWORD> /dev/null <KEYWORD>2&gt;&amp;1</KEYWORD> &amp;
    <KEYWORD>else</KEYWORD>
        warn <STRING>"To start ie7, use the command <VARIABLE>$WINE</VARIABLE> '<VARIABLE>${programfilesdir_win}</VARIABLE><ESC>\\</ESC><ESC>\\</ESC>Internet Explorer<ESC>\\</ESC><ESC>\\</ESC>iexplore'"</STRING>
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_jet40() {
    <COMMENT># http://support.microsoft.com/kb/239114</COMMENT>
    <COMMENT># See also http://bugs.winehq.org/show_bug.cgi?id=6085</COMMENT>
    download . http://download.microsoft.com/download/4/3/9/4393c9ac-e69e-458d-9f6d-2fe191c51469/jet40sp8_9xnt.exe 8cd25342030857969ede2d8fcc34f3f7bcc2d6d4
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/jet40sp8_9xnt.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_kde() {
    download . http://www.winkde.org/pub/kde/ports/win32/installer/kdewin-installer-gui-0.9.6-5.exe f612945e094390d7bc0e4f8840d308ef2b00f86e
    <FUNCTION>mkdir</FUNCTION> -p <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/kde"</STRING>
    try <FUNCTION>cp</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/kdewin-installer-gui-0.9.6-5.exe <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/kde"</STRING>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/kde"</STRING>
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$programfilesdir_win</VARIABLE><ESC>\\</ESC>kde<ESC>\\</ESC>kdewin-installer-gui-0.9.6-5.exe"</STRING>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_liberation() {
    <COMMENT># http://www.redhat.com/promo/fonts/</COMMENT>
    <KEYWORD>case</KEYWORD> <KEYWORD>`</KEYWORD><FUNCTION>uname</FUNCTION> -s<KEYWORD>`</KEYWORD> <KEYWORD>in</KEYWORD>
    SunOS|Solaris)
      <FUNCTION>echo</FUNCTION> <STRING>"If you get 'ERROR: Certificate verification error for fedorahosted.org: unable to get local issuer certificate':"</STRING>
      <FUNCTION>echo</FUNCTION> <STRING>"Then you need to add Verisign root certificates to your local keystore."</STRING>
      <FUNCTION>echo</FUNCTION> <STRING>"OpenSolaris users, see: http://www.linuxtopia.org/online_books/opensolaris_2008/SYSADV1/html/swmgrpatchtasks-14.html"</STRING>
      <FUNCTION>echo</FUNCTION> <STRING>"Or edit winetricks' download function, and add '--no-check-certificate' to the command."</STRING>
      ;;
    <KEYWORD>esac</KEYWORD>

    download . https://fedorahosted.org/releases/l/i/liberation-fonts/liberation-fonts-1.04.<FUNCTION>tar</FUNCTION>.gz 097882c92e3260742a3dc3bf033792120d8635a3
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>
    gunzip -dc <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/liberation-fonts-1.04.<FUNCTION>tar</FUNCTION>.gz | <FUNCTION>tar</FUNCTION> -xf -
    <FUNCTION>mv</FUNCTION> liberation-fonts-1.04/*.ttf <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    <FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/*
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

set_native_mdac() {
    <COMMENT># Set those overrides globally so user programs get MDAC's odbc</COMMENT>
    <COMMENT># instead of wine's unixodbc</COMMENT>
    override_dlls native,<FUNCTION>builtin</FUNCTION> odbc32 odbccp32 oledb32
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mdac25() {
    download mdac25 http://download.microsoft.com/download/e/e/4/ee4fe9ee-6fa1-4ab6-ab8c-fe1769f4edcf/mdac_typ.exe 09e974a5dbebaaa08c7985a4a1126886dc05fd87
    set_native_mdac
    set_winver nt40
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$WINETRICKS_QUIET</VARIABLE> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mdac25/mdac_typ.exe /q /C:<STRING>"setup /QNT"</STRING>
    <KEYWORD>else</KEYWORD>
        try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mdac25/mdac_typ.exe
    <KEYWORD>fi</KEYWORD>
    unset_winver
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mdac27() {
    download mdac27 http://download.microsoft.com/download/3/b/f/3bf74b01-16ba-472d-9a8c-42b2b4fa0d76/mdac_typ.exe f68594d1f578c3b47bf0639c46c11c5da161feee
    set_native_mdac
    set_winver win2k
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$WINETRICKS_QUIET</VARIABLE> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mdac27/mdac_typ.exe /q /C:<STRING>"setup /QNT"</STRING>
    <KEYWORD>else</KEYWORD>
        try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mdac27/mdac_typ.exe
    <KEYWORD>fi</KEYWORD>
    unset_winver
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mdac28() {
    download mdac28 http://download.microsoft.com/download/c/d/f/cdfd58f1-3973-4c51-8851-49ae3777586f/<CONSTANT>MDAC_TYP</CONSTANT>.EXE 91bd59f0b02b67f3845105b15a0f3502b9a2216a
    set_native_mdac
    set_winver win98
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$WINETRICKS_QUIET</VARIABLE> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mdac28/mdac_typ.exe /q /C:<STRING>"setup /QNT"</STRING>
    <KEYWORD>else</KEYWORD>
        try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mdac28/mdac_typ.exe
    <KEYWORD>fi</KEYWORD>
    unset_winver
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mfc40() {
    <COMMENT># See http://support.microsoft.com/kb/122244</COMMENT>
    download . http://download.microsoft.com/download/ole/ole2v/3.5/w351/en-us/ole2v.exe c6cac71f32405ccb09c6f375e0738e6e13f073e4
    try unzip -o <VARIABLE>$WINETRICKS_UNIXQUIET</VARIABLE> -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/ole2v.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/<CONSTANT>MFC40</CONSTANT>.DLL <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/

    <FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/*
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mingw_min() {
    <COMMENT># If this is just a dependency check, don't re-install</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != mingw_min &amp;&amp; <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != mingw &amp;&amp; <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != mingw-min &amp;&amp; <FUNCTION>test</FUNCTION> -f <STRING>"<VARIABLE>$DRIVE_C</VARIABLE>"</STRING>/MinGW/bin/gcc.exe
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"prerequisite mingw_min already installed, skipping"</STRING>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>

    <COMMENT># See http://mingw.org/wiki/Getting_Started</COMMENT>
    download . http://sourceforge.net/projects/mingw/files/GNU%20Binutils/binutils-2.19.1-mingw32-bin.<FUNCTION>tar</FUNCTION>.gz 1ab72f3af3fe96d08c3c9bff60c47913704d5774
    download . http://sourceforge.net/projects/mingw/files/GCC%20Version%204/gcc-core-4.4.0-mingw32-bin.<FUNCTION>tar</FUNCTION>.gz b88b8f3644ca0cdf2c41cd03f820bf7823a8eabb
    download . http://sourceforge.net/projects/mingw/files/GCC%20Version%204/gcc-core-4.4.0-mingw32-dll.<FUNCTION>tar</FUNCTION>.gz 0372ecf4caf75d0d9fe4a7739ca234f1a3de831b
    download . http://sourceforge.net/projects/mingw/files/GCC%20Version%204/gmp-4.2.4-mingw32-dll.<FUNCTION>tar</FUNCTION>.gz a14dd928382f093f67cb3cd57c140625b1b265bb
    download . http://sourceforge.net/projects/mingw/files/MinGW%20libiconv/libiconv-1.13.1-1-mingw32-dll-2.<FUNCTION>tar</FUNCTION>.lzma 5b60ce4d9ec9cf91aee437915a2469b915e1235f
    download . http://sourceforge.net/projects/mingw/files/MinGW%20Runtime/mingwrt-3.16-mingw32-dev.<FUNCTION>tar</FUNCTION>.gz 770ff5001989d8a9a1ec4f3621d8f264a24e178f
    download . http://sourceforge.net/projects/mingw/files/MinGW%20Runtime/mingwrt-3.16-mingw32-dll.<FUNCTION>tar</FUNCTION>.gz b8032e97c79e16a3c540043f0f39821df1531ae9
    download . http://sourceforge.net/projects/mingw/files/GCC%20Version%204/mpfr-2.4.1-mingw32-dll.<FUNCTION>tar</FUNCTION>.gz 43b7ecb2c0c785c44321ff6c4376f51375713a7b
    download . http://sourceforge.net/projects/mingw/files/GCC%20Version%204/pthreads-w32-2.8.0-mingw32-dll.<FUNCTION>tar</FUNCTION>.gz f922f8c0c42921fd4482a3d2e6f779d6384040c1
    download . http://sourceforge.net/projects/mingw/files/MinGW%20API%20<KEYWORD>for</KEYWORD>%20MS-Windows/w32api-3.13-mingw32-dev.<FUNCTION>tar</FUNCTION>.gz 5eb7d8ec0fe032a92bea3a2c8282a78df2f1793c

    <FUNCTION>mkdir</FUNCTION> <STRING>"<VARIABLE>$DRIVE_C</VARIABLE>"</STRING>/MinGW
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$DRIVE_C</VARIABLE>"</STRING>/MinGW
    <FUNCTION>gzip</FUNCTION> -d -c <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/binutils-2.19.1-mingw32-bin.<FUNCTION>tar</FUNCTION>.gz | <FUNCTION>tar</FUNCTION> x
    <FUNCTION>gzip</FUNCTION> -d -c <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mingwrt-3.16-mingw32-dev.<FUNCTION>tar</FUNCTION>.gz | <FUNCTION>tar</FUNCTION> x
    <FUNCTION>gzip</FUNCTION> -d -c <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mingwrt-3.16-mingw32-dll.<FUNCTION>tar</FUNCTION>.gz | <FUNCTION>tar</FUNCTION> x
    <FUNCTION>gzip</FUNCTION> -d -c <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/w32api-3.13-mingw32-dev.<FUNCTION>tar</FUNCTION>.gz | <FUNCTION>tar</FUNCTION> x
    <FUNCTION>gzip</FUNCTION> -d -c <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/gmp-4.2.4-mingw32-dll.<FUNCTION>tar</FUNCTION>.gz | <FUNCTION>tar</FUNCTION> x
    lzma -d -c <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/libiconv-1.13.1-1-mingw32-dll-2.<FUNCTION>tar</FUNCTION>.lzma | <FUNCTION>tar</FUNCTION> x
    <FUNCTION>gzip</FUNCTION> -d -c <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mpfr-2.4.1-mingw32-dll.<FUNCTION>tar</FUNCTION>.gz | <FUNCTION>tar</FUNCTION> x
    <FUNCTION>gzip</FUNCTION> -d -c <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/pthreads-w32-2.8.0-mingw32-dll.<FUNCTION>tar</FUNCTION>.gz | <FUNCTION>tar</FUNCTION> x
    <FUNCTION>gzip</FUNCTION> -d -c <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/gcc-core-4.4.0-mingw32-bin.<FUNCTION>tar</FUNCTION>.gz | <FUNCTION>tar</FUNCTION> x
    <FUNCTION>gzip</FUNCTION> -d -c <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/gcc-core-4.4.0-mingw32-dll.<FUNCTION>tar</FUNCTION>.gz | <FUNCTION>tar</FUNCTION> x

    append_path C:\\MinGW\\bin
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mingw_gdb() {
    <COMMENT># See http://mingw.org/wiki/Getting_Started</COMMENT>
    load_mingw_min

    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/mingw/GNU%20Source-Level%20Debugger/GDB-7.0/gdb-7.0-2-mingw32-bin.<FUNCTION>tar</FUNCTION>.gz a560cb0e3980d0ed853994c84038260212f58925

    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$DRIVE_C</VARIABLE>"</STRING>/MinGW
    <FUNCTION>gzip</FUNCTION> -d -c <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/gdb-7.0-2-mingw32-bin.<FUNCTION>tar</FUNCTION>.gz | <FUNCTION>tar</FUNCTION> x
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mono20() {
    <COMMENT># Load Mono, have it handle all .net requests</COMMENT>
    download .  <FUNCTION>ftp</FUNCTION>://<FUNCTION>ftp</FUNCTION>.novell.com/pub/mono/archive/2.0.1/windows-installer/1/mono-2.0.1-gtksharp-2.10.4-win32-1.exe ccb67ac41b59522846e47d0c423836b9d334c088
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mono-2.0.1-gtksharp-2.10.4-win32-1.exe <VARIABLE>$WINETRICKS_SILENT</VARIABLE>

    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/mono_2.0.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_LOCAL_MACHINE\Software\Microsoft\NET Framework Setup\NDP\v2.0.50727]</HEREDOC>
<HEREDOC>"Install"=dword:00000001</HEREDOC>
<HEREDOC>"SP"=dword:00000001</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\policy\v2.0]</HEREDOC>
<HEREDOC>"4322"="3706-4322"</HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/mono_2.0.reg
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/mono_2.0.reg
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mono22() {
    <COMMENT># Load Mono, have it handle all .net requests</COMMENT>
    download .  <FUNCTION>ftp</FUNCTION>://<FUNCTION>ftp</FUNCTION>.novell.com/pub/mono/archive/2.2/windows-installer/5/mono-2.2-gtksharp-2.12.7-win32-5.exe be977dfa9c49deea1be02ba4a2228e343f1e5840
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mono-2.2-gtksharp-2.12.7-win32-5.exe <VARIABLE>$WINETRICKS_SILENT</VARIABLE>

    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> what should this be for mono 2.2?</COMMENT>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/mono_2.0.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_LOCAL_MACHINE\Software\Microsoft\NET Framework Setup\NDP\v2.0.50727]</HEREDOC>
<HEREDOC>"Install"=dword:00000001</HEREDOC>
<HEREDOC>"SP"=dword:00000001</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\policy\v2.0]</HEREDOC>
<HEREDOC>"4322"="3706-4322"</HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/mono_2.0.reg
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/mono_2.0.reg
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mono24() {
    <COMMENT># Load Mono, have it handle all .net requests</COMMENT>
    download .  http://<FUNCTION>ftp</FUNCTION>.novell.com/pub/mono/archive/2.4.2.3/windows-installer/3/mono-2.4.2.3-gtksharp-2.12.9-win32-3.exe 4f0d051bcedd7668e63c12903310be0ea38f9654
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mono-2.4.2.3-gtksharp-2.12.9-win32-3.exe <VARIABLE>$WINETRICKS_SILENT</VARIABLE>

    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> what should this be for mono 2.4?</COMMENT>
    <FUNCTION>cat</FUNCTION> <KEYWORD>&gt;</KEYWORD> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/mono_2.0.reg &lt;&lt;<KEYWORD>_EOF_</KEYWORD><HEREDOC></HEREDOC>
<HEREDOC>REGEDIT4</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_LOCAL_MACHINE\Software\Microsoft\NET Framework Setup\NDP\v2.0.50727]</HEREDOC>
<HEREDOC>"Install"=dword:00000001</HEREDOC>
<HEREDOC>"SP"=dword:00000001</HEREDOC>
<HEREDOC></HEREDOC>
<HEREDOC>[HKEY_LOCAL_MACHINE\Software\Microsoft\.NETFramework\policy\v2.0]</HEREDOC>
<HEREDOC>"4322"="3706-4322"</HEREDOC>
<HEREDOC></HEREDOC><KEYWORD>_EOF_</KEYWORD>
    try_regedit <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/mono_2.0.reg
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/mono_2.0.reg
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mozillabuild() {
    download . http://<FUNCTION>ftp</FUNCTION>.mozilla.org/pub/mozilla.org/mozilla/libraries/win32/MozillaBuildSetup-1.4.exe
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/MozillaBuildSetup-1.4.exe <VARIABLE>$WINETRICKS_S</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mpc() {
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/guliverkli2/Media%20Player%20Classic/6.4.9.1/mplayerc_20090706.zip 9b8e06a3997a786dccfb5739e0cc1a34f17905b6
    <FUNCTION>mkdir</FUNCTION> -p <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/Media Player Classic"</STRING>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/Media Player Classic"</STRING>
    try unzip <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/mplayerc_20090706.zip

    append_path <STRING>"<VARIABLE>$programfilesdir_win</VARIABLE><ESC>\M</ESC>edia Player Classic"</STRING>

    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
    warn <STRING>"MPC now available as <VARIABLE>$programfilesdir_win</VARIABLE><ESC>\M</ESC>edia Player Classic<ESC>\m</ESC>playerc.exe"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_msi2() {
    <COMMENT># Install native msi per http://wiki.winehq.org/NativeMsi</COMMENT>
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?displaylang=en&amp;FamilyID=CEBBACD8-C094-4255-B702-DE3BB768148F</COMMENT>
    download . http://download.microsoft.com/download/WindowsInstaller/Install/2.0/W9XMe/EN-US/InstMsiA.exe e739c40d747e7c27aacdb07b50925b1635ee7366

    <COMMENT># Pick win98 so we can install native msi</COMMENT>
    set_winver win98

    <COMMENT># Avoid "err:setupapi:SetupDefaultQueueCallbackA copy error 5 ..."</COMMENT>
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/msi.dll
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/msiexec.exe

    <VARIABLE>WINEDLLOVERRIDES</VARIABLE>=<STRING>"msi,msiexec.exe=n"</STRING> try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/InstMSIA.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>

    override_dlls native,<FUNCTION>builtin</FUNCTION> msi msiexec.exe

    <COMMENT># and undo version win98</COMMENT>
    unset_winver
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_mshflxgd() {
    <COMMENT># http://msdn.microsoft.com/en-us/library/aa240864(VS.60).aspx</COMMENT>
    <COMMENT># orig: 5f9c7a81022949bfe39b50f2bbd799c448bb7377</COMMENT>
    <COMMENT># Jan 2009: 7ad74e589d5eefcee67fa14e65417281d237a6b6</COMMENT>
    <COMMENT># May 2009: bd8aa796e16e5f213414af78931e0379d9cbe292</COMMENT>
    download .  http://activex.microsoft.com/controls/vb6/<CONSTANT>MSHFLXGD</CONSTANT>.CAB bd8aa796e16e5f213414af78931e0379d9cbe292
    try cabextract --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<CONSTANT>MSHFLXGD</CONSTANT>.CAB
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/<KEYWORD>[</KEYWORD>Mm<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Ss<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Hh<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Ff<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Ll<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Xx<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Gg<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Dd<KEYWORD>]</KEYWORD>.<KEYWORD>[</KEYWORD>Oo<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Cc<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Xx<KEYWORD>]</KEYWORD> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_msls31() {
    <COMMENT># Install native Microsoft Line Services (needed by e-Sword, possibly only when using native riched20)</COMMENT>
    download . http://download.microsoft.com/download/WindowsInstaller/Install/2.0/W9XMe/EN-US/InstMsiA.exe e739c40d747e7c27aacdb07b50925b1635ee7366
    try cabextract --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/InstMsiA.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/msls31.dll <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_msmask() {
    <COMMENT># http://msdn.microsoft.com/en-us/library/11405hcf(VS.71).aspx</COMMENT>
    <COMMENT># http://bugs.winehq.org/show_bug.cgi?id=2934</COMMENT>
    <COMMENT># old: 3c6b26f68053364ea2e09414b615dbebafb9d5c3</COMMENT>
    <COMMENT># May 2009: 30e55679e4a13fe4d9620404476f215f93239292</COMMENT>
    download .  http://activex.microsoft.com/controls/vb6/<CONSTANT>MSMASK32</CONSTANT>.CAB 30e55679e4a13fe4d9620404476f215f93239292
    try cabextract --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<CONSTANT>MSMASK32</CONSTANT>.CAB
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/<KEYWORD>[</KEYWORD>Mm<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Ss<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Mm<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Aa<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Ss<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Kk<KEYWORD>]</KEYWORD>32.<KEYWORD>[</KEYWORD>Oo<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Cc<KEYWORD>]</KEYWORD><KEYWORD>[</KEYWORD>Xx<KEYWORD>]</KEYWORD> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/msmask32.ocx
    try <VARIABLE>$WINE</VARIABLE> regsvr32 msmask32.ocx
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_msscript() {
    <COMMENT># http://msdn.microsoft.com/scripting/scriptcontrol/x86/sct10en.exe</COMMENT>
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?familyid=d7e31492-2595-49e6-8c02-1426fec693ac</COMMENT>
    download .  http://download.microsoft.com/download/d/2/a/d2a7430c-6d5b-48e9-96c4-3c751be7bffe/sct10en.exe fd9f2f23357ab11ae70682d6864f7e9f188adf2a
    try cabextract --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/sct10en.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/msscript.ocx <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32
    try <VARIABLE>$WINE</VARIABLE> regsvr32 msscript.ocx
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_msxml3() {
    <COMMENT># Service Pack 5</COMMENT>
    <COMMENT>#download http://download.microsoft.com/download/a/5/e/a5e03798-2454-4d4b-89a3-4a47579891d8/msxml3.msi</COMMENT>
    <COMMENT># Service Pack 7</COMMENT>
    download . http://download.microsoft.com/download/8/8/8/888f34b7-4f54-4f06-8dac-fa29b19f33dd/msxml3.msi d4c2178dfb807e1a0267fce0fd06b8d51106d913
    <COMMENT># http://bugs.winehq.org/show_bug.cgi?id=7849 fixed since 0.9.37</COMMENT>
    override_dlls native,<FUNCTION>builtin</FUNCTION> msxml3
    try <VARIABLE>$WINE</VARIABLE> msiexec /i <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/msxml3.msi <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_msxml4() {
    <COMMENT># If this is just a dependency check, don't re-install</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != msxml4 &amp;&amp; <FUNCTION>test</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/msxml4.dll
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"prerequisite msxml4 already installed, skipping"</STRING>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>
    <COMMENT># MS06-071: http://www.microsoft.com/downloads/details.aspx?familyid=24B7D141-6CDF-4FC4-A91B-6F18FE6921D4</COMMENT>
    <COMMENT># download . http://download.microsoft.com/download/e/2/e/e2e92e52-210b-4774-8cd9-3a7a0130141d/msxml4-KB927978-enu.exe d364f9fe80c3965e79f6f64609fc253dfeb69c25</COMMENT>
    <COMMENT># MS07-042: http://www.microsoft.com/downloads/details.aspx?FamilyId=021E12F5-CB46-43DF-A2B8-185639BA2807</COMMENT>
    <COMMENT># download . http://download.microsoft.com/download/9/4/2/9422e6b6-08ee-49cb-9f05-6c6ee755389e/msxml4-KB936181-enu.exe 73d75d7b41f8a3d49f272e74d4f73bb5e82f1acf</COMMENT>
    <COMMENT># SP3 (2009): http://www.microsoft.com/downloads/details.aspx?familyid=7F6C0CB4-7A5E-4790-A7CF-9E139E6819C0</COMMENT>
    download msxml4sp3 http://download.microsoft.com/download/A/2/D/A2D8587D-0027-4217-9DAD-38AFDB0A177E/msxml.msi aa70c5c1a7a069af824947bcda1d9893a895318b

    try <VARIABLE>$WINE</VARIABLE> msiexec /i <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/msxml4sp3/msxml.msi <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_msxml6() {
    <COMMENT># If this is just a dependency check, don't re-install</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != msxml6 &amp;&amp; <FUNCTION>test</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/msxml6.dll
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"prerequisite msxml6 already installed, skipping"</STRING>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>

    <COMMENT># http://www.microsoft.com/downloads/details.aspx?FamilyID=993c0bcf-3bcf-4009-be21-27e85e1857b1</COMMENT>
    <COMMENT># download . http://download.microsoft.com/download/2/e/0/2e01308a-e17f-4bf9-bf48-161356cf9c81/msxml6.msi 2308743ddb4cb56ae910e461eeb3eab0a9e58058</COMMENT>
    <COMMENT># Service Pack 1</COMMENT>
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?familyid=D21C292C-368B-4CE1-9DAB-3E9827B70604</COMMENT>
    download . http://download.microsoft.com/download/e/a/f/eafb8ee7-667d-4e30-bb39-4694b5b3006f/msxml6_x86.msi

    try <VARIABLE>$WINE</VARIABLE> msiexec /i <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/msxml6_x86.msi <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_ogg() {
    <COMMENT># flac, ogg, speex, vorbis, ogm source, ogg source</COMMENT>
    download . http://cross-lfs.org/~mlankhorst/oggcodecs_0.81.2.exe c9d10a8f1b65b9f3824e227333d66247e14fad4c
    <COMMENT>#try $WINE "$WINETRICKS_CACHE"/oggcodecs_0.81.2.exe $WINETRICKS_QUIET</COMMENT>
    <COMMENT># oh, and the new schroedinger direct show filter, too</COMMENT>
    <COMMENT># see following URLs for more info</COMMENT>
    <COMMENT># http://www.diracvideo.org/</COMMENT>
    <COMMENT># http://cross-lfs.org/~mlankhorst/direct-schro.txt</COMMENT>
    <COMMENT># http://www.diracvideo.org/git?p=direct-schro.git;a=summary</COMMENT>
    <COMMENT># Requires wine-1.1.1</COMMENT>
    download . http://cross-lfs.org/~mlankhorst/direct-schro.dll
    try <FUNCTION>cp</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/direct-schro.dll <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/direct-schro.dll
    <COMMENT># This is currently broken. Maarten's not sure why.</COMMENT>
    try <VARIABLE>$WINE</VARIABLE> regsvr32 direct-schro.dll
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_ole2() {
    <COMMENT># http://support.microsoft.com/kb/123087/EN-US/</COMMENT>
    download . http://download.microsoft.com/download/win31/update/2.03/win/en-us/ww1116.exe b803991c40f387464b61f606536b7c98a88245d2
    try unzip -o <VARIABLE>$WINETRICKS_UNIXQUIET</VARIABLE> -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/ww1116.exe
    set_winver win31
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>
    try <VARIABLE>$WINE</VARIABLE> setup.exe
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
    unset_winver

    override_dlls native,<FUNCTION>builtin</FUNCTION> <CONSTANT>COMPOBJ</CONSTANT>.DLL <CONSTANT>OLE2CONV</CONSTANT>.DLL <CONSTANT>OLE2DISP</CONSTANT>.DLL <CONSTANT>OLE2</CONSTANT>.DLL
    override_dlls native,<FUNCTION>builtin</FUNCTION> <CONSTANT>OLE2NLS</CONSTANT>.DLL <CONSTANT>OLE2PROX</CONSTANT>.DLL <CONSTANT>STORAGE</CONSTANT>.DLL <CONSTANT>TYPELIB</CONSTANT>.DLL
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_openwatcom() {
    <COMMENT># http://www.openwatcom.org</COMMENT>
    download . <STRING>"http://ftp.openwatcom.org/ftp/open-watcom-c-win32-1.8.exe"</STRING> 44afd1fabfdf0374f614f054824e60ac560f9dc0
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$WINETRICKS_QUIET</VARIABLE> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        <COMMENT># Options documented at http://bugzilla.openwatcom.org/show_bug.cgi?id=898</COMMENT>
        <COMMENT># But they don't seem to work on wine, so jam them into setup.inf</COMMENT>
        <COMMENT># Pick smallest installation that supports 16 bit C and C++</COMMENT>
        <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>
        <FUNCTION>cp</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/open-watcom-c-win32-1.8.exe .
        unzip open-watcom-c-win32-1.8.exe setup.inf
        <FUNCTION>sed</FUNCTION> -i <STRING>'s/tools16=.*/tools16=true/'</STRING> setup.inf
        zip -f open-watcom-c-win32-1.8.exe
        try <VARIABLE>$WINE</VARIABLE> open-watcom-c-win32-1.8.exe -s
        <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
    <KEYWORD>else</KEYWORD>
        try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/open-watcom-c-win32-1.8.exe
    <KEYWORD>fi</KEYWORD>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -f <STRING>"<VARIABLE>$DRIVE_C</VARIABLE>"</STRING>/<CONSTANT>WATCOM</CONSTANT>/binnt/wcc.exe
    <KEYWORD>then</KEYWORD>
        warn <STRING>"c:/watcom/binnt/wcc.exe not found; you probably didn't select 16 bit tools, and won't be able to buld win16test"</STRING>
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_pdh() {
    <COMMENT># http://support.microsoft.com/kb/284996</COMMENT>
    download . http://download.microsoft.com/download/platformsdk/Redist/5.0.2195.2668/NT4/EN-US/pdhinst.exe f42448660def8cd7f42b34aa7bc7264745f4425e
    try cabextract --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/pdhinst.exe
    try unzip -o <VARIABLE>$WINETRICKS_UNIXQUIET</VARIABLE> -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/pdh.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/x86/Pdh.Dll <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/pdh.dll
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_physx()
{
    <COMMENT># http://www.nvidia.com/object/physx_9.09.0814.html</COMMENT>
    download . http://us.download.nvidia.com/Windows/9.09.0814/PhysX_9.09.0814_SystemSoftware.exe e19f7c3385a4a68e7acb85301bb4d2d0d1eaa1e2
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/PhysX_9.09.0814_SystemSoftware.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_psdk2003()
{
    load_vcrun6

    <COMMENT># Note: aborts on 64 bit windows with dialog saying "don't run on WoW"</COMMENT>
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?familyid=0baf2b35-c656-4969-ace8-e4c0c0716adb</COMMENT>
    download psdk2003 http://download.microsoft.com/download/f/a/d/fad9efde-8627-4e7a-8812-c351ba099151/PSDK-x86.exe 5c7dc2e1eb902b376d7797cc383fefdfc64ff9c9
    <FUNCTION>echo</FUNCTION> <STRING>"This can take up to an hour."</STRING>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/psdk2003
    try <VARIABLE>$WINE</VARIABLE> PSDK-x86.exe
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_psdkvista()
{
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?familyid=0baf2b35-c656-4969-ace8-e4c0c0716adb</COMMENT>
    warn <STRING>"Vista SDK doesn't work yet as of wine-1.1.28"</STRING>
    load_dotnet20
    download psdkvista download.microsoft.com/download/c/a/1/ca145d10-e254-475c-85f9-1439f4cd2a9e/Setup.exe 756c21a7fc9b831f7200f3f44ae55cc7689e8063
    <COMMENT>#chmod +x "$WINETRICKS_CACHE"/psdkvista/Setup.exe</COMMENT>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/psdkvista
    try <VARIABLE>$WINE</VARIABLE> Setup.exe
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_psdkwin7()
{
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?FamilyID=c17ba869-9671-4330-a63e-1fd44e0e2505&amp;displaylang=en</COMMENT>
    warn <STRING>"When given a choice, select only C++ compilers and headers, the other options don't work yet."</STRING>
    load_vcrun6
    load_vcrun2008
    load_dotnet20

    <COMMENT># don't have a working unattended recipe.  Maybe we'll have to</COMMENT>
    <COMMENT># do an autohotkey script until msft gets its act together:</COMMENT>
    <COMMENT># http://social.msdn.microsoft.com/Forums/en-US/windowssdk/thread/c053b616-7d5b-405d-9841-ec465a8e21d5</COMMENT>
    download psdkwin7 http://download.microsoft.com/download/7/A/B/7ABD2203-C472-4036-8BA0-E505528CCCB7/winsdk_web.exe a01dcc67a38f461e80ea649edf1353f306582507
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/psdkwin7
    try <VARIABLE>$WINE</VARIABLE> winsdk_web.exe
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_python26() {

    <COMMENT># If this is just a dependency check, don't re-install</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != python26 &amp;&amp; <FUNCTION>test</FUNCTION> -f <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>"</STRING>/drive_c/Python26/python.exe
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"prerequisite python26 already installed, skipping"</STRING>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>

    download . http://www.python.org/<FUNCTION>ftp</FUNCTION>/python/2.6.2/python-2.6.2.msi 2d1503b0e8b7e4c72a276d4d9027cf4856b208b8
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/project/pywin32/pywin32/Build%20214/pywin32-214.win32-py2.6.exe eca58f29b810d8e3e7951277ebb3e35ac35794a3
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>
    try <VARIABLE>$WINE</VARIABLE> msiexec /i python-2.6.2.msi <CONSTANT>ALLUSERS</CONSTANT>=1 <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> unzip this instead of running it if quiet install?</COMMENT>
    try <VARIABLE>$WINE</VARIABLE> pywin32-214.win32-py2.6.exe
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_python_comtypes() {
    
    load_python26
    
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/project/comtypes/comtypes/0.6.1/comtypes-0.6.1-1.zip 814318cdae0ab2471a9cd500847bf12f4df9a57c
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>
    try unzip comtypes-0.6.1-1.zip
    <FUNCTION>cd</FUNCTION> comtypes-0.6.1
    try <VARIABLE>$WINE</VARIABLE> <STRING>"C:<ESC>\P</ESC>ython26<ESC>\p</ESC>ython.exe"</STRING> setup.py <FUNCTION>install</FUNCTION>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_quicktime72() {
    <FUNCTION>echo</FUNCTION> <STRING>"Quicktime needs gdiplus..."</STRING>
    load_gdiplus

    <COMMENT># http://www.apple.com/support/downloads/quicktime72forwindows.html</COMMENT>
    download quicktime72 <STRING>'http://wsidecar.apple.com/cgi-bin/nph-reg3rdpty2.pl/product=14402&amp;cat=59&amp;platform=osx&amp;method=sa/QuickTimeInstaller.exe'</STRING> bb89981f10cf21de57b9453e53cf81b9194271a9
    <FUNCTION>unset</FUNCTION> <CONSTANT>QUICKTIME_QUIET</CONSTANT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_QUIET</VARIABLE>"</STRING>x != x
    <KEYWORD>then</KEYWORD>
       <VARIABLE>QUICKTIME_QUIET</VARIABLE>=<STRING>"/qn"</STRING>  <COMMENT># ISSETUPDRIVEN=0</COMMENT>
    <KEYWORD>fi</KEYWORD>
    <COMMENT># set vista mode to inhibit directdraw overlay use that blacks the screen</COMMENT>
    set_winver vista
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/quicktime72/QuickTimeInstaller.exe <CONSTANT>ALLUSERS</CONSTANT>=1 <CONSTANT>DESKTOP_SHORTCUTS</CONSTANT>=0 QTTaskRunFlags=0 <CONSTANT>QTINFO</CONSTANT>.<CONSTANT>BISQTPRO</CONSTANT>=1 <CONSTANT>SCHEDULE_ASUW</CONSTANT>=0 <CONSTANT>REBOOT_REQUIRED</CONSTANT>=No <VARIABLE>$QUICKTIME_QUIET</VARIABLE> <KEYWORD>&gt;</KEYWORD> /dev/null <KEYWORD>2&gt;&amp;1</KEYWORD>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_QUIET</VARIABLE>"</STRING>x = x
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"You probably want to select Advanced / Safe Mode in the Quicktime control panel"</STRING>
        try <VARIABLE>$WINE</VARIABLE> control <STRING>"<VARIABLE>$programfilesdir_win</VARIABLE><ESC>\\</ESC>QuickTime<ESC>\\</ESC>QTSystem<ESC>\\</ESC>QuickTime.cpl"</STRING>
    <KEYWORD>fi</KEYWORD>

    unset_winver
    <COMMENT># user might want to set vista mode himself, or run</COMMENT>
    <COMMENT>#  wine control ".wine/drive_c/Program Files/QuickTime/QTSystem/QuickTime.cpl"</COMMENT>
    <COMMENT># and pick Advanced / Safe Mode (gdi only).</COMMENT>
    <COMMENT># We could probably force that by overwriting QuickTime.qtp</COMMENT>
    <COMMENT># (probably in Program Files/QuickTime/QTSystem/QuickTime.qtp)</COMMENT>
    <COMMENT># but the format isn't known, so we'd have to override all other settings, too.</COMMENT>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

volnum() {
    <KEYWORD>case</KEYWORD> <STRING>"<VARIABLE>$OS</VARIABLE>"</STRING> <KEYWORD>in</KEYWORD>
    <STRING>"Windows_NT"</STRING>)
      <FUNCTION>return</FUNCTION>
      ;;
    <KEYWORD>esac</KEYWORD>

    <COMMENT># Recent Microsoft installers are often based on "windows package manager", see</COMMENT>
    <COMMENT># http://support.microsoft.com/kb/262841 and</COMMENT>
    <COMMENT># http://www.microsoft.com/technet/prodtechnol/windowsserver2003/deployment/winupdte.mspx</COMMENT>
    <COMMENT># These installers check the drive name, and if it doesn't start with 'harddisk',</COMMENT>
    <COMMENT># they complain "Unable to find a volume for file extraction", see</COMMENT>
    <COMMENT># http://bugs.winehq.org/show_bug.cgi?id=5351</COMMENT>
    <COMMENT># You may be able to work around this by using the installer's /x or /extract switch,</COMMENT>
    <COMMENT># but renaming drive_c to "harddiskvolume0" lets you just run the installer as normal.</COMMENT>

    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -d <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>"</STRING>/harddiskvolume0/
    <KEYWORD>then</KEYWORD>
        <FUNCTION>ln</FUNCTION> -s drive_c <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>"</STRING>/harddiskvolume0
        <FUNCTION>rm</FUNCTION> <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>"</STRING>/dosdevices/c:
        <FUNCTION>ln</FUNCTION> -s ../harddiskvolume0 <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>"</STRING>/dosdevices/c:
        <FUNCTION>echo</FUNCTION> <STRING>"Renamed drive_c to harddiskvolume0"</STRING>
    <KEYWORD>else</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"drive_c already named harddiskvolume0"</STRING>
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_riched20() {
    <COMMENT># http://support.microsoft.com/?kbid=249973</COMMENT>
    download . http://download.microsoft.com/download/winntsp/Patch/RTF/NT4/EN-US/Q249973i.EXE f0b7663f15dbd31410435483ba832318c7a70470
    try cabextract --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/Q249973i.EXE
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/riched??.dll <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32
    override_dlls native,<FUNCTION>builtin</FUNCTION> riched20 riched32

    <FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/*
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_riched30() {
    <COMMENT># http://www.novell.com/documentation/nm1/readmeen_web/readmeen_web.html#Akx3j64</COMMENT>
    <COMMENT># claims that Groupwise Messenger's View / Text Size command</COMMENT>
    <COMMENT># only works with riched30, and recommends getting it by installing</COMMENT>
    <COMMENT># msi 2, which just happens to come with riched30 version of riched20</COMMENT>
    <COMMENT># (though not with a corresponding riched32, which might be a problem)</COMMENT>
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?displaylang=en&amp;FamilyID=CEBBACD8-C094-4255-B702-DE3BB768148F</COMMENT>
    download . http://download.microsoft.com/download/WindowsInstaller/Install/2.0/W9XMe/EN-US/InstMsiA.exe e739c40d747e7c27aacdb07b50925b1635ee7366
    try cabextract --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/InstMsiA.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/riched20.dll <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32
    override_dlls native,<FUNCTION>builtin</FUNCTION> riched20

    <FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/*
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_richtx32() {
    download . http://activex.microsoft.com/controls/vb6/richtx32.cab da404b566df3ad74fe687c39404a36c3e7cadc07
    try cabextract <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/richtx32.cab -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32 -F RichTx32.Ocx
    try <VARIABLE>$WINE</VARIABLE> regsvr32 RichTx32.ocx
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_shockwave() {
    <COMMENT># Not silent enough, use msi instead</COMMENT>
    <COMMENT>#download . http://fpdownload.macromedia.com/get/shockwave/default/english/win95nt/latest/Shockwave_Installer_Full.exe 840e34e9b067cf247bfa9092665b8966158f38e3</COMMENT>
    <COMMENT>#try $WINE "$WINETRICKS_CACHE"/Shockwave_Installer_Full.exe $WINETRICKS_S</COMMENT>
    <COMMENT># old sha1sum: 6a91a9da4b54c3fdc97130a15e1a173117e5f4ff</COMMENT>
    <COMMENT># 2009-07-31 sha1sum: 0bb506ef67a268e8d3fb6c7ce556320ee10b9da5</COMMENT>
    <COMMENT># 2009-12-13 sha1sum: d35649883bf13cb1a86f5650e1050d15533ac0f4</COMMENT>
    
    download . http://fpdownload.macromedia.com/get/shockwave/default/english/win95nt/latest/sw_lic_full_installer.msi d35649883bf13cb1a86f5650e1050d15533ac0f4
    try <VARIABLE>$WINE</VARIABLE> msiexec /i <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/sw_lic_full_installer.msi <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_tahoma() {
    <COMMENT># The tahoma and tahomabd fonts are needed by e.g. Steam</COMMENT>

    download . http://download.microsoft.com/download/office97pro/fonts/1/w95/en-us/tahoma32.exe 888ce7b7ab5fd41f9802f3a65fd0622eb651a068
    try cabextract --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/tahoma32.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/Tahoma.TTF <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>/tahoma.ttf
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/Tahomabd.TTF <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>/tahomabd.ttf
    <FUNCTION>chmod</FUNCTION> +w <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>/tahoma*.ttf
    <FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/*
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_urlmon() {
    <COMMENT># This is an updated urlmon from IE 6.0</COMMENT>
    <COMMENT># See http://www.microsoft.com/downloads/details.aspx?familyid=85BB441A-5BB1-4A82-86EC-A249AF287513</COMMENT>
    <COMMENT># (Works for Dolphin Smalltalk, see http://bugs.winehq.org/show_bug.cgi?id=8258)</COMMENT>
    download . http://download.microsoft.com/download/8/2/0/820faffc-3ea0-4914-bca3-584235964ded/<CONSTANT>Q837251</CONSTANT>.exe bcc79b92ac3c06c4de3692672c3d70bdd36be892
    try cabextract --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>/Q837251.exe"</STRING>
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/<CONSTANT>URLMON</CONSTANT>.DLL <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/urlmon.dll
    override_dlls native,<FUNCTION>builtin</FUNCTION> urlmon
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vb2run() {
    <COMMENT># Not referenced on MS web anymore. But the old Microsoft Software Library FTP still has it.</COMMENT>
    <COMMENT># See ftp://ftp.microsoft.com/Softlib/index.txt</COMMENT>
    download . <FUNCTION>ftp</FUNCTION>://<FUNCTION>ftp</FUNCTION>.microsoft.com/Softlib/<CONSTANT>MSLFILES</CONSTANT>/<CONSTANT>VBRUN200</CONSTANT>.EXE ac0568b73ee375408778e9b505df995f79ab907e
    try unzip -o <VARIABLE>$WINETRICKS_UNIXQUIET</VARIABLE> -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<CONSTANT>VBRUN200</CONSTANT>.EXE
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/VBRUN200.DLL"</STRING> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/

}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vb3run() {
    <COMMENT># See http://support.microsoft.com/kb/196285</COMMENT>
    download . http://download.microsoft.com/download/vb30/utility/1/w9xnt4/en-us/vb3run.exe 518fcfefde9bf680695cadd06512efadc5ac2aa7
    try unzip -o <VARIABLE>$WINETRICKS_UNIXQUIET</VARIABLE> -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vb3run.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/Vbrun300.dll"</STRING> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/

}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vb4run() {
    <COMMENT># See http://support.microsoft.com/kb/196286</COMMENT>
    download . http://download.microsoft.com/download/vb40ent/sample27/1/w9xnt4/en-us/vb4run.exe 83e968063272e97bfffd628a73bf0ff5f8e1023b
    try unzip -o <VARIABLE>$WINETRICKS_UNIXQUIET</VARIABLE> -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vb4run.exe
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/Vb40032.dll"</STRING> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/Vb40016.dll"</STRING> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/

}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vbvm50() {
    download . http://download.microsoft.com/download/vb50pro/utility/1/win98/en-us/msvbvm50.exe 28bfaf09b8ac32cf5ffa81252f3e2fadcb3a8f27
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/msvbvm50.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vbrun60() {
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -f <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vbrun60sp6.exe
    <KEYWORD>then</KEYWORD>
        download . http://download.microsoft.com/download/5/a/d/5ad868a0-8ecd-4bb0-a882-fe53eb7ef348/VB6.0-KB290887-X86.exe 73ef177008005675134d2f02c6f580515ab0d842
        <FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/*

        try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/VB6.0-KB290887-X86.exe <STRING>"/T:<VARIABLE>$winetricks_tmp_win</VARIABLE>"</STRING> /c <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
        <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/vbrun60sp6.exe
        <KEYWORD>then</KEYWORD>
            die vbrun60sp6.exe not found
        <KEYWORD>fi</KEYWORD>
        try <FUNCTION>mv</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/vbrun60sp6.exe <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>
    <KEYWORD>fi</KEYWORD>

    <COMMENT># Delete some fake DLLs to ensure that the installer overwrites them.</COMMENT>
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/comcat.dll
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/oleaut32.dll
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/olepro32.dll
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/stdole2.tlb
    <COMMENT># Exits with status 43 for some reason?</COMMENT>
    <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vbrun60sp6.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>

    <VARIABLE>status</VARIABLE>=<VARIABLE>$?</VARIABLE>
    <KEYWORD>case</KEYWORD> <VARIABLE>$status</VARIABLE> <KEYWORD>in</KEYWORD>
    0|43) ;;
    *) die <VARIABLE>$PACKAGE</VARIABLE> installation failed
    <KEYWORD>esac</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vcrun6() {
    <COMMENT># Load the Visual C++ 6 runtime libraries, including the elusive mfc42u.dll</COMMENT>

    <COMMENT># If this is just a dependency check, don't re-install</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != vcrun6 &amp;&amp; <FUNCTION>test</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/mfc42u.dll
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"prerequisite vcrun6 already installed, skipping"</STRING>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>

    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -f <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vcredist.exe
    <KEYWORD>then</KEYWORD>
       download . http://download.microsoft.com/download/vc60pro/update/1/w9xnt4/en-us/vc6redistsetup_enu.exe 382c8f5a7f41189af8d4165cf441f274b7e2a457
       <FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/*

       try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vc6redistsetup_enu.exe <STRING>"/T:<VARIABLE>$winetricks_tmp_win</VARIABLE>"</STRING> /c <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
       <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/vcredist.exe
       <KEYWORD>then</KEYWORD>
          die vcredist.exe not found
       <KEYWORD>fi</KEYWORD>
       <FUNCTION>mv</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/vcredist.exe <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>
    <KEYWORD>fi</KEYWORD>
    <COMMENT># Delete some fake dlls to avoid vcredist installer warnings</COMMENT>
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/comcat.dll
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/msvcrt.dll
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/oleaut32.dll
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/olepro32.dll
    <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/stdole2.tlb
    <COMMENT># vcredist still exits with status 43.  Anyone know why?</COMMENT>
    <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vcredist.exe

    <VARIABLE>status</VARIABLE>=<VARIABLE>$?</VARIABLE>
    <KEYWORD>case</KEYWORD> <VARIABLE>$status</VARIABLE> <KEYWORD>in</KEYWORD>
    0|43) ;;
    *) die <VARIABLE>$PACKAGE</VARIABLE> installation failed
    <KEYWORD>esac</KEYWORD>

    <COMMENT># And then some apps need mfc42u.dll, dunno what right way</COMMENT>
    <COMMENT># is to get it, vcredist doesn't install it by default?</COMMENT>
    try cabextract <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vcredist.exe -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/ -F mfc42u.dll

    override_dlls native,<FUNCTION>builtin</FUNCTION> msvcrt

}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vcrun6sp6() {
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -f vcredistsp6.exe
    <KEYWORD>then</KEYWORD>
        download . http://download.microsoft.com/download/1/9/f/19fe4660-5792-4683-99e0-8d48c22eed74/Vs6sp6.exe 2292437a8967349261c810ae8b456592eeb76620

        <COMMENT># No EULA is presented when passing command-line extraction arguments,</COMMENT>
        <COMMENT># so we'll simplify extraction with cabextract. We'll also try to avoid</COMMENT>
        <COMMENT># overwriting the older vcrun6 redist by renaming the extracted file.</COMMENT>
        try cabextract <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/Vs6sp6.exe -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> -F vcredist.exe
        try <FUNCTION>mv</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/vcredist.exe <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vcredistsp6.exe
    <KEYWORD>fi</KEYWORD>

    <COMMENT># Delete some fake dlls to avoid vcredist installer warnings</COMMENT>
    try <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/comcat.dll
    try <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/msvcrt.dll
    try <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/oleaut32.dll
    try <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/olepro32.dll
    try <FUNCTION>rm</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/stdole2.tlb
    <COMMENT># vcredist still exits with status 43.  Anyone know why?</COMMENT>
    <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vcredistsp6.exe

    <VARIABLE>status</VARIABLE>=<VARIABLE>$?</VARIABLE>
    <KEYWORD>case</KEYWORD> <VARIABLE>$status</VARIABLE> <KEYWORD>in</KEYWORD>
    0|43) ;;
    *) die <VARIABLE>$PACKAGE</VARIABLE> installation failed
    <KEYWORD>esac</KEYWORD>

    <COMMENT># And then some apps need mfc42u.dll, dunno what right way</COMMENT>
    <COMMENT># is to get it, vcredist doesn't install it by default?</COMMENT>
    try cabextract <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vcredistsp6.exe -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/ -F mfc42u.dll

    override_dlls native,<FUNCTION>builtin</FUNCTION> msvcrt
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vcrun2003() {
    <COMMENT># Load the Visual C++ 2003 runtime libraries</COMMENT>
    <COMMENT># Sadly, I know of no Microsoft URL for these</COMMENT>
    <FUNCTION>echo</FUNCTION> <STRING>"Installing BZFlag (which comes with the Visual C++ 2003 runtimes)"</STRING>
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/bzflag/BZEditW32_1.6.5_Installer.exe bdd1b32c4202fd77e6513fd507c8236888b09121
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/BZEditW32_1.6.5_Installer.exe <VARIABLE>$WINETRICKS_S</VARIABLE>
    try <FUNCTION>cp</FUNCTION> <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/BZEdit1.6.5"</STRING>/m*71* <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vcrun2005() {
    <COMMENT># Load the latest Visual C++ 2005 runtime libraries</COMMENT>
    <COMMENT># If this is just a dependency check, don't re-install</COMMENT>

    <COMMENT># SP1 + ATL security fix build 4053 (MS09-035)</COMMENT>
    <COMMENT># See http://www.microsoft.com/downloads/details.aspx?familyid=766A6AF7-EC73-40FF-B072-9112BAB119C2</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != vcrun2005 &amp;&amp; <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/winsxs/x86_Microsoft.<CONSTANT>VC80</CONSTANT>.MFC_1fc8b3b9a1e18e3b_8.0.50727.4053_x-ww_b77cec8e
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"prerequisite vcrun2005 already installed, skipping"</STRING>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>
    download vcrun2005-ms09-035 http://download.microsoft.com/download/6/B/B/6BB661D6-A8AE-4819-B79F-236472F6070C/vcredist_x86.exe e052789ebad7dc8d6f8505a9295b0576babd125e
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vcrun2005-ms09-035/vcredist_x86.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vcrun2008() {
    <COMMENT># For the moment, assume windows already has this.</COMMENT>
    <KEYWORD>case</KEYWORD> <STRING>"<VARIABLE>$OS</VARIABLE>"</STRING> <KEYWORD>in</KEYWORD>
    <STRING>"Windows_NT"</STRING>)
      <FUNCTION>return</FUNCTION>
      ;;
    <KEYWORD>esac</KEYWORD>

    <COMMENT># Work around bug 5351 (http://bugs.winehq.org/show_bug.cgi?id=5351). In recent</COMMENT>
    <COMMENT># wine (&gt;= 1.1.7) the bug is fixed. The workaround doesn't hurt anything, and lets</COMMENT>
    <COMMENT># installer work on older Wine (e.g., the stabe 1.0.1).</COMMENT>
    volnum

    <COMMENT># Load the latest Visual C++ 2008 runtime libraries</COMMENT>
    <COMMENT># If this is just a dependency check, don't re-install</COMMENT>
    <COMMENT># SP1 + ATL security fix build 4148 (MS09-035)</COMMENT>
    <COMMENT># See http://www.microsoft.com/downloads/details.aspx?familyid=2051a0c1-c9b5-4b0a-a8f5-770a549fd78c</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != vcrun2008 &amp;&amp; <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/winsxs/x86_Microsoft.<CONSTANT>VC90</CONSTANT>.MFC_1fc8b3b9a1e18e3b_9.0.30729.4148_x-ww_a57c1f53
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"prerequisite vcrun2008 already installed, skipping"</STRING>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>
    download vcrun2008-ms09-035 http://download.microsoft.com/download/9/7/7/977B481A-7BA6-4E30-AC40-ED51EB2028F2/vcredist_x86.exe bd18409cfe75b88c2a9432d36d96f4bf125a3237
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vcrun2008-ms09-035/vcredist_x86.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>

}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vjrun20() {
    load_dotnet20
    <COMMENT># See http://www.microsoft.com/downloads/details.aspx?FamilyId=E9D87F37-2ADC-4C32-95B3-B5E3A21BAB2C</COMMENT>
    download vjrun20 http://download.microsoft.com/download/9/2/3/92338cd0-759f-4815-8981-24b437be74ef/vjredist.exe 80a098e36b90d159da915aebfbfbacf35f302bd8
    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$WINETRICKS_QUIET</VARIABLE> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vjrun20/vjredist.exe /q /C:<STRING>"install /QNT"</STRING>
    <KEYWORD>else</KEYWORD>
        try <VARIABLE>$WINE</VARIABLE> vjrun20/vjredist.exe
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vc2003toolkit()
{
    <COMMENT># http://www.dotnetmonster.com/Uwe/Forum.aspx/dotnet-vc/2679/ANN-Microsoft-Visual-C-Toolkit-2003</COMMENT>
    <COMMENT>#download .  http://download.microsoft.com/download/3/9/b/39bac755-0a1e-4d0b-b72c-3a158b7444c4/VCToolkitSetup.exe 956c81c3106b97042c4126b23c81885c4b5211f4</COMMENT>
    <COMMENT># I'm going to link to this for now even though it's not straight from microsoft</COMMENT>
    <COMMENT># because it's a developer tool rather than a runtime, and</COMMENT>
    <COMMENT># I'm in the middle of trying to get lots of open source windows</COMMENT>
    <COMMENT># apps to build on Wine; see http://wiki.winehq.org/UnitTestSuites</COMMENT>
    <COMMENT># (Plus the sha1sum, which I still have from a copy straight from microsoft, </COMMENT>
    <COMMENT>#  protects us somewhat against corrupted copies.)</COMMENT>
    download . http://npg.dl.ac.uk/<CONSTANT>MIDAS</CONSTANT>/MIDAS_Release/VCToolkitSetup.exe 956c81c3106b97042c4126b23c81885c4b5211f4
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>
    try <VARIABLE>$WINE</VARIABLE> VCToolkitSetup.exe
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vc2005express()
{
    <COMMENT># Thanks to http://blogs.msdn.com/astebner/articles/551674.aspx for the recipe</COMMENT>
    load_dotnet20
    load_msxml6

    <COMMENT># http://go.microsoft.com/fwlink/?LinkId=51410</COMMENT>
    download vc2005express http://download.microsoft.com/download/8/3/a/83aad8f9-38ba-4503-b3cd-ba28c360c27b/ENU/vcsetup.exe 0292ae1d576edd8ee5350a27113c94c9f9958d5c

    <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> <VARIABLE>$WINETRICKS_QUIET</VARIABLE> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
        <COMMENT># Thanks to Aaron Stebner's unattended install recipe</COMMENT>
        <COMMENT># http://blogs.msdn.com/astebner/archive/2006/03/19/555326.aspx</COMMENT>

        <COMMENT># "http://go.microsoft.com/fwlink/?LinkId=51417"</COMMENT>
        download vc2005express http://download.microsoft.com/download/0/5/A/05AA45B9-A4BE-4872-8D57-733DF5297284/Ixpvc.exe ce0da62b5649f33c7a150de276d799fb2d68d12a

        <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>
        <FUNCTION>rm</FUNCTION> -rf vc2005express.tmp || <FUNCTION>true</FUNCTION>
        <FUNCTION>mkdir</FUNCTION> vc2005express.tmp
        <FUNCTION>cd</FUNCTION> vc2005express.tmp
        cabextract <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vc2005express/vcsetup.exe
        <FUNCTION>cp</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vc2005express/Ixpvc.exe .
        <FUNCTION>chmod</FUNCTION> +x Ixpvc.exe
        <COMMENT># Add /qn after ReallySuppress for a really silent install (but then you won't see any errors)</COMMENT>

        try <VARIABLE>$WINE</VARIABLE> Ixpvc /t:<STRING>"<VARIABLE>$WINETRICKS_TMP_WIN</VARIABLE><ESC>\\</ESC><ESC>\\</ESC>vc2005express.tmp"</STRING> /q:a /c:<STRING>"msiexec /i vcsetup.msi VSEXTUI=1 ADDLOCAL=ALL REBOOT=ReallySuppress"</STRING>

        <FUNCTION>cd</FUNCTION> ..
        <FUNCTION>rm</FUNCTION> -rf vc2005express.tmp || <FUNCTION>true</FUNCTION>
    <KEYWORD>else</KEYWORD>
        warn <STRING>"Don't forget to install the IDE, or mt.exe won't be installed"</STRING>
        <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vc2005express
        try <VARIABLE>$WINE</VARIABLE> vcsetup.exe
        <COMMENT># The interactive installer seems to be asynchronous, so wait until its log file directory is created</COMMENT>
        <KEYWORD>while</KEYWORD> <FUNCTION>test</FUNCTION> ! -d <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/Microsoft Visual Studio 8/Microsoft Visual C++ 2005 Express Edition - ENU/Logs"</STRING>
        <KEYWORD>do</KEYWORD>
          <FUNCTION>echo</FUNCTION> <STRING>"Waiting for install to finish..."</STRING>
          <FUNCTION>sleep</FUNCTION> 10
        <KEYWORD>done</KEYWORD>
    <KEYWORD>fi</KEYWORD>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vc2005expresssp1()
{
    warn <STRING>"<VARIABLE>$PACKAGE</VARIABLE> does not work yet"</STRING>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -f <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/Microsoft Visual Studio 8/Common7/Tools/vsvars32.bat"</STRING>
    <KEYWORD>then</KEYWORD>
        die <STRING>"install vc2005express first (this verb will be merged into that once it's debugged)"</STRING>
    <KEYWORD>fi</KEYWORD>

    <COMMENT># http://www.microsoft.com/downloads/details.aspx?FamilyId=7B0B0339-613A-46E6-AB4D-080D4D4A8C4E</COMMENT>
    download vc2005express download.microsoft.com/download/7/7/3/7737290f-98e8-45bf-9075-85cc6ae34bf1/VS80sp1-KB926748-X86-INTL.exe 8b9a0172efad64774aa122f29e093ad2043b308d
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vc2005express/VS80sp1-KB926748-X86-INTL.exe
}

load_vcdmount()
{
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$WINE</VARIABLE>"</STRING> != <STRING>""</STRING>
    <KEYWORD>then</KEYWORD>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>

    <COMMENT># Call only on real Windows.</COMMENT>
    <COMMENT># Sets VCDMOUNT and ISO_MOUNT_ROOT</COMMENT>

    <COMMENT># The only free mount tool I know for Windows Vista is Virtual CloneDrive,</COMMENT>
    <COMMENT># which can be downloaded at </COMMENT>
    <COMMENT># http://www.slysoft.com/en/virtual-clonedrive.html</COMMENT>
    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> actually install it here</COMMENT>

    <COMMENT># Locate vcdmount.exe.   <COMMENT_NOTE>FIXME:</COMMENT_NOTE> internationalize this.</COMMENT>
    <KEYWORD>for</KEYWORD> <CONSTANT>PROGRAMFILES</CONSTANT> <KEYWORD>in</KEYWORD> <STRING>"c:/Program Files (x86)"</STRING> <STRING>"c:/Program Files"</STRING>
    <KEYWORD>do</KEYWORD>
        <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$PROGRAMFILES</VARIABLE>"</STRING> &amp;&amp; <FUNCTION>break</FUNCTION>
    <KEYWORD>done</KEYWORD>
    <VARIABLE>VCDMOUNT</VARIABLE>=<STRING>"<VARIABLE>$PROGRAMFILES</VARIABLE>/Elaborate Bytes/VirtualCloneDrive/vcdmount.exe"</STRING>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -x <STRING>"<VARIABLE>$VCDMOUNT</VARIABLE>"</STRING> 
    <KEYWORD>then</KEYWORD>
        warn <STRING>"Installing Virtual CloneDrive"</STRING>
        download . http://static.slysoft.com/SetupVirtualCloneDrive.exe
        <COMMENT># have to use cmd else vista won't let cygwin run .exe's?</COMMENT>
        <FUNCTION>chmod</FUNCTION> +x <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/SetupVirtualCloneDrive.exe
        cmd /c <STRING>"<VARIABLE>$WINETRICKS_CACHE_WIN</VARIABLE>"</STRING>\\SetupVirtualCloneDrive.exe
    <KEYWORD>fi</KEYWORD>

    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> Use WMI to locate the drive named</COMMENT>
    <COMMENT># "ELBY CLONEDRIVE..." using WMI as described in</COMMENT>
    <COMMENT># http://delphihaven.wordpress.com/2009/07/05/using-wmi-to-get-a-drive-friendly-name/</COMMENT>
    <COMMENT># For now, you just have to hardcode it for your system :-(</COMMENT>
    warn <STRING>"You probably need to edit the script to tell it which drive VirtualCloneDrive picked"</STRING>
    <KEYWORD>for</KEYWORD> letter <KEYWORD>in</KEYWORD> e f g h
    <KEYWORD>do</KEYWORD>
        <VARIABLE>ISO_MOUNT_ROOT</VARIABLE>=/cygdrive/<VARIABLE>$letter</VARIABLE>
        <FUNCTION>test</FUNCTION> -d <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE> || <FUNCTION>break</FUNCTION>
    <KEYWORD>done</KEYWORD>
    <FUNCTION>test</FUNCTION> -d <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE> &amp;&amp; die <STRING>"cannot find the VirtualCloneDrive"</STRING>
}

iso_mount()
{
    <VARIABLE>my_img</VARIABLE>=<STRING>"<VARIABLE>$1</VARIABLE>"</STRING>

    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$WINE</VARIABLE>"</STRING> = <STRING>""</STRING>
    <KEYWORD>then</KEYWORD>
        load_vcdmount
        <VARIABLE>my_img_win</VARIABLE>=<STRING>"`<VARIABLE>$XXXPATH</VARIABLE> -w <VARIABLE>$my_img</VARIABLE>`"</STRING>
        try <STRING>"<VARIABLE>$VCDMOUNT</VARIABLE>"</STRING> /l=<VARIABLE>$letter</VARIABLE> <STRING>"<VARIABLE>$my_img_win</VARIABLE>"</STRING>
        <KEYWORD>while</KEYWORD> ! <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$ISO_MOUNT_ROOT</VARIABLE>"</STRING>
        <KEYWORD>do</KEYWORD>
            <FUNCTION>echo</FUNCTION> <STRING>"Waiting for mount to finish"</STRING>
            <FUNCTION>sleep</FUNCTION> 1
        <KEYWORD>done</KEYWORD>
    <KEYWORD>else</KEYWORD> 
        <COMMENT># Linux</COMMENT>
        <KEYWORD>case</KEYWORD> <STRING>"<VARIABLE>$GUI</VARIABLE>-<VARIABLE>$DE</VARIABLE>"</STRING> <KEYWORD>in</KEYWORD>
        gnome) 
          1-gksudo <STRING>"mkdir -p <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE>"</STRING>
          1-gksudo <STRING>"mount -o ro,loop <VARIABLE>$my_img</VARIABLE> <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE>"</STRING>
          ;;
        *)
          <FUNCTION>sudo</FUNCTION> <FUNCTION>mkdir</FUNCTION> -p <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE>
          <FUNCTION>sudo</FUNCTION> <FUNCTION>mount</FUNCTION> -o ro,loop <STRING>"<VARIABLE>$my_img</VARIABLE>"</STRING> <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE>
          ;;
        <KEYWORD>esac</KEYWORD>
    <KEYWORD>fi</KEYWORD>
}

iso_umount()
{
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$WINE</VARIABLE>"</STRING> = <STRING>""</STRING>
    <KEYWORD>then</KEYWORD>
        <COMMENT># Windows</COMMENT>
        load_vcdmount
        <STRING>"<VARIABLE>$VCDMOUNT</VARIABLE>"</STRING> /u
    <KEYWORD>else</KEYWORD>
        <KEYWORD>case</KEYWORD> <STRING>"<VARIABLE>$GUI</VARIABLE>-<VARIABLE>$DE</VARIABLE>"</STRING> <KEYWORD>in</KEYWORD>
        gnome) 
          1-gksudo <STRING>"umount <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE>"</STRING>
          1-gksudo <STRING>"rm -rf <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE>"</STRING>
          ;;
        *)
          <FUNCTION>sudo</FUNCTION> <FUNCTION>umount</FUNCTION> <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE>
          <FUNCTION>sudo</FUNCTION> <FUNCTION>rm</FUNCTION> -rf <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE>
          ;;
        <KEYWORD>esac</KEYWORD>
    <KEYWORD>fi</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vc2005trial()
{
    load_vcrun6
    load_dotnet20
    load_msxml6
    load_vcdmount

    warn <STRING>"Downloading/checksumming Visual C++ 2005 Trial.  This will take some time!"</STRING>
    download vc2005trial http://download.microsoft.com/download/6/f/5/6f5f7a01-50bb-422d-8742-c099c8896969/En_vs_2005_vsts_180_Trial.img f66ae07618d67e693ca0524d3582208c20e07823

    iso_umount
    iso_mount <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vc2005trial/En_vs_2005_vsts_180_Trial.img

    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> do this right</COMMENT>
    <FUNCTION>rm</FUNCTION> -f /cygdrive/c/Users/<VARIABLE>$USER</VARIABLE>/AppData/<FUNCTION>local</FUNCTION>/temp/dd_vsinstall80.txt

    <KEYWORD>if</KEYWORD> <FUNCTION>false</FUNCTION> &amp;&amp; <KEYWORD>[</KEYWORD> <VARIABLE>$WINETRICKS_QUIET</VARIABLE> <KEYWORD>]</KEYWORD>
    <KEYWORD>then</KEYWORD>
      <COMMENT># Thanks to http://blogs.msdn.com/astebner/archive/2005/05/24/421314.aspx for unattended install method</COMMENT>
      <COMMENT># See also http://support.microsoft.com/?kbid=913445</COMMENT>
      die <STRING>"not implemented yet"</STRING>
    <KEYWORD>else</KEYWORD>
      <FUNCTION>cd</FUNCTION> <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE>/vs/Setup
      try <VARIABLE>$WINE</VARIABLE> setup.exe

      <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> unify these and make the windows one right</COMMENT>
      <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$WINE</VARIABLE>"</STRING> = <STRING>""</STRING>
      <KEYWORD>then</KEYWORD>
          <KEYWORD>while</KEYWORD> ! <FUNCTION>tr</FUNCTION> -d <STRING>'<ESC>\000</ESC>'</STRING> <KEYWORD>&lt;</KEYWORD> /cygdrive/c/Users/<VARIABLE>$USER</VARIABLE>/AppData/<FUNCTION>local</FUNCTION>/temp/dd_vsinstall80.txt | <FUNCTION>grep</FUNCTION> End_Session
          <KEYWORD>do</KEYWORD>
              <FUNCTION>sleep</FUNCTION> 10
              <FUNCTION>echo</FUNCTION> waiting <KEYWORD>for</KEYWORD> setup to finish
          <KEYWORD>done</KEYWORD>
      <KEYWORD>else</KEYWORD>
          <KEYWORD>while</KEYWORD> <FUNCTION>ps</FUNCTION> <VARIABLE>$psargs</VARIABLE> | <FUNCTION>grep</FUNCTION> -q setup.exe
          <KEYWORD>do</KEYWORD>
              <FUNCTION>sleep</FUNCTION> 10
              <FUNCTION>echo</FUNCTION> waiting <KEYWORD>for</KEYWORD> setup to finish
          <KEYWORD>done</KEYWORD>
      <KEYWORD>fi</KEYWORD>
      <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
    <KEYWORD>fi</KEYWORD>

    iso_umount
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vc2005sp1()
{
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -f <STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>/Microsoft Visual Studio 8/Common7/Tools/vsvars32.bat"</STRING>
    <KEYWORD>then</KEYWORD>
        die <STRING>"install vc2005trial first (this verb will be merged into that once it's debugged)"</STRING>
    <KEYWORD>fi</KEYWORD>

    <COMMENT># http://www.microsoft.com/downloads/details.aspx?FamilyID=bb4a75ab-e2d4-4c96-b39d-37baf6b5b1dc</COMMENT>
    download vc2005sp1 http://download.microsoft.com/download/6/3/c/63c69e5d-74c9-48ea-b905-30ac3831f288/VS80sp1-KB926601-X86-ENU.exe d4b5c73253a7a4f5b4b389f41b94fea4a7247b57
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vc2005sp1
    try <VARIABLE>$WINE</VARIABLE> VS80sp1-KB926601-X86-ENU.exe
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vc2008trial()
{
    load_vcrun6
    load_dotnet20
    load_msxml6
    load_vcdmount

    warn <STRING>"Visual C++ 2008 Trial does not yet work in Wine, and this recipe isn't quite debugged even in windows yet."</STRING>
    warn <STRING>"Downloading/checksumming Visual C++ 2008 Trial.  This will take some time!"</STRING>
    <COMMENT># http://www.microsoft.com/downloads/details.aspx?FamilyID=83c3a1ec-ed72-4a79-8961-25635db0192b</COMMENT>
    download vc2008trial http://download.microsoft.com/download/8/1/d/81d3f35e-fa03-485b-953b-ff952e402520/VS2008ProEdition90dayTrialENUX1435622.iso dfb601096f62fd75af6ad62b277be79793f53b56

    iso_umount
    iso_mount <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vc2008trial/VS2008ProEdition90dayTrialENUX1435622.iso

    <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> do this right</COMMENT>
    <FUNCTION>rm</FUNCTION> -f /cygdrive/c/Users/<VARIABLE>$USER</VARIABLE>/AppData/<FUNCTION>local</FUNCTION>/temp/dd_vsinstall80.txt

    <KEYWORD>if</KEYWORD> <FUNCTION>true</FUNCTION>
    <KEYWORD>then</KEYWORD>
      <FUNCTION>cd</FUNCTION> <VARIABLE>$ISO_MOUNT_ROOT</VARIABLE>/Setup
      try <VARIABLE>$WINE</VARIABLE> setup.exe

      <COMMENT># <COMMENT_NOTE>FIXME:</COMMENT_NOTE> unify these and make the windows one right</COMMENT>
      <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$WINE</VARIABLE>"</STRING> = <STRING>""</STRING>
      <KEYWORD>then</KEYWORD>
          <KEYWORD>while</KEYWORD> ! <FUNCTION>tr</FUNCTION> -d <STRING>'<ESC>\000</ESC>'</STRING> <KEYWORD>&lt;</KEYWORD> /cygdrive/c/Users/<VARIABLE>$USER</VARIABLE>/AppData/<FUNCTION>local</FUNCTION>/temp/dd_vsinstall80.txt | <FUNCTION>grep</FUNCTION> End_Session
          <KEYWORD>do</KEYWORD>
              <FUNCTION>sleep</FUNCTION> 10
              <FUNCTION>echo</FUNCTION> waiting <KEYWORD>for</KEYWORD> setup to finish
          <KEYWORD>done</KEYWORD>
      <KEYWORD>else</KEYWORD>
          <KEYWORD>while</KEYWORD> <FUNCTION>ps</FUNCTION> <VARIABLE>$psargs</VARIABLE> | <FUNCTION>grep</FUNCTION> -q setup.exe
          <KEYWORD>do</KEYWORD>
              <FUNCTION>sleep</FUNCTION> 10
              <FUNCTION>echo</FUNCTION> waiting <KEYWORD>for</KEYWORD> setup to finish
          <KEYWORD>done</KEYWORD>
      <KEYWORD>fi</KEYWORD>
      <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
    <KEYWORD>fi</KEYWORD>

    iso_umount
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vc2008sp1()
{
    <FUNCTION>echo</FUNCTION> pfdu is <KEYWORD>${</KEYWORD>programfilesdir_unix<KEYWORD>}</KEYWORD>
    <FUNCTION>echo</FUNCTION> setting FOO
    <VARIABLE>FOO</VARIABLE>=<STRING>"<VARIABLE>${programfilesdir_unix}</VARIABLE>/Microsoft Visual Studio 9.0/Microsoft Visual Studio 2008 Professional Edition - ENU"</STRING>
    <FUNCTION>echo</FUNCTION> FOO <FUNCTION>set</FUNCTION> to <VARIABLE>$FOO</VARIABLE>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -d <STRING>"<VARIABLE>$FOO</VARIABLE>"</STRING>
    <KEYWORD>then</KEYWORD>
        die <STRING>"install vc2008trial first (this verb will be merged into that once it's debugged)"</STRING>
    <KEYWORD>fi</KEYWORD>

    <COMMENT># http://www.microsoft.com/downloads/details.aspx?familyid=FBEE1648-7106-44A7-9649-6D9F6D58056E</COMMENT>
    download vc2008sp1 http://download.microsoft.com/download/f/6/7/f67fdf05-0586-413f-8231-affbe12f80a8/VS90sp1-KB945140-ENU.exe 91c146dffa96c6d8f9ceb2b5235b04349cf93ed9
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vc2008sp1
    try <VARIABLE>$WINE</VARIABLE> VS90sp1-KB945140-ENU.exe
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_vlc() {
    download . http://www.videolan.org/mirror-geo-redirect.php?<FUNCTION>file</FUNCTION>=vlc/0.8.6f/win32/vlc-0.8.6f-win32.exe b83558e4232c47a385dbc93ebdc2e6b942fbcfbf
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vlc-0.8.6f-win32.exe <VARIABLE>$WINETRICKS_S</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_wininet() {
    <COMMENT># This is an updated wininet from IE 5.0.1.</COMMENT>
    <COMMENT># (Good enough for Active Worlds browser.  Also helps "Avatar - Legends of the Arena" get to login screen.)</COMMENT>
    <COMMENT># See http://www.microsoft.com/downloads/details.aspx?familyid=6DEE32AB-B618-4FB3-9A45-CDD08162E167</COMMENT>
    download . http://download.microsoft.com/download/ie5/Update/1/<CONSTANT>WIN98</CONSTANT>/EN-US/3725.exe b048e0b4e303298de3317b16f7008c43ca71ddfe
    try cabextract --directory=<STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>/3725.exe"</STRING>
    try <FUNCTION>cp</FUNCTION> -f <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/Wininet.dll <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/wininet.dll
    override_dlls native,<FUNCTION>builtin</FUNCTION> wininet
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_wme9() {
    <COMMENT># See also http://www.microsoft.com/downloads/details.aspx?FamilyID=5691ba02-e496-465a-bba9-b2f1182cdf24</COMMENT>
    download wme9 http://download.microsoft.com/download/8/1/f/81f9402f-efdd-439d-b2a4-089563199d47/WMEncoder.exe 7a3f8781f3e5705651992ef0150ee30bc1295116

    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/wme9/WMEncoder.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_wmp9() {
    <COMMENT># Not really expected to work well yet; see</COMMENT>
    <COMMENT># http://appdb.winehq.org/appview.php?versionId=1449</COMMENT>

    load_wsh56

    set_winver win2k

    <COMMENT># See also http://www.microsoft.com/windows/windowsmedia/player/9series/default.aspx</COMMENT>
    download wmp9 http://download.microsoft.com/download/1/b/c/1bc0b1a3-c839-4b36-8f3c-19847ba09299/MPSetup.exe 580536d10657fa3868de2869a3902d31a0de791b

    <COMMENT># Have to run twice; see http://bugs.winehq.org/show_bug.cgi?id=1886</COMMENT>
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/wmp9/MPSetup.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/wmp9/MPSetup.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>

    <COMMENT># Also install the codecs</COMMENT>
    <COMMENT># See http://www.microsoft.com/downloads/details.aspx?FamilyID=06fcaab7-dcc9-466b-b0c4-04db144bb601</COMMENT>
    download . http://download.microsoft.com/download/5/c/2/5c29d825-61eb-4b16-8eb8-58367d0464d5/WM9Codecs9x.exe 8b76bdcbea0057eb12b7966edab4b942ddacc253
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/WM9Codecs9x.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>

    <COMMENT># Disable WMP's services, since they depend on unimplemented stuff, they trigger the GUI debugger several times</COMMENT>
    try_regedit /D <STRING>"HKEY_LOCAL_MACHINE<ESC>\S</ESC>ystem<ESC>\C</ESC>urrentControlSet<ESC>\S</ESC>ervices<ESC>\C</ESC>dr4_2K"</STRING>
    try_regedit /D <STRING>"HKEY_LOCAL_MACHINE<ESC>\S</ESC>ystem<ESC>\C</ESC>urrentControlSet<ESC>\S</ESC>ervices<ESC>\C</ESC>dralw2k"</STRING>

    unset_winver
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_wmp10() {
    <COMMENT># See http://appdb.winehq.org/appview.php?iVersionId=3212</COMMENT>

    load_wsh56

    <COMMENT># See also http://www.microsoft.com/windows/windowsmedia/player/10</COMMENT>
    download . http://download.microsoft.com/download/1/2/A/12A31F29-2FA9-4F50-B95D-E45EF7013F87/MP10Setup.exe 69862273a5d9d97b4a2e5a3bd93898d259e86657

    <COMMENT># Crashes on exit, but otherwise ok; see http://bugs.winehq.org/show_bug.cgi?id=12633</COMMENT>
    <FUNCTION>echo</FUNCTION> Executing <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/MP10Setup.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/MP10Setup.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>

    <COMMENT># Also install the codecs</COMMENT>
    <COMMENT># See http://www.microsoft.com/downloads/details.aspx?FamilyID=06fcaab7-dcc9-466b-b0c4-04db144bb601</COMMENT>
    download . http://download.microsoft.com/download/5/c/2/5c29d825-61eb-4b16-8eb8-58367d0464d5/WM9Codecs9x.exe 8b76bdcbea0057eb12b7966edab4b942ddacc253
    set_winver win2k
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/WM9Codecs9x.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>

    <COMMENT># Disable WMP's services, since they depend on unimplemented stuff, they trigger the GUI debugger several times</COMMENT>
    try_regedit /D <STRING>"HKEY_LOCAL_MACHINE<ESC>\S</ESC>ystem<ESC>\C</ESC>urrentControlSet<ESC>\S</ESC>ervices<ESC>\C</ESC>dr4_2K"</STRING>
    try_regedit /D <STRING>"HKEY_LOCAL_MACHINE<ESC>\S</ESC>ystem<ESC>\C</ESC>urrentControlSet<ESC>\S</ESC>ervices<ESC>\C</ESC>dralw2k"</STRING>

    unset_winver
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_wenquanyi() {
    <COMMENT># See http://wenq.org/enindex.cgi</COMMENT>
    <COMMENT># Donate at http://wenq.org/enindex.cgi?Download(en)#MicroHei_Beta if you want to help support free CJK font development</COMMENT>
    download . <VARIABLE>$SOURCEFORGE</VARIABLE>/wqy/wqy-microhei-0.2.0-beta.<FUNCTION>tar</FUNCTION>.gz 28023041b22b6368bcfae076de68109b81e77976
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>/"</STRING>
    gunzip -dc <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>/wqy-microhei-0.2.0-beta.tar.gz"</STRING> | <FUNCTION>tar</FUNCTION> -xf -
    try <FUNCTION>mv</FUNCTION> wqy-microhei/wqy-microhei.ttc <STRING>"<VARIABLE>$winefontsdir</VARIABLE>"</STRING>
    register_font wqy-microhei.ttc <STRING>"WenQuanYi Micro Hei"</STRING>
    <FUNCTION>cd</FUNCTION> <STRING>"<VARIABLE>$olddir</VARIABLE>"</STRING>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_wsh56() {
    <COMMENT># If this is just a dependency check, don't re-install</COMMENT>
    <KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> <VARIABLE>$PACKAGE</VARIABLE> != wsh56 &amp;&amp; <FUNCTION>test</FUNCTION> -f <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/wscript.exe
    <KEYWORD>then</KEYWORD>
        <FUNCTION>echo</FUNCTION> <STRING>"prerequisite wsh56 already installed, skipping"</STRING>
        <FUNCTION>return</FUNCTION>
    <KEYWORD>fi</KEYWORD>

    load_vcrun6

    <COMMENT># See also http://www.microsoft.com/downloads/details.aspx?displaylang=en&amp;FamilyID=C717D943-7E4B-4622-86EB-95A22B832CAA</COMMENT>
    download . http://download.microsoft.com/download/2/8/a/28a5a346-1be1-4049-b554-3bc5f3174353/WindowsXP-Windows2000-Script56-KB917344-x86-enu.exe f4692766caa3ee9b38d4166845486c6199a33457

    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/WindowsXP-Windows2000-Script56-KB917344-x86-enu.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_wsh56js() {
    <COMMENT># This installs jscript 5.6 (but not vbscript)</COMMENT>
    <COMMENT># See also http://www.microsoft.com/downloads/details.aspx?FamilyID=16dd21a1-c4ee-4eca-8b80-7bd1dfefb4f8&amp;DisplayLang=en</COMMENT>
    download . http://download.microsoft.com/download/b/c/3/bc3a0c36-fada-497d-a3de-8b0139766f3b/Windows2000-KB917344-56-x86-enu.exe add5f74c5bd4da6cfae47f8306de213ec6ed52c8

    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/Windows2000-KB917344-56-x86-enu.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_wsh56vb() {
    <COMMENT># This installs vbscript 5.6 (but not jscript)</COMMENT>
    <COMMENT># See also http://www.microsoft.com/downloads/details.aspx?familyid=4F728263-83A3-464B-BCC0-54E63714BC75</COMMENT>
    download . http://download.microsoft.com/download/<CONSTANT>IE60</CONSTANT>/Patch/<CONSTANT>Q318089</CONSTANT>/W9XNT4Me/EN-US/vbs56men.exe 48f14a93db33caff271da0c93f334971f9d7cb22

    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/vbs56men.exe <VARIABLE>$WINETRICKS_QUIET</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_xact() {
    helper_directx_dl ;

    <COMMENT># xactengine?_?.dll, X3DAudio?_?.dll, xaudio?_?.dll, xapofx?_?.dll - extract</COMMENT>
    cabextract -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> -L -F <STRING>'*_xact_*x86*'</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<VARIABLE>$DIRECTX_NAME</VARIABLE>
    cabextract -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> -L -F <STRING>'*_x3daudio_*x86*'</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<VARIABLE>$DIRECTX_NAME</VARIABLE>
    cabextract -d <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING> -L -F <STRING>'*_xaudio_*x86*'</STRING> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/<VARIABLE>$DIRECTX_NAME</VARIABLE>
    <KEYWORD>for</KEYWORD> x <KEYWORD>in</KEYWORD> <KEYWORD>`</KEYWORD><FUNCTION>ls</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/*.cab<KEYWORD>`</KEYWORD>
    <KEYWORD>do</KEYWORD>
      cabextract -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32 -L -F <STRING>'*.dll'</STRING> <STRING>"<VARIABLE>$x</VARIABLE>"</STRING>
    <KEYWORD>done</KEYWORD>

    <COMMENT># xactengine?_?.dll, xaudio?_?.dll - register</COMMENT>
    <KEYWORD>for</KEYWORD> x <KEYWORD>in</KEYWORD> <KEYWORD>`</KEYWORD><FUNCTION>ls</FUNCTION> <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/xactengine* <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/system32/xaudio*<KEYWORD>`</KEYWORD>
    <KEYWORD>do</KEYWORD>
      try <VARIABLE>$WINE</VARIABLE> regsvr32 <KEYWORD>`</KEYWORD><FUNCTION>basename</FUNCTION> <VARIABLE>$x</VARIABLE><KEYWORD>`</KEYWORD>
    <KEYWORD>done</KEYWORD>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

load_xvid() {
    <COMMENT># xvid</COMMENT>
    load_vcrun6
    download . http://www.koepi.info/Xvid-1.2.2-07062009.exe 435203e7f713c4484ca4f50f43e847f3dc118962
    try <VARIABLE>$WINE</VARIABLE> <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>/Xvid-1.2.2-07062009.exe <VARIABLE>$WINETRICKS_SILENT</VARIABLE>
}

<COMMENT>#----------------------------------------------------------------</COMMENT>

print_version() {
    <FUNCTION>echo</FUNCTION> <STRING>"<VARIABLE>$VERSION</VARIABLE>"</STRING>
}

<COMMENT>#--------- Main program -----------------------------------------</COMMENT>

<COMMENT># On Solaris, choose more modern commands (needed for id -u).</COMMENT>
<KEYWORD>case</KEYWORD> <KEYWORD>`</KEYWORD><FUNCTION>uname</FUNCTION> -s<KEYWORD>`</KEYWORD> <KEYWORD>in</KEYWORD>
SunOS) <CONSTANT>PATH</CONSTANT>=<STRING>"/usr/xpg6/bin:/usr/xpg4/bin:<VARIABLE>$PATH</VARIABLE>"</STRING>
      ;;
<KEYWORD>esac</KEYWORD>

<KEYWORD>case</KEYWORD> <STRING>"<VARIABLE>$1</VARIABLE>"</STRING> <KEYWORD>in</KEYWORD>
-V|--version)
    <FUNCTION>echo</FUNCTION> <STRING>"Winetricks version <VARIABLE>$VERSION</VARIABLE>.  (C) 2007-2009 Dan Kegel et al.  LGPL."</STRING>
    <FUNCTION>exit</FUNCTION> 0
    ;;
<KEYWORD>esac</KEYWORD>

detectDE

<VARIABLE>GUI</VARIABLE>=0
<KEYWORD>case</KEYWORD> x<STRING>"<VARIABLE>$1</VARIABLE>"</STRING> <KEYWORD>in</KEYWORD>
x) GUI=1 ;;
x-h|x--help|xhelp) usage ; <FUNCTION>exit</FUNCTION> 1 ;;
<KEYWORD>esac</KEYWORD>

<KEYWORD>case</KEYWORD> <STRING>"<VARIABLE>$OS</VARIABLE>"</STRING> <KEYWORD>in</KEYWORD>
 <STRING>"Windows_NT"</STRING>)
  ;;
 *)
  <COMMENT># Prevent running with wrong user id.</COMMENT>
  <COMMENT># It's bad to create files as the wrong user!</COMMENT>
  die_if_user_not_dirowner <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>"</STRING>
  die_if_user_not_dirowner <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>

  <KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> ! -x <STRING>"`which "</STRING><VARIABLE>$WINE</VARIABLE><STRING>"`"</STRING> <KEYWORD>]</KEYWORD>
  <KEYWORD>then</KEYWORD>
      die <STRING>"Cannot find wine (<VARIABLE>$WINE</VARIABLE>)"</STRING>
  <KEYWORD>fi</KEYWORD>

  <COMMENT># Create wineprefix if not already there</COMMENT>
  <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$WINEPREFIX</VARIABLE>"</STRING> || <CONSTANT>WINEDLLOVERRIDES</CONSTANT>=mshtml= <VARIABLE>$WINE</VARIABLE> cmd /c <FUNCTION>echo</FUNCTION> <FUNCTION>yes</FUNCTION> <KEYWORD>&gt;</KEYWORD> /dev/null <KEYWORD>2&gt;&amp;1</KEYWORD>
  ;;
<KEYWORD>esac</KEYWORD>

<FUNCTION>mkdir</FUNCTION> -p <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>

<KEYWORD>case</KEYWORD> <VARIABLE>$GUI</VARIABLE> <KEYWORD>in</KEYWORD>
1) dogui ; <FUNCTION>set</FUNCTION> <VARIABLE>$todo</VARIABLE> ;;
<KEYWORD>esac</KEYWORD>

<FUNCTION>mkdir</FUNCTION> -p <STRING>"<VARIABLE>$WINETRICKS_CACHE</VARIABLE>"</STRING>
<VARIABLE>olddir</VARIABLE>=<KEYWORD>`</KEYWORD><FUNCTION>pwd</FUNCTION><KEYWORD>`</KEYWORD>
<COMMENT># Clean up after failed runs, if needed</COMMENT>
<FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/*

<COMMENT># The folder-name is localized!</COMMENT>
<VARIABLE>programfilesdir_win</VARIABLE>=<STRING>"`unset WINEDEBUG; WINEDLLOVERRIDES=mshtml= <VARIABLE>$WINE</VARIABLE> cmd.exe /c echo "</STRING>%ProgramFiles%<STRING>"`"</STRING>
<FUNCTION>test</FUNCTION> x<STRING>"<VARIABLE>$programfilesdir_win</VARIABLE>"</STRING> != x || die <STRING>"<VARIABLE>$WINE</VARIABLE> cmd.exe /c echo '%ProgramFiles%' returned empty string"</STRING>
<VARIABLE>programfilesdir_unix</VARIABLE>=<STRING>"`unset WINEDEBUG; <VARIABLE>$XXXPATH</VARIABLE> -u "</STRING><VARIABLE>$programfilesdir_win</VARIABLE><STRING>" | tr -d '<ESC>\015</ESC>' `"</STRING>
<FUNCTION>test</FUNCTION> x<STRING>"<VARIABLE>$programfilesdir_unix</VARIABLE>"</STRING> != x || die <STRING>"winepath -u <VARIABLE>$programfilesdir_win</VARIABLE> returned empty string"</STRING>
<VARIABLE>winetricks_tmp_win</VARIABLE>=<STRING>"`<VARIABLE>$XXXPATH</VARIABLE> -w "</STRING><VARIABLE>$WINETRICKS_TMP</VARIABLE><STRING>"`"</STRING>

<COMMENT># (Fixme: get fonts path from SHGetFolderPath</COMMENT>
<COMMENT># See also http://blogs.msdn.com/oldnewthing/archive/2003/11/03/55532.aspx)</COMMENT>
<COMMENT>#</COMMENT>
<COMMENT># Did the user rename Fonts to fonts?</COMMENT>
<KEYWORD>if</KEYWORD> <FUNCTION>test</FUNCTION> ! -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/Fonts &amp;&amp; <FUNCTION>test</FUNCTION> -d <STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/fonts
<KEYWORD>then</KEYWORD>
    <VARIABLE>winefontsdir</VARIABLE>=<STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/fonts
<KEYWORD>else</KEYWORD>
    <VARIABLE>winefontsdir</VARIABLE>=<STRING>"<VARIABLE>$WINDIR</VARIABLE>"</STRING>/Fonts
<KEYWORD>fi</KEYWORD>

<COMMENT># Mac folks tend to not have sha1sum, but we can make do with openssl</COMMENT>
<KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> -x <STRING>"`which sha1sum`"</STRING> <KEYWORD>]</KEYWORD>
<KEYWORD>then</KEYWORD>
   <VARIABLE>SHA1SUM</VARIABLE>=<STRING>"sha1sum"</STRING>
<KEYWORD>elif</KEYWORD> <KEYWORD>[</KEYWORD> -x <STRING>"`which openssl`"</STRING> <KEYWORD>]</KEYWORD>
<KEYWORD>then</KEYWORD>
   <VARIABLE>SHA1SUM</VARIABLE>=<STRING>"openssl dgst -sha1"</STRING>
<KEYWORD>else</KEYWORD>
   die <STRING>"No sha1sum utility available."</STRING>
<KEYWORD>fi</KEYWORD>

<KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> ! -x <STRING>"`which cabextract`"</STRING> <KEYWORD>]</KEYWORD>
<KEYWORD>then</KEYWORD>
    die <STRING>"Cannot find cabextract.  Please install it (e.g. 'sudo apt-get install cabextract' or 'sudo yum install cabextract')."</STRING>
<KEYWORD>fi</KEYWORD>

<KEYWORD>if</KEYWORD> <KEYWORD>[</KEYWORD> ! -x <STRING>"`which unzip`"</STRING> <KEYWORD>]</KEYWORD>
<KEYWORD>then</KEYWORD>
    die <STRING>"Cannot find unzip.  Please install it (e.g. 'sudo apt-get install unzip' or 'sudo yum install unzip')."</STRING>
<KEYWORD>fi</KEYWORD>

<KEYWORD>while</KEYWORD> <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$1</VARIABLE>"</STRING> != <STRING>""</STRING>
<KEYWORD>do</KEYWORD>
    <VARIABLE>PACKAGE</VARIABLE>=<VARIABLE>$1</VARIABLE>
    <KEYWORD>case</KEYWORD> <VARIABLE>$1</VARIABLE> <KEYWORD>in</KEYWORD>
    -q) <CONSTANT>WINETRICKS_QUIET</CONSTANT>=<STRING>"/q"</STRING>
        <VARIABLE>WINETRICKS_QUIET_T</VARIABLE>=<STRING>"/qt"</STRING> <COMMENT># Microsoft Control Pad</COMMENT>
        <VARIABLE>WINETRICKS_UNIXQUIET</VARIABLE>=<STRING>"-q"</STRING>
        <VARIABLE>WINETRICKS_SILENT</VARIABLE>=<STRING>"/silent"</STRING>
        <VARIABLE>WINETRICKS_S</VARIABLE>=<STRING>"/S"</STRING>                 <COMMENT># for NSIS installers</COMMENT>
        <VARIABLE>WINEDEBUG</VARIABLE>=<KEYWORD>${</KEYWORD><CONSTANT>WINEDEBUG</CONSTANT>:-<STRING>"fixme-all"</STRING><KEYWORD>}</KEYWORD>
        <FUNCTION>export</FUNCTION> <CONSTANT>WINEDEBUG</CONSTANT>
        ;;
    -v) <FUNCTION>set</FUNCTION> -x;;
    art2kmin|art2k7min) load_art2kmin;;
    atmlib) load_atmlib;;
    autohotkey|ahk) load_autohotkey;;
    cmake) load_cmake;;
    comctl32.ocx) load_comctl32ocx;;
    comctl32|cc580) load_cc580;;
    colorprofile) load_colorprofile;;
    controlpad|fm20) load_controlpad;;
    corefonts) load_corefonts;;
    cygwin) load_cygwin;;
    d3dx9) load_d3dx9;;
    dcom98) load_dcom98;;
    dinput8) load_dinput8;;
    dirac|dirac0.8) load_dirac08;;
    directplay|dxplay|dplay) load_directplay;;
    directx9) load_directx9;;
    divx) load_divx;;
    dotnet1|dotnet11) load_dotnet11; load_fontfix;;
    dotnet11sdk) load_dotnet11sdk;;
    dotnet2|dotnet20) load_dotnet20; load_fontfix;;
    dotnet20sdk) load_dotnet20sdk;;
    dotnet20sp2) load_dotnet20sp2; load_fontfix;;
    dotnet3|dotnet30) load_dotnet30; load_fontfix;;
    dotnet35) load_dotnet35; load_fontfix;;
    droid) load_droid;;
    ffdshow) load_ffdshow;;
    firefox|firefox3) load_firefox;;
    flash) load_flash;;
    fontfix) load_fontfix;;
    fontsmooth-bgr|fs-bgr) load_fs_bgr;;
    fontsmooth-disable|fs-disable) load_fs_disable;;
    fontsmooth-gray|fontsmooth-grayscale|fontsmooth-enable|fs-enable) load_fs_grayscale;;
    fontsmooth-rgb|fs-rgb|fs-cleartype) load_fs_rgb;;
    gdiplus) load_gdiplus;;
    gecko) load_gecko;;
    gecko-dbg|geckodbg|gecko_dbg|geckodebug|gecko_debug|gecko-debug) load_gecko_dbg;;
    glsl-disable) load_glsl_disable;;
    glsl-enable) load_glsl_enable;;
    hosts) load_hosts;;
    icodecs) load_icodecs;;
    ie6) load_ie6;;
    ie7) load_ie7;;
    jet40) load_jet40;;
    kde) load_kde;;
    liberation) load_liberation;;
    mdac25) load_mdac25;;
    mdac27) load_mdac27;;
    mdac28) load_mdac28;;
    mfc40) load_mfc40;;
    mingw|mingw-min|mingw_min) load_mingw_min;;
    mingw-gdb|mingw_gdb) load_mingw_gdb;;
    mono19|mono20) load_mono20;;
    mono22) load_mono22;;
    mono24) load_mono24;;
    mozillabuild) load_mozillabuild;;
    mpc) load_mpc;;
    msi2) load_msi2;;
    mshflxgd) load_mshflxgd;;
    msls31) load_msls31;;
    msmask) load_msmask;;
    msscript) load_msscript;;
    msxml3) load_msxml3;;
    msxml4) load_msxml4;;
    msxml6) load_msxml6;;
    ogg) load_ogg;;
    ole2) load_ole2;;
    openwatcom|watcom) load_openwatcom;;
    pdh) load_pdh;;
    physx) load_physx;;
    psdk2003) load_psdk2003;;
    psdkvista) load_psdkvista;;
    psdkwin7) load_psdkwin7;;
    python|python26) load_python26;;
    python-comtypes|pythoncom|python-com|pythoncomtypes) load_python_comtypes;;
    quicktime72) load_quicktime72;;
    riched20) load_riched20;;
    riched30) load_riched30;;
    richtx32) load_richtx32;;
    shockwave) load_shockwave;;
    tahoma) load_tahoma;;
    urlmon) load_urlmon;;
    vbrun200|vb2run) load_vb2run;;
    vbrun300|vb3run) load_vb3run;;
    vbrun400|vb4run) load_vb4run;;
    vbrun500|vbvm50|vb5run) load_vbvm50;;
    vbrun600|vbrun60|vb6run) load_vbrun60;;
    vc2003toolkit) load_vc2003toolkit;;
    vc2005express) load_vc2005express;;
    vc2005expresssp1) load_vc2005expresssp1;;
    vc2005sp1) load_vc2005sp1;;
    vc2008sp1) load_vc2008sp1;;
    vc2005trial) load_vc2005trial;;
    vc2008trial) load_vc2008trial;;
    vcrun600|vcrun60|vcrun6|mfc42) load_vcrun6;;
    vcrun60sp6|vcrun6sp6) load_vcrun6sp6;;
    vcrun2003) load_vcrun2003;;
    vcrun2005|vcrun2005sp1) load_vcrun2005;;
    vcrun2008|vcrun2008sp1) load_vcrun2008;;
    vjrun20) load_vjrun20;;
    vlc) load_vlc;;
    wenquanyi) load_wenquanyi;;
    wininet) load_wininet;;
    wme9) load_wme9;;
    wmp9) load_wmp9;;
    wmp10) load_wmp10;;
    wsh56) load_wsh56;;
    wsh56js) load_wsh56js;;
    wsh56vb) load_wsh56vb;;
    xact|xactengine|x3daudio) load_xact;;
    xvid) load_xvid;;

    allcodecs|allvcodecs) load_vcrun6; load_ffdshow; load_xvid; load_icodecs;;
    allfonts) load_corefonts; load_tahoma; load_liberation; load_droid; load_wenquanyi;;
    fakeie6) set_fakeie6;;
    heapcheck) set_heapcheck;;
    native_mdac) set_native_mdac;;
    native_oleaut32) override_dlls native,<FUNCTION>builtin</FUNCTION> oleaut32;;
    nocrashdialog) disable_crashdialog;;
    <VARIABLE>orm</VARIABLE>=backbuffer|backbuffer) set_orm backbuffer;;
    <VARIABLE>orm</VARIABLE>=fbo|fbo) set_orm fbo;;
    <VARIABLE>orm</VARIABLE>=pbuffer|pbuffer) set_orm pbuffer;;
    sandbox) sandbox;;
    <VARIABLE>sound</VARIABLE>=alsa|alsa) set_sound_driver alsa;;
    <VARIABLE>sound</VARIABLE>=audioio|audioio) set_sound_driver audioio;;
    <VARIABLE>sound</VARIABLE>=coreaudio|coreaudio) set_sound_driver coreaudio;;
    <VARIABLE>sound</VARIABLE>=esound|esound) set_sound_driver esound;;
    <VARIABLE>sound</VARIABLE>=jack|jack) set_sound_driver jack;;
    <VARIABLE>sound</VARIABLE>=nas|nas) set_sound_driver nas;;
    <VARIABLE>sound</VARIABLE>=oss|oss) set_sound_driver oss;;
    version) print_version;;
    volnum) volnum;;
    <VARIABLE>winver</VARIABLE>=nt40|nt40) set_winver nt40;;
    <VARIABLE>winver</VARIABLE>=win98|win98) set_winver win98;;
    <VARIABLE>winver</VARIABLE>=win2k|win2k) set_winver win2k;;
    <VARIABLE>winver</VARIABLE>=winxp|winxp) set_winver winxp;;
    <VARIABLE>winver</VARIABLE>=vista|vista) set_winver vista;;
    <VARIABLE>winver</VARIABLE>=) unset_winver;;
    *) <FUNCTION>echo</FUNCTION> Unknown arg <VARIABLE>$1</VARIABLE>; usage ; <FUNCTION>exit</FUNCTION> 1;;
    <KEYWORD>esac</KEYWORD>
    <COMMENT># Provide a bit of feedback</COMMENT>
    <FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_QUIET</VARIABLE>"</STRING> = <STRING>""</STRING> &amp;&amp; <KEYWORD>case</KEYWORD> <VARIABLE>$1</VARIABLE> <KEYWORD>in</KEYWORD>
    -q) <FUNCTION>echo</FUNCTION> Setting quiet mode;;
    -v) <FUNCTION>echo</FUNCTION> Setting verbose mode;;
    *) <FUNCTION>echo</FUNCTION> <STRING>"Install of <VARIABLE>$1</VARIABLE> done"</STRING> ;;
    <KEYWORD>esac</KEYWORD>
    <FUNCTION>shift</FUNCTION>
    <COMMENT># cleanup</COMMENT>
    <FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>/*
<KEYWORD>done</KEYWORD>

    <COMMENT># remove the temp directory</COMMENT>
    <FUNCTION>rm</FUNCTION> -rf <STRING>"<VARIABLE>$WINETRICKS_TMP</VARIABLE>"</STRING>

<FUNCTION>test</FUNCTION> <STRING>"<VARIABLE>$WINETRICKS_QUIET</VARIABLE>"</STRING> = <STRING>""</STRING> &amp;&amp; <FUNCTION>echo</FUNCTION> winetricks <KEYWORD>done</KEYWORD>. || <FUNCTION>true</FUNCTION>
