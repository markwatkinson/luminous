 
<KEYWORD>def</KEYWORD> s <OPERATOR>=</OPERATOR> <REGEX><DELIMITER>/</DELIMITER><REGEX_OPERATOR>.</REGEX_OPERATOR><REGEX_OPERATOR>*</REGEX_OPERATOR>foo<REGEX_OPERATOR>.</REGEX_OPERATOR><REGEX_OPERATOR>*</REGEX_OPERATOR><DELIMITER>/</DELIMITER></REGEX>
<KEYWORD>def</KEYWORD> dirname  <OPERATOR>=</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>^<REGEX_OPERATOR>.</REGEX_OPERATOR><REGEX_OPERATOR>*</REGEX_OPERATOR><ESC>\/</ESC><DELIMITER>/</DELIMITER></REGEX>
<KEYWORD>def</KEYWORD> basename <OPERATOR>=</OPERATOR> <REGEX><DELIMITER>/</DELIMITER><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>Strings and GString^<ESC>\/</ESC><REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER><REGEX_OPERATOR>+</REGEX_OPERATOR>$<DELIMITER>/</DELIMITER></REGEX>

<KEYWORD>assert</KEYWORD> <STRING>'ab'</STRING> <OPERATOR>==</OPERATOR> <STRING>'a'</STRING> <OPERATOR>+</OPERATOR> <STRING>'b'</STRING>    <COMMENT>// OK, no slashy string</COMMENT>
<KEYWORD>assert</KEYWORD> <STRING>'a'</STRING> <OPERATOR>+</OPERATOR> <STRING>'b'</STRING> <OPERATOR>==</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>ab<DELIMITER>/</DELIMITER></REGEX>    <COMMENT>// OK, slashy string on RHS</COMMENT>
<KEYWORD>assert</KEYWORD> (<REGEX><DELIMITER>/</DELIMITER>ab<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>==</OPERATOR> <STRING>'a'</STRING> <OPERATOR>+</OPERATOR> <STRING>'b'</STRING>)  <COMMENT>// brackets currently required if slashy string is on LHS</COMMENT>

<KEYWORD>println</KEYWORD> <STRING>"how deep is deep? </STRING><DELIMITER>${</DELIMITER><INTERPOLATION>{<OPERATOR>-&gt;</OPERATOR> <STRING>"deeper and </STRING><DELIMITER>${</DELIMITER><INTERPOLATION>{<OPERATOR>-&gt;</OPERATOR> <STRING>"deepest"</STRING>}</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>"</STRING>}</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>"</STRING> <COMMENT>// for demonstrating it is a nested usage only</COMMENT>
