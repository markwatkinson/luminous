<COMMENT>/*</COMMENT>
<COMMENT> * Copyright (c) 2010, David Crawshaw &lt;david@zentus.com&gt;</COMMENT>
<COMMENT> *</COMMENT>
<COMMENT> * Permission to use, copy, modify, and/or distribute this software for any</COMMENT>
<COMMENT> * purpose with or without fee is hereby granted, provided that the above</COMMENT>
<COMMENT> * copyright notice and this permission notice appear in all copies.</COMMENT>
<COMMENT></COMMENT>
<COMMENT> * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES</COMMENT>
<COMMENT> * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF</COMMENT>
<COMMENT> * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR</COMMENT>
<COMMENT> * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES</COMMENT>
<COMMENT> * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN</COMMENT>
<COMMENT> * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF</COMMENT>
<COMMENT> * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</COMMENT>
<COMMENT> */</COMMENT>
<KEYWORD>package</KEYWORD> <OBJ>com</OBJ><OPERATOR>.</OPERATOR><OO>zentus</OO><OPERATOR>.</OPERATOR><OO>s3</OO>

<KEYWORD>private</KEYWORD>[s3] <KEYWORD>object</KEYWORD> <CONSTANT>HTTP</CONSTANT> {
  <KEYWORD>def</KEYWORD> date(date<OPERATOR>:</OPERATOR> <OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>util</OO><OPERATOR>.</OPERATOR><OO>Date</OO>)<OPERATOR>:</OPERATOR> <TYPE>String</TYPE> <OPERATOR>=</OPERATOR> {
    <KEYWORD>val</KEYWORD> sdf <OPERATOR>=</OPERATOR> <KEYWORD>new</KEYWORD> <OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>text</OO><OPERATOR>.</OPERATOR><OO>SimpleDateFormat</OO>(<STRING>"EEE, d MMM yyyy HH:mm:ss '+0000'"</STRING>)
    <OBJ>sdf</OBJ><OPERATOR>.</OPERATOR><OO>setTimeZone</OO>(<OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>util</OO><OPERATOR>.</OPERATOR><OO>TimeZone</OO><OPERATOR>.</OPERATOR><OO>getTimeZone</OO>(<STRING>"UTC"</STRING>))
    <OBJ>sdf</OBJ><OPERATOR>.</OPERATOR><OO>format</OO>(date)
  }

  <KEYWORD>def</KEYWORD> readAll(in<OPERATOR>:</OPERATOR> <OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>io</OO><OPERATOR>.</OPERATOR><OO>InputStream</OO>)<OPERATOR>:</OPERATOR> <TYPE>Array</TYPE>[<TYPE>Byte</TYPE>] <OPERATOR>=</OPERATOR> {
    <KEYWORD>val</KEYWORD> out <OPERATOR>=</OPERATOR> <KEYWORD>new</KEYWORD> <OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>io</OO><OPERATOR>.</OPERATOR><OO>ByteArrayOutputStream</OO>()
    <KEYWORD>val</KEYWORD> buf <OPERATOR>=</OPERATOR> <KEYWORD>new</KEYWORD> <TYPE>Array</TYPE>[<TYPE>Byte</TYPE>](<NUMERIC>1024</NUMERIC>)
    <KEYWORD>var</KEYWORD> len <OPERATOR>=</OPERATOR> <NUMERIC>0</NUMERIC>
    <KEYWORD>while</KEYWORD> (len <OPERATOR>&gt;=</OPERATOR> <NUMERIC>0</NUMERIC>) {
      <OBJ>out</OBJ><OPERATOR>.</OPERATOR><OO>write</OO>(buf<OPERATOR>,</OPERATOR> <NUMERIC>0</NUMERIC><OPERATOR>,</OPERATOR> len)
      len <OPERATOR>=</OPERATOR> <OBJ>in</OBJ><OPERATOR>.</OPERATOR><OO>read</OO>(buf<OPERATOR>,</OPERATOR> <NUMERIC>0</NUMERIC><OPERATOR>,</OPERATOR> <OBJ>buf</OBJ><OPERATOR>.</OPERATOR><OO>length</OO>)
    }
    <OBJ>out</OBJ><OPERATOR>.</OPERATOR><OO>toByteArray</OO>
  }

  <KEYWORD>def</KEYWORD> md5(bytes<OPERATOR>:</OPERATOR> <TYPE>Array</TYPE>[<TYPE>Byte</TYPE>])<OPERATOR>:</OPERATOR> <TYPE>String</TYPE> <OPERATOR>=</OPERATOR> {
    <KEYWORD>val</KEYWORD> md <OPERATOR>=</OPERATOR> <OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>security</OO><OPERATOR>.</OPERATOR><OO>MessageDigest</OO><OPERATOR>.</OPERATOR><OO>getInstance</OO>(<STRING>"MD5"</STRING>)
    <OBJ>md</OBJ><OPERATOR>.</OPERATOR><OO>update</OO>(bytes)
    <KEYWORD>new</KEYWORD> <TYPE>String</TYPE>(<OBJ>Base64</OBJ><OPERATOR>.</OPERATOR><OO>encode</OO>(<OBJ>md</OBJ><OPERATOR>.</OPERATOR><OO>digest</OO>))
  }

  <KEYWORD>def</KEYWORD> now()<OPERATOR>:</OPERATOR> <TYPE>String</TYPE> <OPERATOR>=</OPERATOR>
    date(<KEYWORD>new</KEYWORD> <OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>util</OO><OPERATOR>.</OPERATOR><OO>Date</OO>())
}

<KEYWORD>package</KEYWORD> acl {
<KEYWORD>abstract</KEYWORD> <KEYWORD>sealed</KEYWORD> <KEYWORD>trait</KEYWORD> ACL
<KEYWORD>final</KEYWORD> <KEYWORD>case</KEYWORD> <KEYWORD>object</KEYWORD> Private                 <KEYWORD>extends</KEYWORD> ACL {
  <KEYWORD>override</KEYWORD> <KEYWORD>def</KEYWORD> toString() <OPERATOR>=</OPERATOR> <STRING>"private"</STRING> }
<KEYWORD>final</KEYWORD> <KEYWORD>case</KEYWORD> <KEYWORD>object</KEYWORD> PublicRead              <KEYWORD>extends</KEYWORD> ACL {
  <KEYWORD>override</KEYWORD> <KEYWORD>def</KEYWORD> toString() <OPERATOR>=</OPERATOR> <STRING>"public-read"</STRING> }
<KEYWORD>final</KEYWORD> <KEYWORD>case</KEYWORD> <KEYWORD>object</KEYWORD> PublicReadWrite         <KEYWORD>extends</KEYWORD> ACL {
  <KEYWORD>override</KEYWORD> <KEYWORD>def</KEYWORD> toString() <OPERATOR>=</OPERATOR> <STRING>"public-read-write"</STRING> }
<KEYWORD>final</KEYWORD> <KEYWORD>case</KEYWORD> <KEYWORD>object</KEYWORD> AuthenticatedRead       <KEYWORD>extends</KEYWORD> ACL {
  <KEYWORD>override</KEYWORD> <KEYWORD>def</KEYWORD> toString() <OPERATOR>=</OPERATOR> <STRING>"authenticated-read"</STRING> }
<KEYWORD>final</KEYWORD> <KEYWORD>case</KEYWORD> <KEYWORD>object</KEYWORD> BucketOwnerRead         <KEYWORD>extends</KEYWORD> ACL {
  <KEYWORD>override</KEYWORD> <KEYWORD>def</KEYWORD> toString() <OPERATOR>=</OPERATOR> <STRING>"bucket-owner-read"</STRING> }
<KEYWORD>final</KEYWORD> <KEYWORD>case</KEYWORD> <KEYWORD>object</KEYWORD> BucketOwnerFullControl  <KEYWORD>extends</KEYWORD> ACL {
  <KEYWORD>override</KEYWORD> <KEYWORD>def</KEYWORD> toString() <OPERATOR>=</OPERATOR> <STRING>"bucket-owner-full-control"</STRING> }
}
<KEYWORD>import</KEYWORD> <OBJ>acl</OBJ><OPERATOR>.</OPERATOR><OO>ACL</OO>

<KEYWORD>class</KEYWORD> Item(
    <KEYWORD>val</KEYWORD> bucket<OPERATOR>:</OPERATOR> Bucket<OPERATOR>,</OPERATOR>
    <KEYWORD>val</KEYWORD> name<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR>
    <KEYWORD>private</KEYWORD> <KEYWORD>var</KEYWORD> lastModified<OPERATOR>:</OPERATOR> <TYPE>Option</TYPE>[<TYPE>String</TYPE>]<OPERATOR>,</OPERATOR>
    <KEYWORD>private</KEYWORD> <KEYWORD>var</KEYWORD> size<OPERATOR>:</OPERATOR> <TYPE>Option</TYPE>[<TYPE>Int</TYPE>]) {
  <KEYWORD>import</KEYWORD> <OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>io</OO><OPERATOR>.</OPERATOR><OO>InputStream</OO>

  <KEYWORD>def</KEYWORD> <KEYWORD>this</KEYWORD>(bucket<OPERATOR>:</OPERATOR> Bucket<OPERATOR>,</OPERATOR> name<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>) <OPERATOR>=</OPERATOR> <KEYWORD>this</KEYWORD>(bucket<OPERATOR>,</OPERATOR> name<OPERATOR>,</OPERATOR> <VALUE>None</VALUE><OPERATOR>,</OPERATOR> <VALUE>None</VALUE>)

  <KEYWORD>def</KEYWORD> get()<OPERATOR>:</OPERATOR> <TYPE>InputStream</TYPE> <OPERATOR>=</OPERATOR> {
    <KEYWORD>val</KEYWORD> conn <OPERATOR>=</OPERATOR> <OBJ>bucket</OBJ><OPERATOR>.</OPERATOR><OO>s3</OO><OPERATOR>.</OPERATOR><OO>getconn</OO>(<STRING>"GET"</STRING><OPERATOR>,</OPERATOR> <OBJ>bucket</OBJ><OPERATOR>.</OPERATOR><OO>name</OO><OPERATOR>,</OPERATOR> <STRING>"/"</STRING><OPERATOR>+</OPERATOR>name)
    <COMMENT>// <COMMENT_NOTE>TODO:</COMMENT_NOTE> set lastModified, size</COMMENT>
    <KEYWORD>if</KEYWORD> (<OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getResponseCode</OO> <OPERATOR>!=</OPERATOR> <NUMERIC>200</NUMERIC>) {
      <OBJ>Console</OBJ><OPERATOR>.</OPERATOR><OO>println</OO>(<STRING>"exception: "</STRING><OPERATOR>+</OPERATOR> <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getResponseMessage</OO>)
      <OBJ>Console</OBJ><OPERATOR>.</OPERATOR><OO>println</OO>(
        <OBJ>io</OBJ><OPERATOR>.</OPERATOR><OO>Source</OO><OPERATOR>.</OPERATOR><OO>fromInputStream</OO>(<OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getErrorStream</OO>)<OPERATOR>.</OPERATOR><OO>getLines</OO><OPERATOR>.</OPERATOR><OO>mkString</OO>(<STRING>"<ESC>\n</ESC>"</STRING>)
      )
      <COMMENT>// <COMMENT_NOTE>TODO:</COMMENT_NOTE> better error reporting, non-existant file, etc.</COMMENT>
    }
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getInputStream</OO>
  }

  <KEYWORD>def</KEYWORD> mkString()<OPERATOR>:</OPERATOR> <TYPE>String</TYPE> <OPERATOR>=</OPERATOR> {
    <OBJ>io</OBJ><OPERATOR>.</OPERATOR><OO>Source</OO><OPERATOR>.</OPERATOR><OO>fromInputStream</OO>(get)<OPERATOR>.</OPERATOR><OO>mkString</OO>
  }

  <KEYWORD>def</KEYWORD> set(in<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>)<OPERATOR>:</OPERATOR> <TYPE>Unit</TYPE> <OPERATOR>=</OPERATOR> set(in<OPERATOR>,</OPERATOR> <STRING>"text/plain"</STRING>)
  <KEYWORD>def</KEYWORD> set(in<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> contentType<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>)<OPERATOR>:</OPERATOR> <TYPE>Unit</TYPE> <OPERATOR>=</OPERATOR> set(<OBJ>in</OBJ><OPERATOR>.</OPERATOR><OO>getBytes</OO><OPERATOR>,</OPERATOR> contentType)
  <KEYWORD>def</KEYWORD> set(in<OPERATOR>:</OPERATOR> <TYPE>InputStream</TYPE>)<OPERATOR>:</OPERATOR> <TYPE>Unit</TYPE> <OPERATOR>=</OPERATOR> set(in<OPERATOR>,</OPERATOR> <STRING>"application/x-download"</STRING>)
  <KEYWORD>def</KEYWORD> set(in<OPERATOR>:</OPERATOR> <TYPE>InputStream</TYPE><OPERATOR>,</OPERATOR> contentType<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>)<OPERATOR>:</OPERATOR> <TYPE>Unit</TYPE> <OPERATOR>=</OPERATOR>
    set(in<OPERATOR>,</OPERATOR> contentType<OPERATOR>,</OPERATOR> <OBJ>acl</OBJ><OPERATOR>.</OPERATOR><OO>Private</OO>)
  <KEYWORD>def</KEYWORD> set(in<OPERATOR>:</OPERATOR> <TYPE>InputStream</TYPE><OPERATOR>,</OPERATOR> contentType<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> acl<OPERATOR>:</OPERATOR> ACL)<OPERATOR>:</OPERATOR> <TYPE>Unit</TYPE> <OPERATOR>=</OPERATOR>
    set(<OBJ>HTTP</OBJ><OPERATOR>.</OPERATOR><OO>readAll</OO>(in)<OPERATOR>,</OPERATOR> contentType<OPERATOR>,</OPERATOR> acl)
  <KEYWORD>def</KEYWORD> set(in<OPERATOR>:</OPERATOR> <TYPE>Array</TYPE>[<TYPE>Byte</TYPE>])<OPERATOR>:</OPERATOR> <TYPE>Unit</TYPE> <OPERATOR>=</OPERATOR> set(in<OPERATOR>,</OPERATOR> <STRING>"application/x-download"</STRING>)
  <KEYWORD>def</KEYWORD> set(in<OPERATOR>:</OPERATOR> <TYPE>Array</TYPE>[<TYPE>Byte</TYPE>]<OPERATOR>,</OPERATOR> contentType<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>)<OPERATOR>:</OPERATOR> <TYPE>Unit</TYPE> <OPERATOR>=</OPERATOR>
    set(in<OPERATOR>,</OPERATOR> contentType<OPERATOR>,</OPERATOR> <OBJ>acl</OBJ><OPERATOR>.</OPERATOR><OO>Private</OO>)

  <KEYWORD>def</KEYWORD> set(in<OPERATOR>:</OPERATOR> <TYPE>Array</TYPE>[<TYPE>Byte</TYPE>]<OPERATOR>,</OPERATOR> contentType<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> acl<OPERATOR>:</OPERATOR> ACL)<OPERATOR>:</OPERATOR> <TYPE>Unit</TYPE> <OPERATOR>=</OPERATOR> {
    <KEYWORD>val</KEYWORD> md5 <OPERATOR>=</OPERATOR> <OBJ>HTTP</OBJ><OPERATOR>.</OPERATOR><OO>md5</OO>(in)
    <KEYWORD>val</KEYWORD> conn <OPERATOR>=</OPERATOR> <OBJ>bucket</OBJ><OPERATOR>.</OPERATOR><OO>s3</OO><OPERATOR>.</OPERATOR><OO>getconn</OO>(
      <STRING>"PUT"</STRING><OPERATOR>,</OPERATOR> contentType<OPERATOR>,</OPERATOR> md5<OPERATOR>,</OPERATOR> <OBJ>bucket</OBJ><OPERATOR>.</OPERATOR><OO>name</OO><OPERATOR>,</OPERATOR> <STRING>"/"</STRING><OPERATOR>+</OPERATOR>name<OPERATOR>,</OPERATOR> <STRING>""</STRING><OPERATOR>,</OPERATOR>
      <STRING>"x-amz-acl:"</STRING><OPERATOR>+</OPERATOR><OBJ>acl</OBJ><OPERATOR>.</OPERATOR><OO>toString</OO><OPERATOR>+</OPERATOR><STRING>"<ESC>\n</ESC>"</STRING>)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setRequestProperty</OO>(<STRING>"Content-Length"</STRING><OPERATOR>,</OPERATOR> <OBJ>in</OBJ><OPERATOR>.</OPERATOR><OO>length</OO><OPERATOR>.</OPERATOR><OO>toString</OO>)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setRequestProperty</OO>(<STRING>"Content-MD5"</STRING><OPERATOR>,</OPERATOR> md5)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setRequestProperty</OO>(<STRING>"Content-Type"</STRING><OPERATOR>,</OPERATOR> contentType)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setRequestProperty</OO>(<STRING>"x-amz-acl"</STRING><OPERATOR>,</OPERATOR> <OBJ>acl</OBJ><OPERATOR>.</OPERATOR><OO>toString</OO>)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setFixedLengthStreamingMode</OO>(<OBJ>in</OBJ><OPERATOR>.</OPERATOR><OO>length</OO>)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setDoOutput</OO>(<VALUE>true</VALUE>)
    <KEYWORD>val</KEYWORD> out <OPERATOR>=</OPERATOR> <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getOutputStream</OO>
    <OBJ>out</OBJ><OPERATOR>.</OPERATOR><OO>write</OO>(in<OPERATOR>,</OPERATOR> <NUMERIC>0</NUMERIC><OPERATOR>,</OPERATOR> <OBJ>in</OBJ><OPERATOR>.</OPERATOR><OO>length</OO>)
    <OBJ>out</OBJ><OPERATOR>.</OPERATOR><OO>flush</OO>
    <KEYWORD>if</KEYWORD> (<OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getResponseCode</OO> <OPERATOR>!=</OPERATOR> <NUMERIC>200</NUMERIC>) {
      <OBJ>bucket</OBJ><OPERATOR>.</OPERATOR><OO>s3</OO><OPERATOR>.</OPERATOR><OO>getxml</OO>(conn)
    }
    <OBJ>out</OBJ><OPERATOR>.</OPERATOR><OO>close</OO>
  }

  <KEYWORD>def</KEYWORD> delete() <OPERATOR>=</OPERATOR> {
    <KEYWORD>val</KEYWORD> conn <OPERATOR>=</OPERATOR> <OBJ>bucket</OBJ><OPERATOR>.</OPERATOR><OO>s3</OO><OPERATOR>.</OPERATOR><OO>getconn</OO>(<STRING>"DELETE"</STRING><OPERATOR>,</OPERATOR> <OBJ>bucket</OBJ><OPERATOR>.</OPERATOR><OO>name</OO><OPERATOR>,</OPERATOR> <STRING>"/"</STRING><OPERATOR>+</OPERATOR>name)
    <KEYWORD>if</KEYWORD> (<OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getResponseCode</OO> <OPERATOR>!=</OPERATOR> <NUMERIC>200</NUMERIC>)
      <OBJ>bucket</OBJ><OPERATOR>.</OPERATOR><OO>s3</OO><OPERATOR>.</OPERATOR><OO>getxml</OO>(conn)
  }

  <KEYWORD>override</KEYWORD> <KEYWORD>def</KEYWORD> toString() <OPERATOR>=</OPERATOR> <STRING>"Item("</STRING><OPERATOR>+</OPERATOR>name<OPERATOR>+</OPERATOR><STRING>")"</STRING>
}

<KEYWORD>class</KEYWORD> Bucket(<KEYWORD>val</KEYWORD> s3<OPERATOR>:</OPERATOR> S3<OPERATOR>,</OPERATOR> <KEYWORD>val</KEYWORD> name<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>) <KEYWORD>extends</KEYWORD> <TYPE>Iterable</TYPE>[Item] {
  <KEYWORD>import</KEYWORD> <OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>io</OO><OPERATOR>.</OPERATOR>{ <TYPE>File</TYPE><OPERATOR>,</OPERATOR> <TYPE>InputStream</TYPE><OPERATOR>,</OPERATOR> <TYPE>FileInputStream</TYPE> }

  <KEYWORD>def</KEYWORD> apply(itemName<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>) <OPERATOR>=</OPERATOR>
    <KEYWORD>new</KEYWORD> Item(<KEYWORD>this</KEYWORD><OPERATOR>,</OPERATOR> itemName)

  <KEYWORD>def</KEYWORD> <OPERATOR>++=</OPERATOR> (kvs<OPERATOR>:</OPERATOR> <TYPE>Iterable</TYPE>[(<TYPE>String</TYPE><OPERATOR>,</OPERATOR><TYPE>String</TYPE>)])<OPERATOR>:</OPERATOR> <TYPE>Unit</TYPE> <OPERATOR>=</OPERATOR>
    kvs map { <KEYWORD>case</KEYWORD> (k<OPERATOR>,</OPERATOR>v) <OPERATOR>=&gt;</OPERATOR> <OBJ>actors</OBJ><OPERATOR>.</OPERATOR><OO>Futures</OO><OPERATOR>.</OPERATOR><OO>future</OO> (<OPERATOR>+=</OPERATOR> (k<OPERATOR>,</OPERATOR>v)) } foreach { _() }

  <KEYWORD>def</KEYWORD> <OPERATOR>+=</OPERATOR> (itemName<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> src<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>) <OPERATOR>=</OPERATOR>
    <KEYWORD>new</KEYWORD> Item(<KEYWORD>this</KEYWORD><OPERATOR>,</OPERATOR> itemName)<OPERATOR>.</OPERATOR><OO>set</OO>(src)
  <KEYWORD>def</KEYWORD> <OPERATOR>+=</OPERATOR> (itemName<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> src<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> contentType<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>) <OPERATOR>=</OPERATOR>
    <KEYWORD>new</KEYWORD> Item(<KEYWORD>this</KEYWORD><OPERATOR>,</OPERATOR> itemName)<OPERATOR>.</OPERATOR><OO>set</OO>(src<OPERATOR>,</OPERATOR> contentType)
  <KEYWORD>def</KEYWORD> <OPERATOR>+=</OPERATOR> (itemName<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> src<OPERATOR>:</OPERATOR> <TYPE>InputStream</TYPE><OPERATOR>,</OPERATOR> contentType<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> acl<OPERATOR>:</OPERATOR> ACL) <OPERATOR>=</OPERATOR>
    <KEYWORD>new</KEYWORD> Item(<KEYWORD>this</KEYWORD><OPERATOR>,</OPERATOR> itemName)<OPERATOR>.</OPERATOR><OO>set</OO>(src<OPERATOR>,</OPERATOR> contentType<OPERATOR>,</OPERATOR> acl)
  <KEYWORD>def</KEYWORD> <OPERATOR>+=</OPERATOR> (itemName<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> src<OPERATOR>:</OPERATOR> <TYPE>File</TYPE><OPERATOR>,</OPERATOR> contentType<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> acl<OPERATOR>:</OPERATOR> ACL) <OPERATOR>=</OPERATOR>
    <KEYWORD>new</KEYWORD> Item(<KEYWORD>this</KEYWORD><OPERATOR>,</OPERATOR> itemName)<OPERATOR>.</OPERATOR><OO>set</OO>(<KEYWORD>new</KEYWORD> <TYPE>FileInputStream</TYPE>(src)<OPERATOR>,</OPERATOR> contentType<OPERATOR>,</OPERATOR> acl)
  <KEYWORD>def</KEYWORD> <OPERATOR>-=</OPERATOR> (itemName<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>) <OPERATOR>=</OPERATOR>
    <KEYWORD>new</KEYWORD> Item(<KEYWORD>this</KEYWORD><OPERATOR>,</OPERATOR> itemName)<OPERATOR>.</OPERATOR><OO>delete</OO>

  <KEYWORD>override</KEYWORD> <KEYWORD>def</KEYWORD> elements()<OPERATOR>:</OPERATOR> <TYPE>Iterator</TYPE>[Item] <OPERATOR>=</OPERATOR>
    elements(<STRING>""</STRING>)

  <KEYWORD>def</KEYWORD> elements(prefix<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>)<OPERATOR>:</OPERATOR> <TYPE>Iterator</TYPE>[Item] <OPERATOR>=</OPERATOR> {
    <KEYWORD>def</KEYWORD> genItem(contents<OPERATOR>:</OPERATOR> <OBJ>xml</OBJ><OPERATOR>.</OPERATOR><OO>Node</OO>)<OPERATOR>:</OPERATOR> Item <OPERATOR>=</OPERATOR> {
      <KEYWORD>new</KEYWORD> Item(
        <KEYWORD>this</KEYWORD><OPERATOR>,</OPERATOR>
        (contents <OPERATOR>\\</OPERATOR> <STRING>"Key"</STRING>)<OPERATOR>.</OPERATOR><OO>text</OO><OPERATOR>,</OPERATOR>
        <TYPE>Some</TYPE>((contents <OPERATOR>\\</OPERATOR> <STRING>"LastModified"</STRING>)<OPERATOR>.</OPERATOR><OO>text</OO>)<OPERATOR>,</OPERATOR>
        <TYPE>Some</TYPE>((contents <OPERATOR>\\</OPERATOR> <STRING>"Size"</STRING>)<OPERATOR>.</OPERATOR><OO>text</OO><OPERATOR>.</OPERATOR><OO>toInt</OO>)
      )
    }

    <KEYWORD>def</KEYWORD> sel(marker<OPERATOR>:</OPERATOR> <TYPE>Option</TYPE>[<TYPE>String</TYPE>]) <OPERATOR>=</OPERATOR> {
      <KEYWORD>val</KEYWORD> qs <OPERATOR>=</OPERATOR> <STRING>"?prefix="</STRING> <OPERATOR>+</OPERATOR> prefix <OPERATOR>+</OPERATOR> <OBJ>marker</OBJ><OPERATOR>.</OPERATOR><OO>map</OO>(<STRING>"&amp;marker="</STRING><OPERATOR>+</OPERATOR>_)<OPERATOR>.</OPERATOR><OO>getOrElse</OO>(<STRING>""</STRING>)
      <KEYWORD>val</KEYWORD> conn <OPERATOR>=</OPERATOR> <OBJ>s3</OBJ><OPERATOR>.</OPERATOR><OO>getconn</OO>(<STRING>"GET"</STRING><OPERATOR>,</OPERATOR> <STRING>""</STRING><OPERATOR>,</OPERATOR> <STRING>""</STRING><OPERATOR>,</OPERATOR> name<OPERATOR>,</OPERATOR> <STRING>"/"</STRING><OPERATOR>,</OPERATOR> qs<OPERATOR>,</OPERATOR> <STRING>""</STRING>)
      <OBJ>s3</OBJ><OPERATOR>.</OPERATOR><OO>getxml</OO>(conn)
    }

    <KEYWORD>new</KEYWORD> <TYPE>Iterator</TYPE>[Item]() {
      <KEYWORD>val</KEYWORD> ret <OPERATOR>=</OPERATOR> <KEYWORD>new</KEYWORD> <OBJ>collection</OBJ><OPERATOR>.</OPERATOR><OO>mutable</OO><OPERATOR>.</OPERATOR><OO>Queue</OO>[Item]()
      <KEYWORD>var</KEYWORD> res <OPERATOR>=</OPERATOR> sel(<VALUE>None</VALUE>)
      <KEYWORD>def</KEYWORD> genMarker() <OPERATOR>=</OPERATOR> (res <OPERATOR>\\</OPERATOR> <STRING>"Key"</STRING>)<OPERATOR>.</OPERATOR><OO>lastOption</OO><OPERATOR>.</OPERATOR><OO>map</OO>(<OBJ>_</OBJ><OPERATOR>.</OPERATOR><OO>text</OO>)
      <KEYWORD>def</KEYWORD> genItems()  <OPERATOR>=</OPERATOR> ((res <OPERATOR>\\</OPERATOR> <STRING>"Contents"</STRING>) map genItem)
      <KEYWORD>var</KEYWORD> marker <OPERATOR>=</OPERATOR> genMarker()
      ret <OPERATOR>++=</OPERATOR> genItems()
      <KEYWORD>override</KEYWORD> <KEYWORD>def</KEYWORD> hasNext <OPERATOR>=</OPERATOR> {
        <KEYWORD>if</KEYWORD> (<OPERATOR>!</OPERATOR><OBJ>ret</OBJ><OPERATOR>.</OPERATOR><OO>isEmpty</OO>) {
          <VALUE>true</VALUE>
        } <KEYWORD>else</KEYWORD> <KEYWORD>if</KEYWORD> (<OBJ>marker</OBJ><OPERATOR>.</OPERATOR><OO>isEmpty</OO>) {
          <VALUE>false</VALUE>
        } <KEYWORD>else</KEYWORD> {
          res <OPERATOR>=</OPERATOR> sel(marker)
          marker <OPERATOR>=</OPERATOR> genMarker()
          ret <OPERATOR>++=</OPERATOR> genItems()
          <OPERATOR>!</OPERATOR><OBJ>ret</OBJ><OPERATOR>.</OPERATOR><OO>isEmpty</OO>
        }
      }
      <KEYWORD>override</KEYWORD> <KEYWORD>def</KEYWORD> next <OPERATOR>=</OPERATOR> {
        <KEYWORD>if</KEYWORD> (<OPERATOR>!</OPERATOR>hasNext) {
          error(<STRING>"Iterator is done."</STRING>)
        }
        <OBJ>ret</OBJ><OPERATOR>.</OPERATOR><OO>dequeue</OO>
      }
    }
  }
}

<KEYWORD>class</KEYWORD> S3(awsKeyId<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> awsSecretKey<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>) <KEYWORD>extends</KEYWORD> <TYPE>Iterable</TYPE>[Bucket] {
  <KEYWORD>import</KEYWORD> <OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>net</OO><OPERATOR>.</OPERATOR><OO>_</OO>
  <KEYWORD>import</KEYWORD> <OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>io</OO><OPERATOR>.</OPERATOR>{ <TYPE>BufferedReader</TYPE><OPERATOR>,</OPERATOR> <TYPE>InputStreamReader</TYPE><OPERATOR>,</OPERATOR> <TYPE>OutputStreamWriter</TYPE> }
  <KEYWORD>import</KEYWORD> <OBJ>java</OBJ><OPERATOR>.</OPERATOR><OO>util</OO><OPERATOR>.</OPERATOR>{ <TYPE>Date</TYPE><OPERATOR>,</OPERATOR> <TYPE>Calendar</TYPE><OPERATOR>,</OPERATOR> <TYPE>TimeZone</TYPE> }
  <KEYWORD>import</KEYWORD> <OBJ>javax</OBJ><OPERATOR>.</OPERATOR><OO>crypto</OO><OPERATOR>.</OPERATOR><OO>Mac</OO>
  <KEYWORD>import</KEYWORD> <OBJ>javax</OBJ><OPERATOR>.</OPERATOR><OO>crypto</OO><OPERATOR>.</OPERATOR><OO>spec</OO><OPERATOR>.</OPERATOR><OO>SecretKeySpec</OO>
  <KEYWORD>import</KEYWORD> <OBJ>xml</OBJ><OPERATOR>.</OPERATOR><OO>_</OO>

  <COMMENT>// RFC2104</COMMENT>
  <KEYWORD>private</KEYWORD> <KEYWORD>def</KEYWORD> calcHMAC(data<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>)<OPERATOR>:</OPERATOR> <TYPE>String</TYPE> <OPERATOR>=</OPERATOR> {
    <KEYWORD>val</KEYWORD> encoding <OPERATOR>=</OPERATOR> <STRING>"HmacSHA1"</STRING>
    <KEYWORD>val</KEYWORD> key <OPERATOR>=</OPERATOR> <KEYWORD>new</KEYWORD> <TYPE>SecretKeySpec</TYPE>(<OBJ>awsSecretKey</OBJ><OPERATOR>.</OPERATOR><OO>getBytes</OO><OPERATOR>,</OPERATOR> encoding)
    <KEYWORD>val</KEYWORD> mac <OPERATOR>=</OPERATOR> <OBJ>Mac</OBJ><OPERATOR>.</OPERATOR><OO>getInstance</OO>(encoding)
    <OBJ>mac</OBJ><OPERATOR>.</OPERATOR><OO>init</OO>(key)
    <KEYWORD>val</KEYWORD> rawHmac <OPERATOR>=</OPERATOR> <OBJ>mac</OBJ><OPERATOR>.</OPERATOR><OO>doFinal</OO>(<OBJ>data</OBJ><OPERATOR>.</OPERATOR><OO>getBytes</OO>)
    <KEYWORD>new</KEYWORD> <TYPE>String</TYPE>(<OBJ>Base64</OBJ><OPERATOR>.</OPERATOR><OO>encode</OO>(rawHmac))
  }

  <KEYWORD>private</KEYWORD> <KEYWORD>def</KEYWORD> authorization(
      verb<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> contentMD5<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> contentType<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> date<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR>
      bucket<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> resource<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> amzHeaders<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>) <OPERATOR>=</OPERATOR> {
    <KEYWORD>val</KEYWORD> toSign <OPERATOR>=</OPERATOR> (
      verb        <OPERATOR>+</OPERATOR> <STRING>"<ESC>\n</ESC>"</STRING> <OPERATOR>+</OPERATOR>
      contentMD5  <OPERATOR>+</OPERATOR> <STRING>"<ESC>\n</ESC>"</STRING> <OPERATOR>+</OPERATOR>
      contentType <OPERATOR>+</OPERATOR> <STRING>"<ESC>\n</ESC>"</STRING> <OPERATOR>+</OPERATOR>
      date        <OPERATOR>+</OPERATOR> <STRING>"<ESC>\n</ESC>"</STRING> <OPERATOR>+</OPERATOR>
      amzHeaders  <OPERATOR>+</OPERATOR>
      <STRING>"/"</STRING> <OPERATOR>+</OPERATOR> bucket <OPERATOR>+</OPERATOR> resource
    )
    <COMMENT>//Console.println("signing: "+toSign)</COMMENT>
    <STRING>"AWS "</STRING> <OPERATOR>+</OPERATOR> awsKeyId <OPERATOR>+</OPERATOR> <STRING>":"</STRING> <OPERATOR>+</OPERATOR> calcHMAC(toSign)
  }

  <KEYWORD>private</KEYWORD>[zentus] <KEYWORD>def</KEYWORD> getconn(
      verb<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> bucket<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> resource<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>)<OPERATOR>:</OPERATOR> <TYPE>HttpURLConnection</TYPE> <OPERATOR>=</OPERATOR>
    getconn(verb<OPERATOR>,</OPERATOR> <STRING>""</STRING><OPERATOR>,</OPERATOR> <STRING>""</STRING><OPERATOR>,</OPERATOR> bucket<OPERATOR>,</OPERATOR> resource<OPERATOR>,</OPERATOR> <STRING>""</STRING><OPERATOR>,</OPERATOR> <STRING>""</STRING>)

  <KEYWORD>private</KEYWORD>[zentus] <KEYWORD>def</KEYWORD> getconn(
      verb<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> contentType<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> contentMD5<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR>
      bucket<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> resource<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR> querystring<OPERATOR>:</OPERATOR> <TYPE>String</TYPE><OPERATOR>,</OPERATOR>
      amzHeaders<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>)<OPERATOR>:</OPERATOR> <TYPE>HttpURLConnection</TYPE> <OPERATOR>=</OPERATOR> {
    <KEYWORD>val</KEYWORD> date <OPERATOR>=</OPERATOR> <OBJ>HTTP</OBJ><OPERATOR>.</OPERATOR><OO>now</OO>
    <KEYWORD>val</KEYWORD> url <OPERATOR>=</OPERATOR> <STRING>"http://s3.amazonaws.com/"</STRING> <OPERATOR>+</OPERATOR> bucket <OPERATOR>+</OPERATOR> resource <OPERATOR>+</OPERATOR> querystring
    <KEYWORD>val</KEYWORD> conn <OPERATOR>=</OPERATOR> <KEYWORD>new</KEYWORD> <TYPE>URL</TYPE>(url)<OPERATOR>.</OPERATOR><OO>openConnection</OO><OPERATOR>.</OPERATOR><OO>asInstanceOf</OO>[<TYPE>HttpURLConnection</TYPE>]
    <KEYWORD>val</KEYWORD> auth <OPERATOR>=</OPERATOR> authorization(
      verb<OPERATOR>,</OPERATOR> contentMD5<OPERATOR>,</OPERATOR> contentType<OPERATOR>,</OPERATOR> date<OPERATOR>,</OPERATOR> bucket<OPERATOR>,</OPERATOR> resource<OPERATOR>,</OPERATOR> amzHeaders)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setRequestMethod</OO>(verb)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setRequestProperty</OO>(<STRING>"Date"</STRING><OPERATOR>,</OPERATOR> date)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setRequestProperty</OO>(<STRING>"Authorization"</STRING><OPERATOR>,</OPERATOR> auth)
    conn
  }

  <KEYWORD>private</KEYWORD>[zentus] <KEYWORD>def</KEYWORD> getxml(conn<OPERATOR>:</OPERATOR> <TYPE>HttpURLConnection</TYPE>) <OPERATOR>=</OPERATOR> {
    <KEYWORD>try</KEYWORD> {
      <KEYWORD>val</KEYWORD> xml <OPERATOR>=</OPERATOR> <OBJ>XML</OBJ><OPERATOR>.</OPERATOR><OO>load</OO>(<OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getInputStream</OO>)
      <COMMENT>//Console.println(new PrettyPrinter(80, 2).format(xml))</COMMENT>
      xml
    } <KEYWORD>catch</KEYWORD> {
      <KEYWORD>case</KEYWORD> e <OPERATOR>=&gt;</OPERATOR>
        <OBJ>Console</OBJ><OPERATOR>.</OPERATOR><OO>println</OO>(<STRING>"exception: "</STRING><OPERATOR>+</OPERATOR> <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getResponseMessage</OO>)
        <OBJ>Console</OBJ><OPERATOR>.</OPERATOR><OO>println</OO>(
          <OBJ>scala</OBJ><OPERATOR>.</OPERATOR><OO>io</OO><OPERATOR>.</OPERATOR><OO>Source</OO><OPERATOR>.</OPERATOR><OO>fromInputStream</OO>(
            <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getErrorStream</OO>)<OPERATOR>.</OPERATOR><OO>getLines</OO><OPERATOR>.</OPERATOR><OO>mkString</OO>(<STRING>"<ESC>\n</ESC>"</STRING>)
        )
        <KEYWORD>throw</KEYWORD> e
    }
  }

  <KEYWORD>def</KEYWORD> <OPERATOR>+=</OPERATOR>(name<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>) <OPERATOR>=</OPERATOR> {
    <KEYWORD>val</KEYWORD> conn <OPERATOR>=</OPERATOR> getconn(<STRING>"PUT"</STRING><OPERATOR>,</OPERATOR> <OBJ>name</OBJ><OPERATOR>.</OPERATOR><OO>toLowerCase</OO><OPERATOR>,</OPERATOR> <STRING>"/"</STRING>)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setRequestProperty</OO>(<STRING>"Content-Length"</STRING><OPERATOR>,</OPERATOR> <STRING>"0"</STRING>)
    <KEYWORD>if</KEYWORD> (<OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getResponseCode</OO> <OPERATOR>!=</OPERATOR> <NUMERIC>200</NUMERIC>)
      error(<STRING>"Error creating bucket '"</STRING><OPERATOR>+</OPERATOR>name<OPERATOR>+</OPERATOR><STRING>"': "</STRING><OPERATOR>+</OPERATOR><OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>getResponseMessage</OO>)
  }

  <KEYWORD>def</KEYWORD> apply(name<OPERATOR>:</OPERATOR> <TYPE>String</TYPE>) <OPERATOR>=</OPERATOR> <KEYWORD>new</KEYWORD> Bucket(<KEYWORD>this</KEYWORD><OPERATOR>,</OPERATOR> name)

  <KEYWORD>override</KEYWORD> <KEYWORD>def</KEYWORD> elements()<OPERATOR>:</OPERATOR> <TYPE>Iterator</TYPE>[Bucket] <OPERATOR>=</OPERATOR> {
    <KEYWORD>val</KEYWORD> date <OPERATOR>=</OPERATOR> <OBJ>HTTP</OBJ><OPERATOR>.</OPERATOR><OO>now</OO>

    <KEYWORD>val</KEYWORD> reqUrl <OPERATOR>=</OPERATOR> <STRING>"http://s3.amazonaws.com"</STRING>
    <KEYWORD>val</KEYWORD> conn <OPERATOR>=</OPERATOR> <KEYWORD>new</KEYWORD> <TYPE>URL</TYPE>(reqUrl)<OPERATOR>.</OPERATOR><OO>openConnection</OO><OPERATOR>.</OPERATOR><OO>asInstanceOf</OO>[<TYPE>HttpURLConnection</TYPE>]
    <KEYWORD>val</KEYWORD> auth <OPERATOR>=</OPERATOR> authorization(<STRING>"GET"</STRING><OPERATOR>,</OPERATOR> <STRING>""</STRING><OPERATOR>,</OPERATOR> <STRING>""</STRING><OPERATOR>,</OPERATOR> date<OPERATOR>,</OPERATOR> <STRING>""</STRING><OPERATOR>,</OPERATOR> <STRING>""</STRING><OPERATOR>,</OPERATOR> <STRING>""</STRING>)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setRequestProperty</OO>(<STRING>"Date"</STRING><OPERATOR>,</OPERATOR> date)
    <OBJ>conn</OBJ><OPERATOR>.</OPERATOR><OO>setRequestProperty</OO>(<STRING>"Authorization"</STRING><OPERATOR>,</OPERATOR> auth)

    (getxml(conn) <OPERATOR>\\</OPERATOR> <STRING>"Name"</STRING>) map { n <OPERATOR>=&gt;</OPERATOR> <KEYWORD>new</KEYWORD> Bucket(<KEYWORD>this</KEYWORD><OPERATOR>,</OPERATOR> <OBJ>n</OBJ><OPERATOR>.</OPERATOR><OO>text</OO>) } elements
  }
}