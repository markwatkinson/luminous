<COMMENT>#! /usr/bin/ruby -w</COMMENT>
<COMMENT>#</COMMENT>
<COMMENT># Copyright (C) 2002,2003,2004,2005,2006,2007,2008  Free Software Foundation, Inc.</COMMENT>
<COMMENT>#</COMMENT>
<COMMENT># This genmk.rb is free software; the author</COMMENT>
<COMMENT># gives unlimited permission to copy and/or distribute it,</COMMENT>
<COMMENT># with or without modifications, as long as this notice is preserved.</COMMENT>
<COMMENT>#</COMMENT>
<COMMENT># This program is distributed in the hope that it will be useful,</COMMENT>
<COMMENT># but WITHOUT ANY WARRANTY, to the extent permitted by law; without</COMMENT>
<COMMENT># even the implied warranty of MERCHANTABILITY or FITNESS FOR A</COMMENT>
<COMMENT># PARTICULAR PURPOSE.</COMMENT>

<KEYWORD>module</KEYWORD> <CONSTANT>Enumerable</CONSTANT>
  <KEYWORD>def</KEYWORD> collect_with_index
    ret <OPERATOR>=</OPERATOR> []
    <OBJ>self</OBJ>.<OO>each_with_index</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>item, index<OPERATOR>|</OPERATOR>
      <OBJ>ret</OBJ>.<OO>push</OO>(<KEYWORD>yield</KEYWORD>(item, index))
    <KEYWORD>end</KEYWORD>
    ret
  <KEYWORD>end</KEYWORD>
<KEYWORD>end</KEYWORD>

<KEYWORD>class</KEYWORD> <CONSTANT>String</CONSTANT>
  <KEYWORD>def</KEYWORD> to_var
    <OBJ>self</OBJ>.<OO>gsub</OO>(<REGEX><DELIMITER>/</DELIMITER><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>^a-zA-Z0-9_@<REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER><DELIMITER>/</DELIMITER></REGEX>, <STRING>'_'</STRING>)
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> suffix(str)
    <OBJ>self</OBJ>.<OO>sub</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>^<ESC>\.</ESC><REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER><REGEX_OPERATOR>*</REGEX_OPERATOR>$<DELIMITER>/</DELIMITER></REGEX>, <STRING>''</STRING>) <OPERATOR>+</OPERATOR> <STRING>'.'</STRING> <OPERATOR>+</OPERATOR> str
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> to_obj
    <OBJ>self</OBJ>.<OO>sub</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>^<ESC>\.</ESC><REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER><REGEX_OPERATOR>*</REGEX_OPERATOR>$<DELIMITER>/</DELIMITER></REGEX>, <STRING>''</STRING>).<OO>to_var</OO> <OPERATOR>+</OPERATOR> <STRING>'.o'</STRING>
  <KEYWORD>end</KEYWORD>
<KEYWORD>end</KEYWORD>

<KEYWORD>class</KEYWORD> <CONSTANT>Image</CONSTANT>
  <KEYWORD>def</KEYWORD> initialize(dir, name)
    <VARIABLE>@dir</VARIABLE> <OPERATOR>=</OPERATOR> dir
    <VARIABLE>@name</VARIABLE> <OPERATOR>=</OPERATOR> name
    <VARIABLE>@rule_count</VARIABLE> <OPERATOR>=</OPERATOR> <NUMERIC>0</NUMERIC>
  <KEYWORD>end</KEYWORD>
  attr_reader <VALUE>:dir</VALUE>, <VALUE>:name</VALUE>

  <KEYWORD>def</KEYWORD> rule(sources)
    prefix <OPERATOR>=</OPERATOR> <VARIABLE>@name</VARIABLE>.<OO>to_var</OO>
    <VARIABLE>@rule_count</VARIABLE> <OPERATOR>+=</OPERATOR> <NUMERIC>1</NUMERIC>
    exe <OPERATOR>=</OPERATOR> <VARIABLE>@name</VARIABLE>.<OO>suffix</OO>(<STRING>'exec'</STRING>)
    objs <OPERATOR>=</OPERATOR> <OBJ>sources</OBJ>.<OO>collect</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>src<OPERATOR>|</OPERATOR>
      <FUNCTION>raise</FUNCTION> <STRING>"unknown source file `</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>'"</STRING> <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>cS<REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER>$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>!~</OPERATOR> src
      prefix <OPERATOR>+</OPERATOR> <STRING>'-'</STRING> <OPERATOR>+</OPERATOR> <OBJ>src</OBJ>.<OO>to_obj</OO>
    <KEYWORD>end</KEYWORD>
    objs_str <OPERATOR>=</OPERATOR> <OBJ>objs</OBJ>.<OO>join</OO>(<STRING>' '</STRING>)
    deps <OPERATOR>=</OPERATOR> <OBJ>objs</OBJ>.<OO>collect</OO> {<OPERATOR>|</OPERATOR>obj<OPERATOR>|</OPERATOR> <OBJ>obj</OBJ>.<OO>suffix</OO>(<STRING>'d'</STRING>)}
    deps_str <OPERATOR>=</OPERATOR> <OBJ>deps</OBJ>.<OO>join</OO>(<STRING>' '</STRING>)

<STRING>"</STRING>
<STRING>clean-image-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>:</STRING>
<STRING>        rm -f </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>exe</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>objs_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>CLEAN_IMAGE_TARGETS += clean-image-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>mostlyclean-image-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>:</STRING>
<STRING>        rm -f </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>deps_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>MOSTLYCLEAN_IMAGE_TARGETS += mostlyclean-image-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>ifneq ($(TARGET_APPLE_CC),1)</STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>exe</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>        $(OBJCOPY) -O $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_FORMAT) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id $&lt; $@</STRING>
<STRING>else</STRING>
<STRING>ifneq (</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>exe</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>,kernel.exec)</STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>exe</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> ./grub-macho2img</STRING>
<STRING>        ./grub-macho2img $&lt; $@</STRING>
<STRING>else</STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>exe</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> ./grub-macho2img</STRING>
<STRING>        ./grub-macho2img --bss $&lt; $@</STRING>
<STRING>endif</STRING>
<STRING>endif</STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>exe</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>objs_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>        $(TARGET_CC) -o $@ $^ $(TARGET_LDFLAGS) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_LDFLAGS)</STRING>
<STRING></STRING>
<STRING>"</STRING> <OPERATOR>+</OPERATOR> <OBJ>objs</OBJ>.<OO>collect_with_index</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>obj, i<OPERATOR>|</OPERATOR>
      src <OPERATOR>=</OPERATOR> sources[i]
      fake_obj <OPERATOR>=</OPERATOR> <CONSTANT>File</CONSTANT>.<OO>basename</OO>(src).<OO>suffix</OO>(<STRING>'o'</STRING>)
      dep <OPERATOR>=</OPERATOR> deps[i]
      flag <OPERATOR>=</OPERATOR> <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC>c$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>=~</OPERATOR> src <KEYWORD>then</KEYWORD> <STRING>'CFLAGS'</STRING> <KEYWORD>else</KEYWORD> <STRING>'ASFLAGS'</STRING> <KEYWORD>end</KEYWORD>
      extra_flags <OPERATOR>=</OPERATOR> <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC>S$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>=~</OPERATOR> src <KEYWORD>then</KEYWORD> <STRING>'-DASM_FILE=1'</STRING> <KEYWORD>else</KEYWORD> <STRING>''</STRING> <KEYWORD>end</KEYWORD>
      dir <OPERATOR>=</OPERATOR> <CONSTANT>File</CONSTANT>.<OO>dirname</OO>(src)

      <STRING>"</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES)</STRING>
<STRING>        $(TARGET_CC) -I</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> -I$(srcdir)/</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_CPPFLAGS) </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>extra_flags</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) -MD -c -o $@ $&lt;</STRING>
<STRING>-include </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dep</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>"</STRING>
    <OBJ>end</OBJ>.<OO>join</OO>(<STRING>''</STRING>)
  <KEYWORD>end</KEYWORD>
<KEYWORD>end</KEYWORD>

<COMMENT># Use PModule instead Module, to avoid name conflicting.</COMMENT>
<KEYWORD>class</KEYWORD> <CONSTANT>PModule</CONSTANT>
  <KEYWORD>def</KEYWORD> initialize(dir, name)
    <VARIABLE>@dir</VARIABLE> <OPERATOR>=</OPERATOR> dir
    <VARIABLE>@name</VARIABLE> <OPERATOR>=</OPERATOR> name
    <VARIABLE>@rule_count</VARIABLE> <OPERATOR>=</OPERATOR> <NUMERIC>0</NUMERIC>
  <KEYWORD>end</KEYWORD>
  attr_reader <VALUE>:dir</VALUE>, <VALUE>:name</VALUE>

  <KEYWORD>def</KEYWORD> rule(sources)
    prefix <OPERATOR>=</OPERATOR> <VARIABLE>@name</VARIABLE>.<OO>to_var</OO>
    <VARIABLE>@rule_count</VARIABLE> <OPERATOR>+=</OPERATOR> <NUMERIC>1</NUMERIC>
    objs <OPERATOR>=</OPERATOR> <OBJ>sources</OBJ>.<OO>collect</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>src<OPERATOR>|</OPERATOR>
      <FUNCTION>raise</FUNCTION> <STRING>"unknown source file `</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>'"</STRING> <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>cS<REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER>$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>!~</OPERATOR> src
      prefix <OPERATOR>+</OPERATOR> <STRING>'-'</STRING> <OPERATOR>+</OPERATOR> <OBJ>src</OBJ>.<OO>to_obj</OO>
    <KEYWORD>end</KEYWORD>
    objs_str <OPERATOR>=</OPERATOR> <OBJ>objs</OBJ>.<OO>join</OO>(<STRING>' '</STRING>)
    deps <OPERATOR>=</OPERATOR> <OBJ>objs</OBJ>.<OO>collect</OO> {<OPERATOR>|</OPERATOR>obj<OPERATOR>|</OPERATOR> <OBJ>obj</OBJ>.<OO>suffix</OO>(<STRING>'d'</STRING>)}
    deps_str <OPERATOR>=</OPERATOR> <OBJ>deps</OBJ>.<OO>join</OO>(<STRING>' '</STRING>)
    pre_obj <OPERATOR>=</OPERATOR> <STRING>'pre-'</STRING> <OPERATOR>+</OPERATOR> <VARIABLE>@name</VARIABLE>.<OO>suffix</OO>(<STRING>'o'</STRING>)
    mod_src <OPERATOR>=</OPERATOR> <STRING>'mod-'</STRING> <OPERATOR>+</OPERATOR> <VARIABLE>@name</VARIABLE>.<OO>suffix</OO>(<STRING>'c'</STRING>)
    mod_obj <OPERATOR>=</OPERATOR> <OBJ>mod_src</OBJ>.<OO>suffix</OO>(<STRING>'o'</STRING>)
    defsym <OPERATOR>=</OPERATOR> <STRING>'def-'</STRING> <OPERATOR>+</OPERATOR> <VARIABLE>@name</VARIABLE>.<OO>suffix</OO>(<STRING>'lst'</STRING>)
    undsym <OPERATOR>=</OPERATOR> <STRING>'und-'</STRING> <OPERATOR>+</OPERATOR> <VARIABLE>@name</VARIABLE>.<OO>suffix</OO>(<STRING>'lst'</STRING>)
    mod_name <OPERATOR>=</OPERATOR> <CONSTANT>File</CONSTANT>.<OO>basename</OO>(<VARIABLE>@name</VARIABLE>, <STRING>'.mod'</STRING>)
    symbolic_name <OPERATOR>=</OPERATOR> <OBJ>mod_name</OBJ>.<OO>sub</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>^<ESC>\.</ESC><REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER><REGEX_OPERATOR>*</REGEX_OPERATOR>$<DELIMITER>/</DELIMITER></REGEX>, <STRING>''</STRING>)

<STRING>"</STRING>
<STRING>clean-module-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>:</STRING>
<STRING>        rm -f </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>pre_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>objs_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>undsym</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>CLEAN_MODULE_TARGETS += clean-module-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>ifneq ($(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_EXPORTS),no)</STRING>
<STRING>clean-module-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>-symbol.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>:</STRING>
<STRING>        rm -f </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>defsym</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>CLEAN_MODULE_TARGETS += clean-module-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>-symbol.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>DEFSYMFILES += </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>defsym</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>endif</STRING>
<STRING>mostlyclean-module-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>:</STRING>
<STRING>        rm -f </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>deps_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>UNDSYMFILES += </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>undsym</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>ifneq ($(TARGET_APPLE_CC),1)</STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>pre_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_OBJ2ELF)</STRING>
<STRING>        -rm -f $@</STRING>
<STRING>        $(TARGET_CC) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>pre_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>        if test ! -z <ESC>\"</ESC>$(TARGET_OBJ2ELF)<ESC>\"</ESC>; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi</STRING>
<STRING>        $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@</STRING>
<STRING>else</STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>pre_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_OBJ2ELF)</STRING>
<STRING>        -rm -f $@</STRING>
<STRING>        -rm -f $@.bin</STRING>
<STRING>        $(TARGET_CC) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>pre_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>        $(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -nu -nd $@.bin $@</STRING>
<STRING>        -rm -f $@.bin</STRING>
<STRING>endif</STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>pre_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES) </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>objs_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>        -rm -f $@</STRING>
<STRING>        $(TARGET_CC) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>objs_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>        $(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_CFLAGS) -c -o $@ $&lt;</STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh</STRING>
<STRING>        sh $(srcdir)/genmodsrc.sh '</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_name</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>' $&lt; &gt; $@ || (rm -f $@; exit 1)</STRING>
<STRING></STRING>
<STRING>ifneq ($(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_EXPORTS),no)</STRING>
<STRING>ifneq ($(TARGET_APPLE_CC),1)</STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>defsym</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>pre_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>        $(NM) -g --defined-only -P -p $&lt; | sed 's/^<ESC>\\</ESC>([^ ]*<ESC>\\</ESC>).*/<ESC>\\</ESC>1 </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_name</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>/' &gt; $@</STRING>
<STRING>else</STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>defsym</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>pre_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>        $(NM) -g -P -p $&lt; | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^<ESC>\\</ESC>([^ ]*<ESC>\\</ESC>).*/<ESC>\\</ESC>1 </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_name</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>/' &gt; $@</STRING>
<STRING>endif</STRING>
<STRING>endif</STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>undsym</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>pre_obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>        echo '</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>mod_name</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>' &gt; $@</STRING>
<STRING>        $(NM) -u -P -p $&lt; | cut -f1 -d' ' &gt;&gt; $@</STRING>
<STRING></STRING>
<STRING>"</STRING> <OPERATOR>+</OPERATOR> <OBJ>objs</OBJ>.<OO>collect_with_index</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>obj, i<OPERATOR>|</OPERATOR>
      src <OPERATOR>=</OPERATOR> sources[i]
      fake_obj <OPERATOR>=</OPERATOR> <CONSTANT>File</CONSTANT>.<OO>basename</OO>(src).<OO>suffix</OO>(<STRING>'o'</STRING>)
      extra_target <OPERATOR>=</OPERATOR> <OBJ>obj</OBJ>.<OO>sub</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>^<ESC>\.</ESC><REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER><REGEX_OPERATOR>*</REGEX_OPERATOR>$<DELIMITER>/</DELIMITER></REGEX>, <STRING>''</STRING>) <OPERATOR>+</OPERATOR> <STRING>'-extra'</STRING>
      command <OPERATOR>=</OPERATOR> <STRING>'cmd-'</STRING> <OPERATOR>+</OPERATOR> <OBJ>obj</OBJ>.<OO>suffix</OO>(<STRING>'lst'</STRING>)
      fs <OPERATOR>=</OPERATOR> <STRING>'fs-'</STRING> <OPERATOR>+</OPERATOR> <OBJ>obj</OBJ>.<OO>suffix</OO>(<STRING>'lst'</STRING>)
      partmap <OPERATOR>=</OPERATOR> <STRING>'partmap-'</STRING> <OPERATOR>+</OPERATOR> <OBJ>obj</OBJ>.<OO>suffix</OO>(<STRING>'lst'</STRING>)
      handler <OPERATOR>=</OPERATOR> <STRING>'handler-'</STRING> <OPERATOR>+</OPERATOR> <OBJ>obj</OBJ>.<OO>suffix</OO>(<STRING>'lst'</STRING>)
      parttool <OPERATOR>=</OPERATOR> <STRING>'parttool-'</STRING> <OPERATOR>+</OPERATOR> <OBJ>obj</OBJ>.<OO>suffix</OO>(<STRING>'lst'</STRING>)
      dep <OPERATOR>=</OPERATOR> deps[i]
      flag <OPERATOR>=</OPERATOR> <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC>c$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>=~</OPERATOR> src <KEYWORD>then</KEYWORD> <STRING>'CFLAGS'</STRING> <KEYWORD>else</KEYWORD> <STRING>'ASFLAGS'</STRING> <KEYWORD>end</KEYWORD>
      extra_flags <OPERATOR>=</OPERATOR> <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC>S$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>=~</OPERATOR> src <KEYWORD>then</KEYWORD> <STRING>'-DASM_FILE=1'</STRING> <KEYWORD>else</KEYWORD> <STRING>''</STRING> <KEYWORD>end</KEYWORD>
      dir <OPERATOR>=</OPERATOR> <CONSTANT>File</CONSTANT>.<OO>dirname</OO>(src)

      <STRING>"</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES)</STRING>
<STRING>        $(TARGET_CC) -I</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> -I$(srcdir)/</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_CPPFLAGS) </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>extra_flags</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) -MD -c -o $@ $&lt;</STRING>
<STRING>-include </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dep</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>clean-module-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>extra_target</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>:</STRING>
<STRING>        rm -f </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>command</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>fs</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>partmap</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>handler</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>parttool</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>CLEAN_MODULE_TARGETS += clean-module-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>extra_target</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>COMMANDFILES += </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>command</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>FSFILES += </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>fs</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>PARTTOOLFILES += </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>parttool</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>PARTMAPFILES += </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>partmap</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>HANDLERFILES += </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>handler</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>command</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES) gencmdlist.sh</STRING>
<STRING>        set -e; \</STRING>
<STRING>          $(TARGET_CC) -I</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> -I$(srcdir)/</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_CPPFLAGS) </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>extra_flags</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) -E $&lt; \</STRING>
<STRING>          | sh $(srcdir)/gencmdlist.sh </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>symbolic_name</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> &gt; $@ || (rm -f $@; exit 1)</STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>fs</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES) genfslist.sh</STRING>
<STRING>        set -e; \</STRING>
<STRING>          $(TARGET_CC) -I</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> -I$(srcdir)/</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_CPPFLAGS) </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>extra_flags</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) -E $&lt; \</STRING>
<STRING>          | sh $(srcdir)/genfslist.sh </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>symbolic_name</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> &gt; $@ || (rm -f $@; exit 1)</STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>parttool</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES) genparttoollist.sh</STRING>
<STRING>        set -e; \</STRING>
<STRING>          $(TARGET_CC) -I</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> -I$(srcdir)/</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_CPPFLAGS) </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>extra_flags</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) -E $&lt; \</STRING>
<STRING>          | sh $(srcdir)/genparttoollist.sh </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>symbolic_name</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> &gt; $@ || (rm -f $@; exit 1)</STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>partmap</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES) genpartmaplist.sh</STRING>
<STRING>        set -e; \</STRING>
<STRING>          $(TARGET_CC) -I</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> -I$(srcdir)/</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_CPPFLAGS) </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>extra_flags</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) -E $&lt; \</STRING>
<STRING>          | sh $(srcdir)/genpartmaplist.sh </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>symbolic_name</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> &gt; $@ || (rm -f $@; exit 1)</STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>handler</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES) genhandlerlist.sh</STRING>
<STRING>        set -e; \</STRING>
<STRING>          $(TARGET_CC) -I</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> -I$(srcdir)/</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_CPPFLAGS) </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>extra_flags</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) -E $&lt; \</STRING>
<STRING>          | sh $(srcdir)/genhandlerlist.sh </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>symbolic_name</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> &gt; $@ || (rm -f $@; exit 1)</STRING>
<STRING></STRING>
<STRING>"</STRING>
    <OBJ>end</OBJ>.<OO>join</OO>(<STRING>''</STRING>)
  <KEYWORD>end</KEYWORD>
<KEYWORD>end</KEYWORD>

<KEYWORD>class</KEYWORD> <CONSTANT>Utility</CONSTANT>
  <KEYWORD>def</KEYWORD> initialize(dir, name)
    <VARIABLE>@dir</VARIABLE> <OPERATOR>=</OPERATOR> dir
    <VARIABLE>@name</VARIABLE> <OPERATOR>=</OPERATOR> name
    <VARIABLE>@rule_count</VARIABLE> <OPERATOR>=</OPERATOR> <NUMERIC>0</NUMERIC>
  <KEYWORD>end</KEYWORD>
  <KEYWORD>def</KEYWORD> print_tail()
    prefix <OPERATOR>=</OPERATOR> <VARIABLE>@name</VARIABLE>.<OO>to_var</OO>
    <FUNCTION>print</FUNCTION> <STRING>"</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_OBJECTS)</STRING>
<STRING>        $(CC) -o $@ $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_OBJECTS) $(LDFLAGS) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_LDFLAGS)</STRING>
<STRING></STRING>
<STRING>"</STRING>
  <KEYWORD>end</KEYWORD>
  attr_reader <VALUE>:dir</VALUE>, <VALUE>:name</VALUE>

  <KEYWORD>def</KEYWORD> rule(sources)
    prefix <OPERATOR>=</OPERATOR> <VARIABLE>@name</VARIABLE>.<OO>to_var</OO>
    <VARIABLE>@rule_count</VARIABLE> <OPERATOR>+=</OPERATOR> <NUMERIC>1</NUMERIC>
    objs <OPERATOR>=</OPERATOR> <OBJ>sources</OBJ>.<OO>collect</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>src<OPERATOR>|</OPERATOR>
      <FUNCTION>raise</FUNCTION> <STRING>"unknown source file `</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>'"</STRING> <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>cS<REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER>$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>!~</OPERATOR> src
      prefix <OPERATOR>+</OPERATOR> <STRING>'-'</STRING> <OPERATOR>+</OPERATOR> <OBJ>src</OBJ>.<OO>to_obj</OO>
    <KEYWORD>end</KEYWORD>
    objs_str <OPERATOR>=</OPERATOR> <OBJ>objs</OBJ>.<OO>join</OO>(<STRING>' '</STRING>)<OPERATOR>;</OPERATOR>
    deps <OPERATOR>=</OPERATOR> <OBJ>objs</OBJ>.<OO>collect</OO> {<OPERATOR>|</OPERATOR>obj<OPERATOR>|</OPERATOR> <OBJ>obj</OBJ>.<OO>suffix</OO>(<STRING>'d'</STRING>)}
    deps_str <OPERATOR>=</OPERATOR> <OBJ>deps</OBJ>.<OO>join</OO>(<STRING>' '</STRING>)<OPERATOR>;</OPERATOR>

    <STRING>"</STRING>
<STRING>clean-utility-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>:</STRING>
<STRING>        rm -f </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>$(EXEEXT) </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>objs_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>CLEAN_UTILITY_TARGETS += clean-utility-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>mostlyclean-utility-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>:</STRING>
<STRING>        rm -f </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>deps_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>.</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@rule_count</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_OBJECTS += </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>objs_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>"</STRING> <OPERATOR>+</OPERATOR> <OBJ>objs</OBJ>.<OO>collect_with_index</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>obj, i<OPERATOR>|</OPERATOR>
      src <OPERATOR>=</OPERATOR> sources[i]
      fake_obj <OPERATOR>=</OPERATOR> <CONSTANT>File</CONSTANT>.<OO>basename</OO>(src).<OO>suffix</OO>(<STRING>'o'</STRING>)
      dep <OPERATOR>=</OPERATOR> deps[i]
      dir <OPERATOR>=</OPERATOR> <CONSTANT>File</CONSTANT>.<OO>dirname</OO>(src)

      <STRING>"</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES)</STRING>
<STRING>        $(CC) -I</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> -I$(srcdir)/</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_CFLAGS) -MD -c -o $@ $&lt;</STRING>
<STRING>-include </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dep</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>"</STRING>
    <OBJ>end</OBJ>.<OO>join</OO>(<STRING>''</STRING>)
  <KEYWORD>end</KEYWORD>
<KEYWORD>end</KEYWORD>

<KEYWORD>class</KEYWORD> <CONSTANT>Program</CONSTANT>
  <KEYWORD>def</KEYWORD> initialize(dir, name)
    <VARIABLE>@dir</VARIABLE> <OPERATOR>=</OPERATOR> dir
    <VARIABLE>@name</VARIABLE> <OPERATOR>=</OPERATOR> name
  <KEYWORD>end</KEYWORD>
  attr_reader <VALUE>:dir</VALUE>, <VALUE>:name</VALUE>

  <KEYWORD>def</KEYWORD> rule(sources)
    prefix <OPERATOR>=</OPERATOR> <VARIABLE>@name</VARIABLE>.<OO>to_var</OO>
    objs <OPERATOR>=</OPERATOR> <OBJ>sources</OBJ>.<OO>collect</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>src<OPERATOR>|</OPERATOR>
      <FUNCTION>raise</FUNCTION> <STRING>"unknown source file `</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>'"</STRING> <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>cS<REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER>$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>!~</OPERATOR> src
      prefix <OPERATOR>+</OPERATOR> <STRING>'-'</STRING> <OPERATOR>+</OPERATOR> <OBJ>src</OBJ>.<OO>to_obj</OO>
    <KEYWORD>end</KEYWORD>
    objs_str <OPERATOR>=</OPERATOR> <OBJ>objs</OBJ>.<OO>join</OO>(<STRING>' '</STRING>)<OPERATOR>;</OPERATOR>
    deps <OPERATOR>=</OPERATOR> <OBJ>objs</OBJ>.<OO>collect</OO> {<OPERATOR>|</OPERATOR>obj<OPERATOR>|</OPERATOR> <OBJ>obj</OBJ>.<OO>suffix</OO>(<STRING>'d'</STRING>)}
    deps_str <OPERATOR>=</OPERATOR> <OBJ>deps</OBJ>.<OO>join</OO>(<STRING>' '</STRING>)<OPERATOR>;</OPERATOR>

    <STRING>"CLEANFILES += </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING> </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>objs_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>MOSTLYCLEANFILES += </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>deps_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES) </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>objs_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>        $(TARGET_CC) -o $@ </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>objs_str</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_LDFLAGS) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_LDFLAGS)</STRING>
<STRING></STRING>
<STRING>"</STRING> <OPERATOR>+</OPERATOR> <OBJ>objs</OBJ>.<OO>collect_with_index</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>obj, i<OPERATOR>|</OPERATOR>
      src <OPERATOR>=</OPERATOR> sources[i]
      fake_obj <OPERATOR>=</OPERATOR> <CONSTANT>File</CONSTANT>.<OO>basename</OO>(src).<OO>suffix</OO>(<STRING>'o'</STRING>)
      dep <OPERATOR>=</OPERATOR> deps[i]
      flag <OPERATOR>=</OPERATOR> <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC>c$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>=~</OPERATOR> src <KEYWORD>then</KEYWORD> <STRING>'CFLAGS'</STRING> <KEYWORD>else</KEYWORD> <STRING>'ASFLAGS'</STRING> <KEYWORD>end</KEYWORD>
      extra_flags <OPERATOR>=</OPERATOR> <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC>S$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>=~</OPERATOR> src <KEYWORD>then</KEYWORD> <STRING>'-DASM_FILE=1'</STRING> <KEYWORD>else</KEYWORD> <STRING>''</STRING> <KEYWORD>end</KEYWORD>
      dir <OPERATOR>=</OPERATOR> <CONSTANT>File</CONSTANT>.<OO>dirname</OO>(src)

      <STRING>"</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>obj</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES)</STRING>
<STRING>        $(TARGET_CC) -I</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> -I$(srcdir)/</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dir</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_CPPFLAGS) </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>extra_flags</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(TARGET_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>prefix</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>flag</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>) -MD -c -o $@ $&lt;</STRING>
<STRING>-include </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>dep</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING>"</STRING>
    <OBJ>end</OBJ>.<OO>join</OO>(<STRING>''</STRING>)
  <KEYWORD>end</KEYWORD>
<KEYWORD>end</KEYWORD>

<KEYWORD>class</KEYWORD> <CONSTANT>Script</CONSTANT>
  <KEYWORD>def</KEYWORD> initialize(dir, name)
    <VARIABLE>@dir</VARIABLE> <OPERATOR>=</OPERATOR> dir
    <VARIABLE>@name</VARIABLE> <OPERATOR>=</OPERATOR> name
  <KEYWORD>end</KEYWORD>
  attr_reader <VALUE>:dir</VALUE>, <VALUE>:name</VALUE>

  <KEYWORD>def</KEYWORD> rule(sources)
    <KEYWORD>if</KEYWORD> <OBJ>sources</OBJ>.<OO>length</OO> <OPERATOR>!=</OPERATOR> <NUMERIC>1</NUMERIC>
      <FUNCTION>raise</FUNCTION> <STRING>"only a single source file must be specified for a script"</STRING>
    <KEYWORD>end</KEYWORD>
    src <OPERATOR>=</OPERATOR> sources[<NUMERIC>0</NUMERIC>]
    <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER><ESC>\.</ESC>in$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>!~</OPERATOR> src
      <FUNCTION>raise</FUNCTION> <STRING>"unknown source file `</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>'"</STRING>
    <KEYWORD>end</KEYWORD>

    <STRING>"CLEANFILES += </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING></STRING>
<STRING></STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><VARIABLE>@name</VARIABLE></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>: </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> $(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>_DEPENDENCIES) config.status</STRING>
<STRING>        ./config.status --file=</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>name</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>:</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>src</INTERPOLATION><DELIMITER>}</DELIMITER><STRING></STRING>
<STRING>        chmod +x $@</STRING>
<STRING></STRING>
<STRING>"</STRING>
  <KEYWORD>end</KEYWORD>
<KEYWORD>end</KEYWORD>

images <OPERATOR>=</OPERATOR> []
utils <OPERATOR>=</OPERATOR> []
pmodules <OPERATOR>=</OPERATOR> []
programs <OPERATOR>=</OPERATOR> []
scripts <OPERATOR>=</OPERATOR> []

l <OPERATOR>=</OPERATOR> <FUNCTION>gets</FUNCTION>
<FUNCTION>print</FUNCTION> l
<FUNCTION>print</FUNCTION> <STRING>"# Generated by genmk.rb, please don't edit!<ESC>\n</ESC>"</STRING>

cont <OPERATOR>=</OPERATOR> <KEYWORD>false</KEYWORD>
str <OPERATOR>=</OPERATOR> <KEYWORD>nil</KEYWORD>
<KEYWORD>while</KEYWORD> l <OPERATOR>=</OPERATOR> <FUNCTION>gets</FUNCTION>
  <KEYWORD>if</KEYWORD> cont
    str <OPERATOR>+=</OPERATOR> l
  <KEYWORD>else</KEYWORD>
    str <OPERATOR>=</OPERATOR> l
  <KEYWORD>end</KEYWORD>

  <FUNCTION>print</FUNCTION> l
  cont <OPERATOR>=</OPERATOR> (<REGEX><DELIMITER>/</DELIMITER><ESC>\\</ESC>$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>=~</OPERATOR> l)
  <KEYWORD>unless</KEYWORD> cont
    <OBJ>str</OBJ>.<OO>gsub!</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\\</ESC><ESC>\n</ESC><DELIMITER>/</DELIMITER></REGEX>, <STRING>' '</STRING>)

    <KEYWORD>if</KEYWORD> <REGEX><DELIMITER>/</DELIMITER>^<REGEX_SUBPATTERN_MARKER>(</REGEX_SUBPATTERN_MARKER><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>a-zA-Z0-9_<REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER><REGEX_OPERATOR>+</REGEX_OPERATOR><REGEX_SUBPATTERN_MARKER>)</REGEX_SUBPATTERN_MARKER><ESC>\s</ESC><REGEX_OPERATOR>*</REGEX_OPERATOR><ESC>\+</ESC><REGEX_OPERATOR>?</REGEX_OPERATOR>=<ESC>\s</ESC><REGEX_OPERATOR>*</REGEX_OPERATOR><REGEX_SUBPATTERN_MARKER>(</REGEX_SUBPATTERN_MARKER><REGEX_OPERATOR>.</REGEX_OPERATOR><REGEX_OPERATOR>*</REGEX_OPERATOR><REGEX_OPERATOR>?</REGEX_OPERATOR><REGEX_SUBPATTERN_MARKER>)</REGEX_SUBPATTERN_MARKER><ESC>\s</ESC><REGEX_OPERATOR>*</REGEX_OPERATOR>$<DELIMITER>/</DELIMITER></REGEX> <OPERATOR>=~</OPERATOR> str
      var, args <OPERATOR>=</OPERATOR> <VARIABLE>$1</VARIABLE>, <VARIABLE>$2</VARIABLE>

      <KEYWORD>if</KEYWORD> var <OPERATOR>=~</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>^<REGEX_SUBPATTERN_MARKER>(</REGEX_SUBPATTERN_MARKER><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>a-zA-Z0-9_<REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER><REGEX_OPERATOR>+</REGEX_OPERATOR><REGEX_SUBPATTERN_MARKER>)</REGEX_SUBPATTERN_MARKER>_<REGEX_SUBPATTERN_MARKER>(</REGEX_SUBPATTERN_MARKER><REGEX_CLASS_MARKER>[</REGEX_CLASS_MARKER>A-Z<REGEX_CLASS_MARKER>]</REGEX_CLASS_MARKER><REGEX_OPERATOR>+</REGEX_OPERATOR><REGEX_SUBPATTERN_MARKER>)</REGEX_SUBPATTERN_MARKER>$<DELIMITER>/</DELIMITER></REGEX>
        prefix, type <OPERATOR>=</OPERATOR> <VARIABLE>$1</VARIABLE>, <VARIABLE>$2</VARIABLE>

        <KEYWORD>case</KEYWORD> type
        <KEYWORD>when</KEYWORD> <STRING>'IMAGES'</STRING>
          images <OPERATOR>+=</OPERATOR> <OBJ>args</OBJ>.<OO>split</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\s</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR><DELIMITER>/</DELIMITER></REGEX>).<OO>collect</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>img<OPERATOR>|</OPERATOR>
            <CONSTANT>Image</CONSTANT>.<OO>new</OO>(prefix, img)
          <KEYWORD>end</KEYWORD>

        <KEYWORD>when</KEYWORD> <STRING>'MODULES'</STRING>
          pmodules <OPERATOR>+=</OPERATOR> <OBJ>args</OBJ>.<OO>split</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\s</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR><DELIMITER>/</DELIMITER></REGEX>).<OO>collect</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>pmod<OPERATOR>|</OPERATOR>
            <CONSTANT>PModule</CONSTANT>.<OO>new</OO>(prefix, pmod)
          <KEYWORD>end</KEYWORD>

        <KEYWORD>when</KEYWORD> <STRING>'UTILITIES'</STRING>
          utils <OPERATOR>+=</OPERATOR> <OBJ>args</OBJ>.<OO>split</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\s</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR><DELIMITER>/</DELIMITER></REGEX>).<OO>collect</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>util<OPERATOR>|</OPERATOR>
            <CONSTANT>Utility</CONSTANT>.<OO>new</OO>(prefix, util)
          <KEYWORD>end</KEYWORD>

        <KEYWORD>when</KEYWORD> <STRING>'PROGRAMS'</STRING>
          programs <OPERATOR>+=</OPERATOR> <OBJ>args</OBJ>.<OO>split</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\s</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR><DELIMITER>/</DELIMITER></REGEX>).<OO>collect</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>prog<OPERATOR>|</OPERATOR>
            <CONSTANT>Program</CONSTANT>.<OO>new</OO>(prefix, prog)
          <KEYWORD>end</KEYWORD>

        <KEYWORD>when</KEYWORD> <STRING>'SCRIPTS'</STRING>
          scripts <OPERATOR>+=</OPERATOR> <OBJ>args</OBJ>.<OO>split</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\s</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR><DELIMITER>/</DELIMITER></REGEX>).<OO>collect</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>script<OPERATOR>|</OPERATOR>
            <CONSTANT>Script</CONSTANT>.<OO>new</OO>(prefix, script)
          <KEYWORD>end</KEYWORD>

        <KEYWORD>when</KEYWORD> <STRING>'SOURCES'</STRING>
          <KEYWORD>if</KEYWORD> img <OPERATOR>=</OPERATOR> <OBJ>images</OBJ>.<OO>detect</OO>() {<OPERATOR>|</OPERATOR>i<OPERATOR>|</OPERATOR> <OBJ>i</OBJ>.<OO>name</OO>.<OO>to_var</OO> <OPERATOR>==</OPERATOR> prefix}
            <FUNCTION>print</FUNCTION> <OBJ>img</OBJ>.<OO>rule</OO>(<OBJ>args</OBJ>.<OO>split</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\s</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR><DELIMITER>/</DELIMITER></REGEX>))
          <KEYWORD>elsif</KEYWORD> pmod <OPERATOR>=</OPERATOR> <OBJ>pmodules</OBJ>.<OO>detect</OO>() {<OPERATOR>|</OPERATOR>m<OPERATOR>|</OPERATOR> <OBJ>m</OBJ>.<OO>name</OO>.<OO>to_var</OO> <OPERATOR>==</OPERATOR> prefix}
            <FUNCTION>print</FUNCTION> <OBJ>pmod</OBJ>.<OO>rule</OO>(<OBJ>args</OBJ>.<OO>split</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\s</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR><DELIMITER>/</DELIMITER></REGEX>))
          <KEYWORD>elsif</KEYWORD> util <OPERATOR>=</OPERATOR> <OBJ>utils</OBJ>.<OO>detect</OO>() {<OPERATOR>|</OPERATOR>u<OPERATOR>|</OPERATOR> <OBJ>u</OBJ>.<OO>name</OO>.<OO>to_var</OO> <OPERATOR>==</OPERATOR> prefix}
            <FUNCTION>print</FUNCTION> <OBJ>util</OBJ>.<OO>rule</OO>(<OBJ>args</OBJ>.<OO>split</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\s</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR><DELIMITER>/</DELIMITER></REGEX>))
          <KEYWORD>elsif</KEYWORD> program <OPERATOR>=</OPERATOR> <OBJ>programs</OBJ>.<OO>detect</OO>() {<OPERATOR>|</OPERATOR>u<OPERATOR>|</OPERATOR> <OBJ>u</OBJ>.<OO>name</OO>.<OO>to_var</OO> <OPERATOR>==</OPERATOR> prefix}
            <FUNCTION>print</FUNCTION> <OBJ>program</OBJ>.<OO>rule</OO>(<OBJ>args</OBJ>.<OO>split</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\s</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR><DELIMITER>/</DELIMITER></REGEX>))
          <KEYWORD>elsif</KEYWORD> script <OPERATOR>=</OPERATOR> <OBJ>scripts</OBJ>.<OO>detect</OO>() {<OPERATOR>|</OPERATOR>s<OPERATOR>|</OPERATOR> <OBJ>s</OBJ>.<OO>name</OO>.<OO>to_var</OO> <OPERATOR>==</OPERATOR> prefix}
            <FUNCTION>print</FUNCTION> <OBJ>script</OBJ>.<OO>rule</OO>(<OBJ>args</OBJ>.<OO>split</OO>(<REGEX><DELIMITER>/</DELIMITER><ESC>\s</ESC><REGEX_OPERATOR>+</REGEX_OPERATOR><DELIMITER>/</DELIMITER></REGEX>))
          <KEYWORD>end</KEYWORD>
        <KEYWORD>end</KEYWORD>
      <KEYWORD>end</KEYWORD>

    <KEYWORD>end</KEYWORD>

  <KEYWORD>end</KEYWORD>

<KEYWORD>end</KEYWORD>
<OBJ>utils</OBJ>.<OO>each</OO> {<OPERATOR>|</OPERATOR>util<OPERATOR>|</OPERATOR> <OBJ>util</OBJ>.<OO>print_tail</OO>()}