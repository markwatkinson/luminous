<COMMENT># Redmine - project management software</COMMENT>
<COMMENT># Copyright (C) 2006-2008  Jean-Philippe Lang</COMMENT>
<COMMENT>#</COMMENT>
<COMMENT># This program is free software; you can redistribute it and/or</COMMENT>
<COMMENT># modify it under the terms of the GNU General Public License</COMMENT>
<COMMENT># as published by the Free Software Foundation; either version 2</COMMENT>
<COMMENT># of the License, or (at your option) any later version.</COMMENT>
<COMMENT># </COMMENT>
<COMMENT># This program is distributed in the hope that it will be useful,</COMMENT>
<COMMENT># but WITHOUT ANY WARRANTY; without even the implied warranty of</COMMENT>
<COMMENT># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</COMMENT>
<COMMENT># GNU General Public License for more details.</COMMENT>
<COMMENT># </COMMENT>
<COMMENT># You should have received a copy of the GNU General Public License</COMMENT>
<COMMENT># along with this program; if not, write to the Free Software</COMMENT>
<COMMENT># Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.</COMMENT>

<FUNCTION>require</FUNCTION> <CONSTANT>File</CONSTANT>.<OO>expand_path</OO>(<STRING>'../../test_helper'</STRING>, <KEYWORD>__FILE__</KEYWORD>)
<FUNCTION>require</FUNCTION> <STRING>'issues_controller'</STRING>

<COMMENT># Re-raise errors caught by the controller.</COMMENT>
<KEYWORD>class</KEYWORD> <CONSTANT>IssuesController</CONSTANT><OPERATOR>;</OPERATOR> <KEYWORD>def</KEYWORD> rescue_action(e) <FUNCTION>raise</FUNCTION> e <KEYWORD>end</KEYWORD><OPERATOR>;</OPERATOR> <KEYWORD>end</KEYWORD>

<KEYWORD>class</KEYWORD> <CONSTANT>IssuesControllerTest</CONSTANT> <OPERATOR>&lt;</OPERATOR> <CONSTANT>ActionController</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>TestCase</CONSTANT>
  fixtures <VALUE>:projects</VALUE>,
           <VALUE>:users</VALUE>,
           <VALUE>:roles</VALUE>,
           <VALUE>:members</VALUE>,
           <VALUE>:member_roles</VALUE>,
           <VALUE>:issues</VALUE>,
           <VALUE>:issue_statuses</VALUE>,
           <VALUE>:versions</VALUE>,
           <VALUE>:trackers</VALUE>,
           <VALUE>:projects_trackers</VALUE>,
           <VALUE>:issue_categories</VALUE>,
           <VALUE>:enabled_modules</VALUE>,
           <VALUE>:enumerations</VALUE>,
           <VALUE>:attachments</VALUE>,
           <VALUE>:workflows</VALUE>,
           <VALUE>:custom_fields</VALUE>,
           <VALUE>:custom_values</VALUE>,
           <VALUE>:custom_fields_projects</VALUE>,
           <VALUE>:custom_fields_trackers</VALUE>,
           <VALUE>:time_entries</VALUE>,
           <VALUE>:journals</VALUE>,
           <VALUE>:journal_details</VALUE>,
           <VALUE>:queries</VALUE>
  
  <KEYWORD>def</KEYWORD> setup
    <VARIABLE>@controller</VARIABLE> <OPERATOR>=</OPERATOR> <CONSTANT>IssuesController</CONSTANT>.<OO>new</OO>
    <VARIABLE>@request</VARIABLE>    <OPERATOR>=</OPERATOR> <CONSTANT>ActionController</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>TestRequest</CONSTANT>.<OO>new</OO>
    <VARIABLE>@response</VARIABLE>   <OPERATOR>=</OPERATOR> <CONSTANT>ActionController</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>TestResponse</CONSTANT>.<OO>new</OO>
    <CONSTANT>User</CONSTANT>.<OO>current</OO> <OPERATOR>=</OPERATOR> <KEYWORD>nil</KEYWORD>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index
    <CONSTANT>Setting</CONSTANT>.<OO>default_language</OO> <OPERATOR>=</OPERATOR> <STRING>'en'</STRING>
    
    get <VALUE>:index</VALUE>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_nil assigns(<VALUE>:project</VALUE>)
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Can't print recipes<DELIMITER>/</DELIMITER></REGEX>
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Subproject issue<DELIMITER>/</DELIMITER></REGEX>
    <COMMENT># private projects hidden</COMMENT>
    assert_no_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Issue of a private subproject<DELIMITER>/</DELIMITER></REGEX>
    assert_no_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Issue on project 2<DELIMITER>/</DELIMITER></REGEX>
    <COMMENT># project column</COMMENT>
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'th'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Project<DELIMITER>/</DELIMITER></REGEX>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_should_not_list_issues_when_module_disabled
    <CONSTANT>EnabledModule</CONSTANT>.<OO>delete_all</OO>(<STRING>"name = 'issue_tracking' AND project_id = 1"</STRING>)
    get <VALUE>:index</VALUE>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_nil assigns(<VALUE>:project</VALUE>)
    assert_no_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Can't print recipes<DELIMITER>/</DELIMITER></REGEX>
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Subproject issue<DELIMITER>/</DELIMITER></REGEX>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_index_should_not_list_issues_when_module_disabled
    <CONSTANT>EnabledModule</CONSTANT>.<OO>delete_all</OO>(<STRING>"name = 'issue_tracking' AND project_id = 1"</STRING>)
    get <VALUE>:index</VALUE>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_nil assigns(<VALUE>:project</VALUE>)
    assert_no_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Can't print recipes<DELIMITER>/</DELIMITER></REGEX>
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Subproject issue<DELIMITER>/</DELIMITER></REGEX>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_with_project
    <CONSTANT>Setting</CONSTANT>.<OO>display_subprojects_issues</OO> <OPERATOR>=</OPERATOR> <NUMERIC>0</NUMERIC>
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Can't print recipes<DELIMITER>/</DELIMITER></REGEX>
    assert_no_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Subproject issue<DELIMITER>/</DELIMITER></REGEX>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_with_project_and_subprojects
    <CONSTANT>Setting</CONSTANT>.<OO>display_subprojects_issues</OO> <OPERATOR>=</OPERATOR> <NUMERIC>1</NUMERIC>
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Can't print recipes<DELIMITER>/</DELIMITER></REGEX>
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Subproject issue<DELIMITER>/</DELIMITER></REGEX>
    assert_no_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Issue of a private subproject<DELIMITER>/</DELIMITER></REGEX>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_with_project_and_subprojects_should_show_private_subprojects
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <CONSTANT>Setting</CONSTANT>.<OO>display_subprojects_issues</OO> <OPERATOR>=</OPERATOR> <NUMERIC>1</NUMERIC>
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Can't print recipes<DELIMITER>/</DELIMITER></REGEX>
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Subproject issue<DELIMITER>/</DELIMITER></REGEX>
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Issue of a private subproject<DELIMITER>/</DELIMITER></REGEX>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_with_project_and_default_filter
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:set_filter</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    
    query <OPERATOR>=</OPERATOR> assigns(<VALUE>:query</VALUE>)
    assert_not_nil query
    <COMMENT># default filter</COMMENT>
    assert_equal({<STRING>'status_id'</STRING> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:operator</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'o'</STRING>, <VALUE>:values</VALUE> <OPERATOR>=&gt;</OPERATOR> [<STRING>''</STRING>]}}, <OBJ>query</OBJ>.<OO>filters</OO>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_with_project_and_filter
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:set_filter</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
      <VALUE>:fields</VALUE> <OPERATOR>=&gt;</OPERATOR> [<STRING>'tracker_id'</STRING>],
      <VALUE>:operators</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'tracker_id'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>'='</STRING>},
      <VALUE>:values</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'tracker_id'</STRING> <OPERATOR>=&gt;</OPERATOR> [<STRING>'1'</STRING>]} 
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    
    query <OPERATOR>=</OPERATOR> assigns(<VALUE>:query</VALUE>)
    assert_not_nil query
    assert_equal({<STRING>'tracker_id'</STRING> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:operator</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'='</STRING>, <VALUE>:values</VALUE> <OPERATOR>=&gt;</OPERATOR> [<STRING>'1'</STRING>]}}, <OBJ>query</OBJ>.<OO>filters</OO>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_with_project_and_empty_filters
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:set_filter</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:fields</VALUE> <OPERATOR>=&gt;</OPERATOR> [<STRING>''</STRING>]
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    
    query <OPERATOR>=</OPERATOR> assigns(<VALUE>:query</VALUE>)
    assert_not_nil query
    <COMMENT># no filter</COMMENT>
    assert_equal({}, <OBJ>query</OBJ>.<OO>filters</OO>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_with_query
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:query_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>5</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_nil assigns(<VALUE>:issue_count_by_group</VALUE>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_with_query_grouped_by_tracker
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:query_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>6</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_not_nil assigns(<VALUE>:issue_count_by_group</VALUE>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_with_query_grouped_by_list_custom_field
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:query_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>9</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'index.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_not_nil assigns(<VALUE>:issue_count_by_group</VALUE>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_sort_by_field_not_included_in_columns
    <CONSTANT>Setting</CONSTANT>.<OO>issue_list_default_columns</OO> <OPERATOR>=</OPERATOR> <DELIMITER>%w(</DELIMITER><STRING>subject</STRING> <STRING>author</STRING><DELIMITER>)</DELIMITER>
    get <VALUE>:index</VALUE>, <VALUE>:sort</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'tracker'</STRING>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_csv_with_project
    <CONSTANT>Setting</CONSTANT>.<OO>default_language</OO> <OPERATOR>=</OPERATOR> <STRING>'en'</STRING>
    
    get <VALUE>:index</VALUE>, <VALUE>:format</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'csv'</STRING>
    assert_response <VALUE>:success</VALUE>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_equal <STRING>'text/csv'</STRING>, <VARIABLE>@response</VARIABLE>.<OO>content_type</OO>
    assert <VARIABLE>@response</VARIABLE>.<OO>body</OO>.<OO>starts_with?</OO>(<STRING>"#,"</STRING>)

    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:format</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'csv'</STRING>
    assert_response <VALUE>:success</VALUE>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_equal <STRING>'text/csv'</STRING>, <VARIABLE>@response</VARIABLE>.<OO>content_type</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_pdf
    get <VALUE>:index</VALUE>, <VALUE>:format</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'pdf'</STRING>
    assert_response <VALUE>:success</VALUE>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_equal <STRING>'application/pdf'</STRING>, <VARIABLE>@response</VARIABLE>.<OO>content_type</OO>
    
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:format</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'pdf'</STRING>
    assert_response <VALUE>:success</VALUE>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_equal <STRING>'application/pdf'</STRING>, <VARIABLE>@response</VARIABLE>.<OO>content_type</OO>
    
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:query_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>6</NUMERIC>, <VALUE>:format</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'pdf'</STRING>
    assert_response <VALUE>:success</VALUE>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_equal <STRING>'application/pdf'</STRING>, <VARIABLE>@response</VARIABLE>.<OO>content_type</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_pdf_with_query_grouped_by_list_custom_field
    get <VALUE>:index</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:query_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>9</NUMERIC>, <VALUE>:format</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'pdf'</STRING>
    assert_response <VALUE>:success</VALUE>
    assert_not_nil assigns(<VALUE>:issues</VALUE>)
    assert_not_nil assigns(<VALUE>:issue_count_by_group</VALUE>)
    assert_equal <STRING>'application/pdf'</STRING>, <VARIABLE>@response</VARIABLE>.<OO>content_type</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_sort
    get <VALUE>:index</VALUE>, <VALUE>:sort</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'tracker,id:desc'</STRING>
    assert_response <VALUE>:success</VALUE>
    
    sort_params <OPERATOR>=</OPERATOR> <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<STRING>'issues_index_sort'</STRING>]
    assert <OBJ>sort_params</OBJ>.<OO>is_a?</OO>(<CONSTANT>String</CONSTANT>)
    assert_equal <STRING>'tracker,id:desc'</STRING>, sort_params
    
    issues <OPERATOR>=</OPERATOR> assigns(<VALUE>:issues</VALUE>)
    assert_not_nil issues
    assert <OPERATOR>!</OPERATOR><OBJ>issues</OBJ>.<OO>empty?</OO>
    assert_equal <OBJ>issues</OBJ>.<OO>sort</OO> {<OPERATOR>|</OPERATOR>a,b<OPERATOR>|</OPERATOR> <OBJ>a</OBJ>.<OO>tracker</OO> <OPERATOR>==</OPERATOR> <OBJ>b</OBJ>.<OO>tracker</OO> <OPERATOR>?</OPERATOR> <OBJ>b</OBJ>.<OO>id</OO> <OPERATOR>&lt;=&gt;</OPERATOR> <OBJ>a</OBJ>.<OO>id</OO> <OPERATOR>:</OPERATOR> <OBJ>a</OBJ>.<OO>tracker</OO> <OPERATOR>&lt;=&gt;</OPERATOR> <OBJ>b</OBJ>.<OO>tracker</OO> }.<OO>collect</OO>(<OPERATOR>&amp;</OPERATOR><VALUE>:id</VALUE>), <OBJ>issues</OBJ>.<OO>collect</OO>(<OPERATOR>&amp;</OPERATOR><VALUE>:id</VALUE>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_index_with_columns
    columns <OPERATOR>=</OPERATOR> [<STRING>'tracker'</STRING>, <STRING>'subject'</STRING>, <STRING>'assigned_to'</STRING>]
    get <VALUE>:index</VALUE>, <VALUE>:set_filter</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:query</VALUE> <OPERATOR>=&gt;</OPERATOR> { <STRING>'column_names'</STRING> <OPERATOR>=&gt;</OPERATOR> columns}
    assert_response <VALUE>:success</VALUE>
    
    <COMMENT># query should use specified columns</COMMENT>
    query <OPERATOR>=</OPERATOR> assigns(<VALUE>:query</VALUE>)
    assert_kind_of <CONSTANT>Query</CONSTANT>, query
    assert_equal columns, <OBJ>query</OBJ>.<OO>column_names</OO>.<OO>map</OO>(<OPERATOR>&amp;</OPERATOR><VALUE>:to_s</VALUE>)
    
    <COMMENT># columns should be stored in session</COMMENT>
    assert_kind_of <CONSTANT>Hash</CONSTANT>, session[<VALUE>:query</VALUE>]
    assert_kind_of <CONSTANT>Array</CONSTANT>, session[<VALUE>:query</VALUE>][<VALUE>:column_names</VALUE>]
    assert_equal columns, session[<VALUE>:query</VALUE>][<VALUE>:column_names</VALUE>].<OO>map</OO>(<OPERATOR>&amp;</OPERATOR><VALUE>:to_s</VALUE>)
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_show_by_anonymous
    get <VALUE>:show</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'show.rhtml'</STRING>
    assert_not_nil assigns(<VALUE>:issue</VALUE>)
    assert_equal <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>), assigns(<VALUE>:issue</VALUE>)
    
    <COMMENT># anonymous role is allowed to add a note</COMMENT>
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'form'</STRING>,
               <VALUE>:descendant</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'fieldset'</STRING>,
                                <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'legend'</STRING>, 
                                            <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Notes<DELIMITER>/</DELIMITER></REGEX> } }
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_show_by_manager
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    get <VALUE>:show</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>,
      <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Quote<DELIMITER>/</DELIMITER></REGEX>
    
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'form'</STRING>,
               <VALUE>:descendant</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'fieldset'</STRING>,
                                <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'legend'</STRING>, 
                                            <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Change properties<DELIMITER>/</DELIMITER></REGEX> } },
               <VALUE>:descendant</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'fieldset'</STRING>,
                                <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'legend'</STRING>, 
                                            <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Log time<DELIMITER>/</DELIMITER></REGEX> } },
               <VALUE>:descendant</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'fieldset'</STRING>,
                                <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'legend'</STRING>, 
                                            <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>Notes<DELIMITER>/</DELIMITER></REGEX> } }
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_show_should_deny_anonymous_access_without_permission
    <CONSTANT>Role</CONSTANT>.<OO>anonymous</OO>.<OO>remove_permission!</OO>(<VALUE>:view_issues</VALUE>)
    get <VALUE>:show</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <VALUE>:redirect</VALUE>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_show_should_deny_non_member_access_without_permission
    <CONSTANT>Role</CONSTANT>.<OO>non_member</OO>.<OO>remove_permission!</OO>(<VALUE>:view_issues</VALUE>)
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>9</NUMERIC>
    get <VALUE>:show</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <NUMERIC>403</NUMERIC>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_show_should_deny_member_access_without_permission
    <CONSTANT>Role</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>remove_permission!</OO>(<VALUE>:view_issues</VALUE>)
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    get <VALUE>:show</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <NUMERIC>403</NUMERIC>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_show_should_not_disclose_relations_to_invisible_issues
    <CONSTANT>Setting</CONSTANT>.<OO>cross_project_issue_relations</OO> <OPERATOR>=</OPERATOR> <STRING>'1'</STRING>
    <CONSTANT>IssueRelation</CONSTANT>.<OO>create!</OO>(<VALUE>:issue_from</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>), <VALUE>:issue_to</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>2</NUMERIC>), <VALUE>:relation_type</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'relates'</STRING>)
    <COMMENT># Relation to a private project issue</COMMENT>
    <CONSTANT>IssueRelation</CONSTANT>.<OO>create!</OO>(<VALUE>:issue_from</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>), <VALUE>:issue_to</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>4</NUMERIC>), <VALUE>:relation_type</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'relates'</STRING>)
    
    get <VALUE>:show</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    
    assert_tag <VALUE>:div</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'relations'</STRING> },
                     <VALUE>:descendant</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>#2$<DELIMITER>/</DELIMITER></REGEX> }
    assert_no_tag <VALUE>:div</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'relations'</STRING> },
                        <VALUE>:descendant</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'a'</STRING>, <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>#4$<DELIMITER>/</DELIMITER></REGEX> }
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_show_atom
    get <VALUE>:show</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>, <VALUE>:format</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'atom'</STRING>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'journals/index.rxml'</STRING>
    <COMMENT># Inline image</COMMENT>
    assert_select <STRING>'content'</STRING>, <VALUE>:text</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Regexp</CONSTANT>.<OO>new</OO>(<CONSTANT>Regexp</CONSTANT>.<OO>quote</OO>(<STRING>'http://test.host/attachments/download/10'</STRING>))
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_show_export_to_pdf
    get <VALUE>:show</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC>, <VALUE>:format</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'pdf'</STRING>
    assert_response <VALUE>:success</VALUE>
    assert_equal <STRING>'application/pdf'</STRING>, <VARIABLE>@response</VARIABLE>.<OO>content_type</OO>
    assert <VARIABLE>@response</VARIABLE>.<OO>body</OO>.<OO>starts_with?</OO>(<STRING>'%PDF'</STRING>)
    assert_not_nil assigns(<VALUE>:issue</VALUE>)
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_get_new
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    get <VALUE>:new</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'new'</STRING>
    
    assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'input'</STRING>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issue[custom_field_values][2]'</STRING>,
                                                 <VALUE>:value</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Default string'</STRING> }
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_get_new_without_tracker_id
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    get <VALUE>:new</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'new'</STRING>
    
    issue <OPERATOR>=</OPERATOR> assigns(<VALUE>:issue</VALUE>)
    assert_not_nil issue
    assert_equal <CONSTANT>Project</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>trackers</OO>.<OO>first</OO>, <OBJ>issue</OBJ>.<OO>tracker</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_get_new_with_no_default_status_should_display_an_error
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <CONSTANT>IssueStatus</CONSTANT>.<OO>delete_all</OO>
    
    get <VALUE>:new</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <NUMERIC>500</NUMERIC>
    assert_error_tag <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>No default issue<DELIMITER>/</DELIMITER></REGEX>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_get_new_with_no_tracker_should_display_an_error
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <CONSTANT>Tracker</CONSTANT>.<OO>delete_all</OO>
    
    get <VALUE>:new</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <NUMERIC>500</NUMERIC>
    assert_error_tag <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <REGEX><DELIMITER>/</DELIMITER>No tracker<DELIMITER>/</DELIMITER></REGEX>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_update_new_form
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    xhr <VALUE>:post</VALUE>, <VALUE>:new</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                     <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>, 
                                <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the test_new issue'</STRING>,
                                <VALUE>:description</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the description'</STRING>,
                                <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>5</NUMERIC>}
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'attributes'</STRING>
    
    issue <OPERATOR>=</OPERATOR> assigns(<VALUE>:issue</VALUE>)
    assert_kind_of <CONSTANT>Issue</CONSTANT>, issue
    assert_equal <NUMERIC>1</NUMERIC>, <OBJ>issue</OBJ>.<OO>project_id</OO>
    assert_equal <NUMERIC>2</NUMERIC>, <OBJ>issue</OBJ>.<OO>tracker_id</OO>
    assert_equal <STRING>'This is the test_new issue'</STRING>, <OBJ>issue</OBJ>.<OO>subject</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_post_create
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    assert_difference <STRING>'Issue.count'</STRING> <KEYWORD>do</KEYWORD>
      post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
                 <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC>,
                            <VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>,
                            <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the test_new issue'</STRING>,
                            <VALUE>:description</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the description'</STRING>,
                            <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>5</NUMERIC>,
                            <VALUE>:start_date</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'2010-11-07'</STRING>,
                            <VALUE>:estimated_hours</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                            <VALUE>:custom_field_values</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'2'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>'Value for field 2'</STRING>}}
    <KEYWORD>end</KEYWORD>
    assert_redirected_to <VALUE>:controller</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issues'</STRING>, <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>last</OO>.<OO>id</OO>
    
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find_by_subject</OO>(<STRING>'This is the test_new issue'</STRING>)
    assert_not_nil issue
    assert_equal <NUMERIC>2</NUMERIC>, <OBJ>issue</OBJ>.<OO>author_id</OO>
    assert_equal <NUMERIC>3</NUMERIC>, <OBJ>issue</OBJ>.<OO>tracker_id</OO>
    assert_equal <NUMERIC>2</NUMERIC>, <OBJ>issue</OBJ>.<OO>status_id</OO>
    assert_equal <CONSTANT>Date</CONSTANT>.<OO>parse</OO>(<STRING>'2010-11-07'</STRING>), <OBJ>issue</OBJ>.<OO>start_date</OO>
    assert_nil <OBJ>issue</OBJ>.<OO>estimated_hours</OO>
    v <OPERATOR>=</OPERATOR> <OBJ>issue</OBJ>.<OO>custom_values</OO>.<OO>find</OO>(<VALUE>:first</VALUE>, <VALUE>:conditions</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:custom_field_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>})
    assert_not_nil v
    assert_equal <STRING>'Value for field 2'</STRING>, <OBJ>v</OBJ>.<OO>value</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_post_create_without_start_date
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    assert_difference <STRING>'Issue.count'</STRING> <KEYWORD>do</KEYWORD>
      post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
                 <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC>,
                            <VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>,
                            <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the test_new issue'</STRING>,
                            <VALUE>:description</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the description'</STRING>,
                            <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>5</NUMERIC>,
                            <VALUE>:start_date</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                            <VALUE>:estimated_hours</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                            <VALUE>:custom_field_values</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'2'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>'Value for field 2'</STRING>}}
    <KEYWORD>end</KEYWORD>
    assert_redirected_to <VALUE>:controller</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issues'</STRING>, <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>last</OO>.<OO>id</OO>
    
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find_by_subject</OO>(<STRING>'This is the test_new issue'</STRING>)
    assert_not_nil issue
    assert_nil <OBJ>issue</OBJ>.<OO>start_date</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_post_create_and_continue
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
               <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC>,
                          <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is first issue'</STRING>,
                          <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>5</NUMERIC>},
               <VALUE>:continue</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>
    assert_redirected_to <VALUE>:controller</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issues'</STRING>, <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'new'</STRING>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'ecookbook'</STRING>,
                         <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC>}
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_post_create_without_custom_fields_param
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    assert_difference <STRING>'Issue.count'</STRING> <KEYWORD>do</KEYWORD>
      post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
                 <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                            <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the test_new issue'</STRING>,
                            <VALUE>:description</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the description'</STRING>,
                            <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>5</NUMERIC>}
    <KEYWORD>end</KEYWORD>
    assert_redirected_to <VALUE>:controller</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issues'</STRING>, <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>last</OO>.<OO>id</OO>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_post_create_with_required_custom_field_and_without_custom_fields_param
    field <OPERATOR>=</OPERATOR> <CONSTANT>IssueCustomField</CONSTANT>.<OO>find_by_name</OO>(<STRING>'Database'</STRING>)
    <OBJ>field</OBJ>.<OO>update_attribute</OO>(<VALUE>:is_required</VALUE>, <KEYWORD>true</KEYWORD>)

    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
               <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                          <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the test_new issue'</STRING>,
                          <VALUE>:description</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the description'</STRING>,
                          <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>5</NUMERIC>}
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'new'</STRING>
    issue <OPERATOR>=</OPERATOR> assigns(<VALUE>:issue</VALUE>)
    assert_not_nil issue
    assert_equal <CONSTANT>I18n</CONSTANT>.<OO>translate</OO>(<STRING>'activerecord.errors.messages.invalid'</STRING>), <OBJ>issue</OBJ>.<OO>errors</OO>.<OO>on</OO>(<VALUE>:custom_values</VALUE>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_post_create_with_watchers
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>clear</OO>
    
    assert_difference <STRING>'Watcher.count'</STRING>, <NUMERIC>2</NUMERIC> <KEYWORD>do</KEYWORD>
      post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
                 <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                            <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is a new issue with watchers'</STRING>,
                            <VALUE>:description</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the description'</STRING>,
                            <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>5</NUMERIC>,
                            <VALUE>:watcher_user_ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<STRING>'2'</STRING>, <STRING>'3'</STRING>]}
    <KEYWORD>end</KEYWORD>
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find_by_subject</OO>(<STRING>'This is a new issue with watchers'</STRING>)
    assert_not_nil issue
    assert_redirected_to <VALUE>:controller</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issues'</STRING>, <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> issue
    
    <COMMENT># Watchers added</COMMENT>
    assert_equal [<NUMERIC>2</NUMERIC>, <NUMERIC>3</NUMERIC>], <OBJ>issue</OBJ>.<OO>watcher_user_ids</OO>.<OO>sort</OO>
    assert <OBJ>issue</OBJ>.<OO>watched_by?</OO>(<CONSTANT>User</CONSTANT>.<OO>find</OO>(<NUMERIC>3</NUMERIC>))
    <COMMENT># Watchers notified</COMMENT>
    mail <OPERATOR>=</OPERATOR> <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>last</OO>
    assert_kind_of <CONSTANT>TMail</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Mail</CONSTANT>, mail
    assert [<OBJ>mail</OBJ>.<OO>bcc</OO>, <OBJ>mail</OBJ>.<OO>cc</OO>].<OO>flatten</OO>.<OO>include?</OO>(<CONSTANT>User</CONSTANT>.<OO>find</OO>(<NUMERIC>3</NUMERIC>).<OO>mail</OO>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_post_create_subissue
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    
    assert_difference <STRING>'Issue.count'</STRING> <KEYWORD>do</KEYWORD>
      post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
                 <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                            <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is a child issue'</STRING>,
                            <VALUE>:parent_issue_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>}
    <KEYWORD>end</KEYWORD>
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find_by_subject</OO>(<STRING>'This is a child issue'</STRING>)
    assert_not_nil issue
    assert_equal <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>2</NUMERIC>), <OBJ>issue</OBJ>.<OO>parent</OO>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_post_create_subissue_with_non_numeric_parent_id
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    
    assert_difference <STRING>'Issue.count'</STRING> <KEYWORD>do</KEYWORD>
      post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
                 <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                            <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is a child issue'</STRING>,
                            <VALUE>:parent_issue_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'ABC'</STRING>}
    <KEYWORD>end</KEYWORD>
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find_by_subject</OO>(<STRING>'This is a child issue'</STRING>)
    assert_not_nil issue
    assert_nil <OBJ>issue</OBJ>.<OO>parent</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_post_create_should_send_a_notification
    <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>clear</OO>
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    assert_difference <STRING>'Issue.count'</STRING> <KEYWORD>do</KEYWORD>
      post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
                 <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC>,
                            <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the test_new issue'</STRING>,
                            <VALUE>:description</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the description'</STRING>,
                            <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>5</NUMERIC>,
                            <VALUE>:estimated_hours</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                            <VALUE>:custom_field_values</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'2'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>'Value for field 2'</STRING>}}
    <KEYWORD>end</KEYWORD>
    assert_redirected_to <VALUE>:controller</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issues'</STRING>, <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>last</OO>.<OO>id</OO>
    
    assert_equal <NUMERIC>1</NUMERIC>, <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>size</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_post_create_should_preserve_fields_values_on_validation_failure
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
               <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                          <COMMENT># empty subject</COMMENT>
                          <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                          <VALUE>:description</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is a description'</STRING>,
                          <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>6</NUMERIC>,
                          <VALUE>:custom_field_values</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'1'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>'Oracle'</STRING>, <STRING>'2'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>'Value for field 2'</STRING>}}
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'new'</STRING>
    
    assert_tag <VALUE>:textarea</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issue[description]'</STRING> },
                          <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is a description'</STRING>
    assert_tag <VALUE>:select</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issue[priority_id]'</STRING> },
                        <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'option'</STRING>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:selected</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'selected'</STRING>,
                                                                       <VALUE>:value</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'6'</STRING> },
                                                      <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'High'</STRING> }  
    <COMMENT># Custom fields</COMMENT>
    assert_tag <VALUE>:select</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issue[custom_field_values][1]'</STRING> },
                        <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'option'</STRING>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:selected</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'selected'</STRING>,
                                                                       <VALUE>:value</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Oracle'</STRING> },
                                                      <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Oracle'</STRING> }  
    assert_tag <VALUE>:input</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issue[custom_field_values][2]'</STRING>,
                                        <VALUE>:value</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Value for field 2'</STRING>}
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_post_create_should_ignore_non_safe_attributes
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    assert_nothing_raised <KEYWORD>do</KEYWORD>
      post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tracker</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>"A param can not be a Tracker"</STRING> }
    <KEYWORD>end</KEYWORD>
  <KEYWORD>end</KEYWORD>
  
  context <STRING>"without workflow privilege"</STRING> <KEYWORD>do</KEYWORD>
    setup <KEYWORD>do</KEYWORD>
      <CONSTANT>Workflow</CONSTANT>.<OO>delete_all</OO>([<STRING>"role_id = ?"</STRING>, <CONSTANT>Role</CONSTANT>.<OO>anonymous</OO>.<OO>id</OO>])
      <CONSTANT>Role</CONSTANT>.<OO>anonymous</OO>.<OO>add_permission!</OO> <VALUE>:add_issues</VALUE>, <VALUE>:add_issue_notes</VALUE>
    <KEYWORD>end</KEYWORD>
    
    context <STRING>"#new"</STRING> <KEYWORD>do</KEYWORD>
      should <STRING>"propose default status only"</STRING> <KEYWORD>do</KEYWORD>
        get <VALUE>:new</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
        assert_response <VALUE>:success</VALUE>
        assert_template <STRING>'new'</STRING>
        assert_tag <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'select'</STRING>,
          <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issue[status_id]'</STRING>},
          <VALUE>:children</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:count</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>},
          <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'option'</STRING>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:value</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>IssueStatus</CONSTANT>.<OO>default</OO>.<OO>id</OO>.<OO>to_s</OO>}}
      <KEYWORD>end</KEYWORD>
      
      should <STRING>"accept default status"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Issue.count'</STRING> <KEYWORD>do</KEYWORD>
          post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
                     <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                                <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is an issue'</STRING>,
                                <VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>}
        <KEYWORD>end</KEYWORD>
        issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>last</OO>(<VALUE>:order</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'id'</STRING>)
        assert_equal <CONSTANT>IssueStatus</CONSTANT>.<OO>default</OO>, <OBJ>issue</OBJ>.<OO>status</OO>
      <KEYWORD>end</KEYWORD>
      
      should <STRING>"accept default status"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Issue.count'</STRING> <KEYWORD>do</KEYWORD>
          post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
                     <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                                <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is an issue'</STRING>,
                                <VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>}
        <KEYWORD>end</KEYWORD>
        issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>last</OO>(<VALUE>:order</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'id'</STRING>)
        assert_equal <CONSTANT>IssueStatus</CONSTANT>.<OO>default</OO>, <OBJ>issue</OBJ>.<OO>status</OO>
      <KEYWORD>end</KEYWORD>
      
      should <STRING>"ignore unauthorized status"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Issue.count'</STRING> <KEYWORD>do</KEYWORD>
          post <VALUE>:create</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, 
                     <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                                <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is an issue'</STRING>,
                                <VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC>}
        <KEYWORD>end</KEYWORD>
        issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>last</OO>(<VALUE>:order</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'id'</STRING>)
        assert_equal <CONSTANT>IssueStatus</CONSTANT>.<OO>default</OO>, <OBJ>issue</OBJ>.<OO>status</OO>
      <KEYWORD>end</KEYWORD>
    <KEYWORD>end</KEYWORD>
    
    context <STRING>"#update"</STRING> <KEYWORD>do</KEYWORD>
      should <STRING>"ignore status change"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Journal.count'</STRING> <KEYWORD>do</KEYWORD>
          put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'just trying'</STRING>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC>}
        <KEYWORD>end</KEYWORD>
        assert_equal <NUMERIC>1</NUMERIC>, <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>status_id</OO>
      <KEYWORD>end</KEYWORD>
      
      should <STRING>"ignore attributes changes"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Journal.count'</STRING> <KEYWORD>do</KEYWORD>
          put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'just trying'</STRING>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'changed'</STRING>, <VALUE>:assigned_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>}
        <KEYWORD>end</KEYWORD>
        issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
        assert_equal <STRING>"Can't print recipes"</STRING>, <OBJ>issue</OBJ>.<OO>subject</OO>
        assert_nil <OBJ>issue</OBJ>.<OO>assigned_to</OO>
      <KEYWORD>end</KEYWORD>
    <KEYWORD>end</KEYWORD>
  <KEYWORD>end</KEYWORD>
  
  context <STRING>"with workflow privilege"</STRING> <KEYWORD>do</KEYWORD>
    setup <KEYWORD>do</KEYWORD>
      <CONSTANT>Workflow</CONSTANT>.<OO>delete_all</OO>([<STRING>"role_id = ?"</STRING>, <CONSTANT>Role</CONSTANT>.<OO>anonymous</OO>.<OO>id</OO>])
      <CONSTANT>Workflow</CONSTANT>.<OO>create!</OO>(<VALUE>:role</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Role</CONSTANT>.<OO>anonymous</OO>, <VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:old_status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:new_status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC>)
      <CONSTANT>Workflow</CONSTANT>.<OO>create!</OO>(<VALUE>:role</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Role</CONSTANT>.<OO>anonymous</OO>, <VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:old_status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:new_status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>4</NUMERIC>)
      <CONSTANT>Role</CONSTANT>.<OO>anonymous</OO>.<OO>add_permission!</OO> <VALUE>:add_issues</VALUE>, <VALUE>:add_issue_notes</VALUE>
    <KEYWORD>end</KEYWORD>
    
    context <STRING>"#update"</STRING> <KEYWORD>do</KEYWORD>
      should <STRING>"accept authorized status"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Journal.count'</STRING> <KEYWORD>do</KEYWORD>
          put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'just trying'</STRING>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC>}
        <KEYWORD>end</KEYWORD>
        assert_equal <NUMERIC>3</NUMERIC>, <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>status_id</OO>
      <KEYWORD>end</KEYWORD>
      
      should <STRING>"ignore unauthorized status"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Journal.count'</STRING> <KEYWORD>do</KEYWORD>
          put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'just trying'</STRING>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>}
        <KEYWORD>end</KEYWORD>
        assert_equal <NUMERIC>1</NUMERIC>, <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>status_id</OO>
      <KEYWORD>end</KEYWORD>
      
      should <STRING>"accept authorized attributes changes"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Journal.count'</STRING> <KEYWORD>do</KEYWORD>
          put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'just trying'</STRING>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:assigned_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>}
        <KEYWORD>end</KEYWORD>
        issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
        assert_equal <NUMERIC>2</NUMERIC>, <OBJ>issue</OBJ>.<OO>assigned_to_id</OO>
      <KEYWORD>end</KEYWORD>
      
      should <STRING>"ignore unauthorized attributes changes"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Journal.count'</STRING> <KEYWORD>do</KEYWORD>
          put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'just trying'</STRING>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'changed'</STRING>}
        <KEYWORD>end</KEYWORD>
        issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
        assert_equal <STRING>"Can't print recipes"</STRING>, <OBJ>issue</OBJ>.<OO>subject</OO>
      <KEYWORD>end</KEYWORD>
    <KEYWORD>end</KEYWORD>
    
    context <STRING>"and :edit_issues permission"</STRING> <KEYWORD>do</KEYWORD>
      setup <KEYWORD>do</KEYWORD>
        <CONSTANT>Role</CONSTANT>.<OO>anonymous</OO>.<OO>add_permission!</OO> <VALUE>:add_issues</VALUE>, <VALUE>:edit_issues</VALUE>
      <KEYWORD>end</KEYWORD>

      should <STRING>"accept authorized status"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Journal.count'</STRING> <KEYWORD>do</KEYWORD>
          put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'just trying'</STRING>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC>}
        <KEYWORD>end</KEYWORD>
        assert_equal <NUMERIC>3</NUMERIC>, <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>status_id</OO>
      <KEYWORD>end</KEYWORD>
      
      should <STRING>"ignore unauthorized status"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Journal.count'</STRING> <KEYWORD>do</KEYWORD>
          put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'just trying'</STRING>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>}
        <KEYWORD>end</KEYWORD>
        assert_equal <NUMERIC>1</NUMERIC>, <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>status_id</OO>
      <KEYWORD>end</KEYWORD>
      
      should <STRING>"accept authorized attributes changes"</STRING> <KEYWORD>do</KEYWORD>
        assert_difference <STRING>'Journal.count'</STRING> <KEYWORD>do</KEYWORD>
          put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'just trying'</STRING>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'changed'</STRING>, <VALUE>:assigned_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>}
        <KEYWORD>end</KEYWORD>
        issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
        assert_equal <STRING>"changed"</STRING>, <OBJ>issue</OBJ>.<OO>subject</OO>
        assert_equal <NUMERIC>2</NUMERIC>, <OBJ>issue</OBJ>.<OO>assigned_to_id</OO>
      <KEYWORD>end</KEYWORD>
    <KEYWORD>end</KEYWORD>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_copy_issue
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    get <VALUE>:new</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:copy_from</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_template <STRING>'new'</STRING>
    assert_not_nil assigns(<VALUE>:issue</VALUE>)
    orig <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
    assert_equal <OBJ>orig</OBJ>.<OO>subject</OO>, assigns(<VALUE>:issue</VALUE>).<OO>subject</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_get_edit
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    get <VALUE>:edit</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'edit'</STRING>
    assert_not_nil assigns(<VALUE>:issue</VALUE>)
    assert_equal <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>), assigns(<VALUE>:issue</VALUE>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_get_edit_with_params
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    get <VALUE>:edit</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>5</NUMERIC>, <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>7</NUMERIC> },
        <VALUE>:time_entry</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:hours</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'2.5'</STRING>, <VALUE>:comments</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'test_get_edit_with_params'</STRING>, <VALUE>:activity_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>TimeEntryActivity</CONSTANT>.<OO>first</OO>.<OO>id</OO> }
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'edit'</STRING>
    
    issue <OPERATOR>=</OPERATOR> assigns(<VALUE>:issue</VALUE>)
    assert_not_nil issue
    
    assert_equal <NUMERIC>5</NUMERIC>, <OBJ>issue</OBJ>.<OO>status_id</OO>
    assert_tag <VALUE>:select</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issue[status_id]'</STRING> },
                        <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'option'</STRING>, 
                                    <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Closed'</STRING>,
                                    <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:selected</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'selected'</STRING> } }
                                    
    assert_equal <NUMERIC>7</NUMERIC>, <OBJ>issue</OBJ>.<OO>priority_id</OO>
    assert_tag <VALUE>:select</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issue[priority_id]'</STRING> },
                        <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'option'</STRING>, 
                                    <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Urgent'</STRING>,
                                    <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:selected</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'selected'</STRING> } }

    assert_tag <VALUE>:input</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'time_entry[hours]'</STRING>, <VALUE>:value</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'2.5'</STRING> }
    assert_tag <VALUE>:select</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'time_entry[activity_id]'</STRING> },
                        <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'option'</STRING>,
                                    <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:selected</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'selected'</STRING>, <VALUE>:value</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>TimeEntryActivity</CONSTANT>.<OO>first</OO>.<OO>id</OO> } }
    assert_tag <VALUE>:input</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'time_entry[comments]'</STRING>, <VALUE>:value</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'test_get_edit_with_params'</STRING> }
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_update_edit_form
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    xhr <VALUE>:post</VALUE>, <VALUE>:new</VALUE>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                             <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
                             <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tracker_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>, 
                                        <VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the test_new issue'</STRING>,
                                        <VALUE>:description</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'This is the description'</STRING>,
                                        <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>5</NUMERIC>}
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'attributes'</STRING>
    
    issue <OPERATOR>=</OPERATOR> assigns(<VALUE>:issue</VALUE>)
    assert_kind_of <CONSTANT>Issue</CONSTANT>, issue
    assert_equal <NUMERIC>1</NUMERIC>, <OBJ>issue</OBJ>.<OO>id</OO>
    assert_equal <NUMERIC>1</NUMERIC>, <OBJ>issue</OBJ>.<OO>project_id</OO>
    assert_equal <NUMERIC>2</NUMERIC>, <OBJ>issue</OBJ>.<OO>tracker_id</OO>
    assert_equal <STRING>'This is the test_new issue'</STRING>, <OBJ>issue</OBJ>.<OO>subject</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_update_using_invalid_http_verbs
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    subject <OPERATOR>=</OPERATOR> <STRING>'Updated by an invalid http verb'</STRING>

    get <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> subject}
    assert_not_equal subject, <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>subject</OO>

    post <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> subject}
    assert_not_equal subject, <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>subject</OO>

    delete <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> subject}
    assert_not_equal subject, <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>subject</OO>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_put_update_without_custom_fields_param
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>clear</OO>
    
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
    assert_equal <STRING>'125'</STRING>, <OBJ>issue</OBJ>.<OO>custom_value_for</OO>(<NUMERIC>2</NUMERIC>).<OO>value</OO>
    old_subject <OPERATOR>=</OPERATOR> <OBJ>issue</OBJ>.<OO>subject</OO>
    new_subject <OPERATOR>=</OPERATOR> <STRING>'Subject modified by IssuesControllerTest#test_post_edit'</STRING>
    
    assert_difference(<STRING>'Journal.count'</STRING>) <KEYWORD>do</KEYWORD>
      assert_difference(<STRING>'JournalDetail.count'</STRING>, <NUMERIC>2</NUMERIC>) <KEYWORD>do</KEYWORD>
        put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> new_subject,
                                         <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'6'</STRING>,
                                         <VALUE>:category_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING> <COMMENT># no change</COMMENT>
                                        }
      <KEYWORD>end</KEYWORD>
    <KEYWORD>end</KEYWORD>
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING>
    <OBJ>issue</OBJ>.<OO>reload</OO>
    assert_equal new_subject, <OBJ>issue</OBJ>.<OO>subject</OO>
    <COMMENT># Make sure custom fields were not cleared</COMMENT>
    assert_equal <STRING>'125'</STRING>, <OBJ>issue</OBJ>.<OO>custom_value_for</OO>(<NUMERIC>2</NUMERIC>).<OO>value</OO>
    
    mail <OPERATOR>=</OPERATOR> <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>last</OO>
    assert_kind_of <CONSTANT>TMail</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Mail</CONSTANT>, mail
    assert <OBJ>mail</OBJ>.<OO>subject</OO>.<OO>starts_with?</OO>(<STRING>"[</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><OBJ>issue</OBJ>.<OO>project</OO>.<OO>name</OO></INTERPOLATION><DELIMITER>}</DELIMITER><STRING> - </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><OBJ>issue</OBJ>.<OO>tracker</OO>.<OO>name</OO></INTERPOLATION><DELIMITER>}</DELIMITER><STRING> #</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION><OBJ>issue</OBJ>.<OO>id</OO></INTERPOLATION><DELIMITER>}</DELIMITER><STRING>]"</STRING>)
    assert <OBJ>mail</OBJ>.<OO>body</OO>.<OO>include?</OO>(<STRING>"Subject changed from </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>old_subject</INTERPOLATION><DELIMITER>}</DELIMITER><STRING> to </STRING><DELIMITER>#{</DELIMITER><INTERPOLATION>new_subject</INTERPOLATION><DELIMITER>}</DELIMITER><STRING>"</STRING>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_put_update_with_custom_field_change
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
    assert_equal <STRING>'125'</STRING>, <OBJ>issue</OBJ>.<OO>custom_value_for</OO>(<NUMERIC>2</NUMERIC>).<OO>value</OO>
    
    assert_difference(<STRING>'Journal.count'</STRING>) <KEYWORD>do</KEYWORD>
      assert_difference(<STRING>'JournalDetail.count'</STRING>, <NUMERIC>3</NUMERIC>) <KEYWORD>do</KEYWORD>
        put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Custom field change'</STRING>,
                                         <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'6'</STRING>,
                                         <VALUE>:category_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING>, <COMMENT># no change</COMMENT>
                                         <VALUE>:custom_field_values</VALUE> <OPERATOR>=&gt;</OPERATOR> { <STRING>'2'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>'New custom value'</STRING> }
                                        }
      <KEYWORD>end</KEYWORD>
    <KEYWORD>end</KEYWORD>
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING>
    <OBJ>issue</OBJ>.<OO>reload</OO>
    assert_equal <STRING>'New custom value'</STRING>, <OBJ>issue</OBJ>.<OO>custom_value_for</OO>(<NUMERIC>2</NUMERIC>).<OO>value</OO>
    
    mail <OPERATOR>=</OPERATOR> <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>last</OO>
    assert_kind_of <CONSTANT>TMail</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Mail</CONSTANT>, mail
    assert <OBJ>mail</OBJ>.<OO>body</OO>.<OO>include?</OO>(<STRING>"Searchable field changed from 125 to New custom value"</STRING>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_put_update_with_status_and_assignee_change
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
    assert_equal <NUMERIC>1</NUMERIC>, <OBJ>issue</OBJ>.<OO>status_id</OO>
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    assert_difference(<STRING>'TimeEntry.count'</STRING>, <NUMERIC>0</NUMERIC>) <KEYWORD>do</KEYWORD>
      put <VALUE>:update</VALUE>,
           <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
           <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>, <VALUE>:assigned_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>3</NUMERIC> },
           <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Assigned to dlopper'</STRING>,
           <VALUE>:time_entry</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:hours</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>, <VALUE>:comments</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>, <VALUE>:activity_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>TimeEntryActivity</CONSTANT>.<OO>first</OO> }
    <KEYWORD>end</KEYWORD>
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING>
    <OBJ>issue</OBJ>.<OO>reload</OO>
    assert_equal <NUMERIC>2</NUMERIC>, <OBJ>issue</OBJ>.<OO>status_id</OO>
    j <OPERATOR>=</OPERATOR> <CONSTANT>Journal</CONSTANT>.<OO>find</OO>(<VALUE>:first</VALUE>, <VALUE>:order</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'id DESC'</STRING>)
    assert_equal <STRING>'Assigned to dlopper'</STRING>, <OBJ>j</OBJ>.<OO>notes</OO>
    assert_equal <NUMERIC>2</NUMERIC>, <OBJ>j</OBJ>.<OO>details</OO>.<OO>size</OO>
    
    mail <OPERATOR>=</OPERATOR> <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>last</OO>
    assert <OBJ>mail</OBJ>.<OO>body</OO>.<OO>include?</OO>(<STRING>"Status changed from New to Assigned"</STRING>)
    <COMMENT># subject should contain the new status</COMMENT>
    assert <OBJ>mail</OBJ>.<OO>subject</OO>.<OO>include?</OO>(<STRING>"(</STRING><DELIMITER>#{</DELIMITER><INTERPOLATION> <CONSTANT>IssueStatus</CONSTANT>.<OO>find</OO>(<NUMERIC>2</NUMERIC>).<OO>name</OO> </INTERPOLATION><DELIMITER>}</DELIMITER><STRING>)"</STRING>)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_put_update_with_note_only
    notes <OPERATOR>=</OPERATOR> <STRING>'Note added by IssuesControllerTest#test_update_with_note_only'</STRING>
    <COMMENT># anonymous user</COMMENT>
    put <VALUE>:update</VALUE>,
         <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
         <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> notes
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING>
    j <OPERATOR>=</OPERATOR> <CONSTANT>Journal</CONSTANT>.<OO>find</OO>(<VALUE>:first</VALUE>, <VALUE>:order</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'id DESC'</STRING>)
    assert_equal notes, <OBJ>j</OBJ>.<OO>notes</OO>
    assert_equal <NUMERIC>0</NUMERIC>, <OBJ>j</OBJ>.<OO>details</OO>.<OO>size</OO>
    assert_equal <CONSTANT>User</CONSTANT>.<OO>anonymous</OO>, <OBJ>j</OBJ>.<OO>user</OO>
    
    mail <OPERATOR>=</OPERATOR> <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>last</OO>
    assert <OBJ>mail</OBJ>.<OO>body</OO>.<OO>include?</OO>(notes)
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_put_update_with_note_and_spent_time
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    spent_hours_before <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>spent_hours</OO>
    assert_difference(<STRING>'TimeEntry.count'</STRING>) <KEYWORD>do</KEYWORD>
      put <VALUE>:update</VALUE>,
           <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
           <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'2.5 hours added'</STRING>,
           <VALUE>:time_entry</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:hours</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'2.5'</STRING>, <VALUE>:comments</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'test_put_update_with_note_and_spent_time'</STRING>, <VALUE>:activity_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>TimeEntryActivity</CONSTANT>.<OO>first</OO>.<OO>id</OO> }
    <KEYWORD>end</KEYWORD>
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING>
    
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
    
    j <OPERATOR>=</OPERATOR> <CONSTANT>Journal</CONSTANT>.<OO>find</OO>(<VALUE>:first</VALUE>, <VALUE>:order</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'id DESC'</STRING>)
    assert_equal <STRING>'2.5 hours added'</STRING>, <OBJ>j</OBJ>.<OO>notes</OO>
    assert_equal <NUMERIC>0</NUMERIC>, <OBJ>j</OBJ>.<OO>details</OO>.<OO>size</OO>
    
    t <OPERATOR>=</OPERATOR> <OBJ>issue</OBJ>.<OO>time_entries</OO>.<OO>find_by_comments</OO>(<STRING>'test_put_update_with_note_and_spent_time'</STRING>)
    assert_not_nil t
    assert_equal <NUMERIC>2.5</NUMERIC>, <OBJ>t</OBJ>.<OO>hours</OO>
    assert_equal spent_hours_before <OPERATOR>+</OPERATOR> <NUMERIC>2.5</NUMERIC>, <OBJ>issue</OBJ>.<OO>spent_hours</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_put_update_with_attachment_only
    set_tmp_attachments_directory
    
    <COMMENT># Delete all fixtured journals, a race condition can occur causing the wrong</COMMENT>
    <COMMENT># journal to get fetched in the next find.</COMMENT>
    <CONSTANT>Journal</CONSTANT>.<OO>delete_all</OO>

    <COMMENT># anonymous user</COMMENT>
    put <VALUE>:update</VALUE>,
         <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
         <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
         <VALUE>:attachments</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'1'</STRING> <OPERATOR>=&gt;</OPERATOR> {<STRING>'file'</STRING> <OPERATOR>=&gt;</OPERATOR> uploaded_test_file(<STRING>'testfile.txt'</STRING>, <STRING>'text/plain'</STRING>)}}
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING>
    j <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>journals</OO>.<OO>find</OO>(<VALUE>:first</VALUE>, <VALUE>:order</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'id DESC'</STRING>)
    assert <OBJ>j</OBJ>.<OO>notes</OO>.<OO>blank?</OO>
    assert_equal <NUMERIC>1</NUMERIC>, <OBJ>j</OBJ>.<OO>details</OO>.<OO>size</OO>
    assert_equal <STRING>'testfile.txt'</STRING>, <OBJ>j</OBJ>.<OO>details</OO>.<OO>first</OO>.<OO>value</OO>
    assert_equal <CONSTANT>User</CONSTANT>.<OO>anonymous</OO>, <OBJ>j</OBJ>.<OO>user</OO>
    
    mail <OPERATOR>=</OPERATOR> <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>last</OO>
    assert <OBJ>mail</OBJ>.<OO>body</OO>.<OO>include?</OO>(<STRING>'testfile.txt'</STRING>)
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_put_update_with_attachment_that_fails_to_save
    set_tmp_attachments_directory
    
    <COMMENT># Delete all fixtured journals, a race condition can occur causing the wrong</COMMENT>
    <COMMENT># journal to get fetched in the next find.</COMMENT>
    <CONSTANT>Journal</CONSTANT>.<OO>delete_all</OO>

    <COMMENT># Mock out the unsaved attachment</COMMENT>
    <CONSTANT>Attachment</CONSTANT>.<OO>any_instance</OO>.<OO>stubs</OO>(<VALUE>:create</VALUE>).<OO>returns</OO>(<CONSTANT>Attachment</CONSTANT>.<OO>new</OO>)
    
    <COMMENT># anonymous user</COMMENT>
    put <VALUE>:update</VALUE>,
         <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
         <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
         <VALUE>:attachments</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'1'</STRING> <OPERATOR>=&gt;</OPERATOR> {<STRING>'file'</STRING> <OPERATOR>=&gt;</OPERATOR> uploaded_test_file(<STRING>'testfile.txt'</STRING>, <STRING>'text/plain'</STRING>)}}
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING>
    assert_equal <STRING>'1 file(s) could not be saved.'</STRING>, flash[<VALUE>:warning</VALUE>]

  <KEYWORD>end</KEYWORD> <KEYWORD>if</KEYWORD> <CONSTANT>Object</CONSTANT>.<OO>const_defined?</OO>(<VALUE>:Mocha</VALUE>)

  <KEYWORD>def</KEYWORD> test_put_update_with_no_change
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
    <OBJ>issue</OBJ>.<OO>journals</OO>.<OO>clear</OO>
    <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>clear</OO>
    
    put <VALUE>:update</VALUE>,
         <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
         <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING>
    
    <OBJ>issue</OBJ>.<OO>reload</OO>
    assert <OBJ>issue</OBJ>.<OO>journals</OO>.<OO>empty?</OO>
    <COMMENT># No email should be sent</COMMENT>
    assert <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>empty?</OO>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_put_update_should_send_a_notification
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>clear</OO>
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
    old_subject <OPERATOR>=</OPERATOR> <OBJ>issue</OBJ>.<OO>subject</OO>
    new_subject <OPERATOR>=</OPERATOR> <STRING>'Subject modified by IssuesControllerTest#test_post_edit'</STRING>
    
    put <VALUE>:update</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:subject</VALUE> <OPERATOR>=&gt;</OPERATOR> new_subject,
                                     <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'6'</STRING>,
                                     <VALUE>:category_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING> <COMMENT># no change</COMMENT>
                                    }
    assert_equal <NUMERIC>1</NUMERIC>, <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>size</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_put_update_with_invalid_spent_time
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    notes <OPERATOR>=</OPERATOR> <STRING>'Note added by IssuesControllerTest#test_post_edit_with_invalid_spent_time'</STRING>
    
    assert_no_difference(<STRING>'Journal.count'</STRING>) <KEYWORD>do</KEYWORD>
      put <VALUE>:update</VALUE>,
           <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>1</NUMERIC>,
           <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> notes,
           <VALUE>:time_entry</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>"comments"</STRING><OPERATOR>=&gt;</OPERATOR><STRING>""</STRING>, <STRING>"activity_id"</STRING><OPERATOR>=&gt;</OPERATOR><STRING>""</STRING>, <STRING>"hours"</STRING><OPERATOR>=&gt;</OPERATOR><STRING>"2z"</STRING>}
    <KEYWORD>end</KEYWORD>
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'edit'</STRING>
    
    assert_tag <VALUE>:textarea</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'notes'</STRING> },
                          <VALUE>:content</VALUE> <OPERATOR>=&gt;</OPERATOR> notes
    assert_tag <VALUE>:input</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> { <VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'time_entry[hours]'</STRING>, <VALUE>:value</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>"2z"</STRING> }
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_put_update_should_allow_fixed_version_to_be_set_to_a_subproject
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>2</NUMERIC>)
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>

    put <VALUE>:update</VALUE>,
         <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <OBJ>issue</OBJ>.<OO>id</OO>,
         <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {
           <VALUE>:fixed_version_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>4</NUMERIC>
         }

    assert_response <VALUE>:redirect</VALUE>
    <OBJ>issue</OBJ>.<OO>reload</OO>
    assert_equal <NUMERIC>4</NUMERIC>, <OBJ>issue</OBJ>.<OO>fixed_version_id</OO>
    assert_not_equal <OBJ>issue</OBJ>.<OO>project_id</OO>, <OBJ>issue</OBJ>.<OO>fixed_version</OO>.<OO>project_id</OO>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_put_update_should_redirect_back_using_the_back_url_parameter
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>2</NUMERIC>)
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>

    put <VALUE>:update</VALUE>,
         <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <OBJ>issue</OBJ>.<OO>id</OO>,
         <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {
           <VALUE>:fixed_version_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>4</NUMERIC>
         },
         <VALUE>:back_url</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'/issues'</STRING>

    assert_response <VALUE>:redirect</VALUE>
    assert_redirected_to <STRING>'/issues'</STRING>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_put_update_should_not_redirect_back_using_the_back_url_parameter_off_the_host
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>2</NUMERIC>)
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>

    put <VALUE>:update</VALUE>,
         <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <OBJ>issue</OBJ>.<OO>id</OO>,
         <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {
           <VALUE>:fixed_version_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>4</NUMERIC>
         },
         <VALUE>:back_url</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'http://google.com'</STRING>

    assert_response <VALUE>:redirect</VALUE>
    assert_redirected_to <VALUE>:controller</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issues'</STRING>, <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'show'</STRING>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <OBJ>issue</OBJ>.<OO>id</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_get_bulk_edit
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    get <VALUE>:bulk_edit</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>2</NUMERIC>]
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'bulk_edit'</STRING>
    
    <COMMENT># Project specific custom field, date type</COMMENT>
    field <OPERATOR>=</OPERATOR> <CONSTANT>CustomField</CONSTANT>.<OO>find</OO>(<NUMERIC>9</NUMERIC>)
    assert <OPERATOR>!</OPERATOR><OBJ>field</OBJ>.<OO>is_for_all?</OO>
    assert_equal <STRING>'date'</STRING>, <OBJ>field</OBJ>.<OO>field_format</OO>
    assert_tag <VALUE>:input</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issue[custom_field_values][9]'</STRING>}
    
    <COMMENT># System wide custom field</COMMENT>
    assert <CONSTANT>CustomField</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>is_for_all?</OO>
    assert_tag <VALUE>:select</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issue[custom_field_values][1]'</STRING>}
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_get_bulk_edit_on_different_projects
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    get <VALUE>:bulk_edit</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>2</NUMERIC>, <NUMERIC>6</NUMERIC>]
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'bulk_edit'</STRING>
    
    <COMMENT># Project specific custom field, date type</COMMENT>
    field <OPERATOR>=</OPERATOR> <CONSTANT>CustomField</CONSTANT>.<OO>find</OO>(<NUMERIC>9</NUMERIC>)
    assert <OPERATOR>!</OPERATOR><OBJ>field</OBJ>.<OO>is_for_all?</OO>
    assert <OPERATOR>!</OPERATOR><OBJ>field</OBJ>.<OO>project_ids</OO>.<OO>include?</OO>(<CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>6</NUMERIC>).<OO>project_id</OO>)
    assert_no_tag <VALUE>:input</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issue[custom_field_values][9]'</STRING>}
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_bulk_update
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <COMMENT># update issues priority</COMMENT>
    post <VALUE>:bulk_update</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>2</NUMERIC>], <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Bulk editing'</STRING>,
                                     <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>7</NUMERIC>,
                                                <VALUE>:assigned_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                                                <VALUE>:custom_field_values</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'2'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>}}
                                     
    assert_response <NUMERIC>302</NUMERIC>
    <COMMENT># check that the issues were updated</COMMENT>
    assert_equal [<NUMERIC>7</NUMERIC>, <NUMERIC>7</NUMERIC>], <CONSTANT>Issue</CONSTANT>.<OO>find_all_by_id</OO>([<NUMERIC>1</NUMERIC>, <NUMERIC>2</NUMERIC>]).<OO>collect</OO> {<OPERATOR>|</OPERATOR>i<OPERATOR>|</OPERATOR> <OBJ>i</OBJ>.<OO>priority</OO>.<OO>id</OO>}
    
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
    journal <OPERATOR>=</OPERATOR> <OBJ>issue</OBJ>.<OO>journals</OO>.<OO>find</OO>(<VALUE>:first</VALUE>, <VALUE>:order</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'created_on DESC'</STRING>)
    assert_equal <STRING>'125'</STRING>, <OBJ>issue</OBJ>.<OO>custom_value_for</OO>(<NUMERIC>2</NUMERIC>).<OO>value</OO>
    assert_equal <STRING>'Bulk editing'</STRING>, <OBJ>journal</OBJ>.<OO>notes</OO>
    assert_equal <NUMERIC>1</NUMERIC>, <OBJ>journal</OBJ>.<OO>details</OO>.<OO>size</OO>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_bulk_update_on_different_projects
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <COMMENT># update issues priority</COMMENT>
    post <VALUE>:bulk_update</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>2</NUMERIC>, <NUMERIC>6</NUMERIC>], <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Bulk editing'</STRING>,
                                     <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>7</NUMERIC>,
                                                <VALUE>:assigned_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                                                <VALUE>:custom_field_values</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'2'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>}}
    
    assert_response <NUMERIC>302</NUMERIC>
    <COMMENT># check that the issues were updated</COMMENT>
    assert_equal [<NUMERIC>7</NUMERIC>, <NUMERIC>7</NUMERIC>, <NUMERIC>7</NUMERIC>], <CONSTANT>Issue</CONSTANT>.<OO>find</OO>([<NUMERIC>1</NUMERIC>,<NUMERIC>2</NUMERIC>,<NUMERIC>6</NUMERIC>]).<OO>map</OO>(<OPERATOR>&amp;</OPERATOR><VALUE>:priority_id</VALUE>)
    
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
    journal <OPERATOR>=</OPERATOR> <OBJ>issue</OBJ>.<OO>journals</OO>.<OO>find</OO>(<VALUE>:first</VALUE>, <VALUE>:order</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'created_on DESC'</STRING>)
    assert_equal <STRING>'125'</STRING>, <OBJ>issue</OBJ>.<OO>custom_value_for</OO>(<NUMERIC>2</NUMERIC>).<OO>value</OO>
    assert_equal <STRING>'Bulk editing'</STRING>, <OBJ>journal</OBJ>.<OO>notes</OO>
    assert_equal <NUMERIC>1</NUMERIC>, <OBJ>journal</OBJ>.<OO>details</OO>.<OO>size</OO>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_bulk_update_on_different_projects_without_rights
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>3</NUMERIC>
    user <OPERATOR>=</OPERATOR> <CONSTANT>User</CONSTANT>.<OO>find</OO>(<NUMERIC>3</NUMERIC>)
    action <OPERATOR>=</OPERATOR> { <VALUE>:controller</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>"issues"</STRING>, <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>"bulk_update"</STRING> }
    assert <OBJ>user</OBJ>.<OO>allowed_to?</OO>(action, <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>project</OO>)
    assert <OPERATOR>!</OPERATOR> <OBJ>user</OBJ>.<OO>allowed_to?</OO>(action, <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>6</NUMERIC>).<OO>project</OO>)
    post <VALUE>:bulk_update</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>6</NUMERIC>], <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Bulk should fail'</STRING>,
                                     <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>7</NUMERIC>,
                                                <VALUE>:assigned_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                                                <VALUE>:custom_field_values</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'2'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>}}
    assert_response <NUMERIC>403</NUMERIC>
    assert_not_equal <STRING>"Bulk should fail"</STRING>, <CONSTANT>Journal</CONSTANT>.<OO>last</OO>.<OO>notes</OO>
  <KEYWORD>end</KEYWORD>
    
  <KEYWORD>def</KEYWORD> test_bullk_update_should_send_a_notification
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>clear</OO>
    post(<VALUE>:bulk_update</VALUE>,
         {
           <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>2</NUMERIC>],
           <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Bulk editing'</STRING>,
           <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {
             <VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>7</NUMERIC>,
             <VALUE>:assigned_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
             <VALUE>:custom_field_values</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'2'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>}
           }
         })

    assert_response <NUMERIC>302</NUMERIC>
    assert_equal <NUMERIC>2</NUMERIC>, <CONSTANT>ActionMailer</CONSTANT><OPERATOR>::</OPERATOR><CONSTANT>Base</CONSTANT>.<OO>deliveries</OO>.<OO>size</OO>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_bulk_update_status
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <COMMENT># update issues priority</COMMENT>
    post <VALUE>:bulk_update</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>2</NUMERIC>], <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Bulk editing status'</STRING>,
                                     <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                                                <VALUE>:assigned_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                                                <VALUE>:status_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'5'</STRING>}
                                     
    assert_response <NUMERIC>302</NUMERIC>
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
    assert <OBJ>issue</OBJ>.<OO>closed?</OO>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_bulk_update_custom_field
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <COMMENT># update issues priority</COMMENT>
    post <VALUE>:bulk_update</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>2</NUMERIC>], <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Bulk editing custom field'</STRING>,
                                     <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:priority_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                                                <VALUE>:assigned_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>''</STRING>,
                                                <VALUE>:custom_field_values</VALUE> <OPERATOR>=&gt;</OPERATOR> {<STRING>'2'</STRING> <OPERATOR>=&gt;</OPERATOR> <STRING>'777'</STRING>}}
                                     
    assert_response <NUMERIC>302</NUMERIC>
    
    issue <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>)
    journal <OPERATOR>=</OPERATOR> <OBJ>issue</OBJ>.<OO>journals</OO>.<OO>find</OO>(<VALUE>:first</VALUE>, <VALUE>:order</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'created_on DESC'</STRING>)
    assert_equal <STRING>'777'</STRING>, <OBJ>issue</OBJ>.<OO>custom_value_for</OO>(<NUMERIC>2</NUMERIC>).<OO>value</OO>
    assert_equal <NUMERIC>1</NUMERIC>, <OBJ>journal</OBJ>.<OO>details</OO>.<OO>size</OO>
    assert_equal <STRING>'125'</STRING>, <OBJ>journal</OBJ>.<OO>details</OO>.<OO>first</OO>.<OO>old_value</OO>
    assert_equal <STRING>'777'</STRING>, <OBJ>journal</OBJ>.<OO>details</OO>.<OO>first</OO>.<OO>value</OO>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_bulk_update_unassign
    assert_not_nil <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>2</NUMERIC>).<OO>assigned_to</OO>
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    <COMMENT># unassign issues</COMMENT>
    post <VALUE>:bulk_update</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>2</NUMERIC>], <VALUE>:notes</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'Bulk unassigning'</STRING>, <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:assigned_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'none'</STRING>}
    assert_response <NUMERIC>302</NUMERIC>
    <COMMENT># check that the issues were updated</COMMENT>
    assert_nil <CONSTANT>Issue</CONSTANT>.<OO>find</OO>(<NUMERIC>2</NUMERIC>).<OO>assigned_to</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_post_bulk_update_should_allow_fixed_version_to_be_set_to_a_subproject
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>

    post <VALUE>:bulk_update</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>,<NUMERIC>2</NUMERIC>], <VALUE>:issue</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:fixed_version_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>4</NUMERIC>}

    assert_response <VALUE>:redirect</VALUE>
    issues <OPERATOR>=</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find</OO>([<NUMERIC>1</NUMERIC>,<NUMERIC>2</NUMERIC>])
    <OBJ>issues</OBJ>.<OO>each</OO> <KEYWORD>do</KEYWORD> <OPERATOR>|</OPERATOR>issue<OPERATOR>|</OPERATOR>
      assert_equal <NUMERIC>4</NUMERIC>, <OBJ>issue</OBJ>.<OO>fixed_version_id</OO>
      assert_not_equal <OBJ>issue</OBJ>.<OO>project_id</OO>, <OBJ>issue</OBJ>.<OO>fixed_version</OO>.<OO>project_id</OO>
    <KEYWORD>end</KEYWORD>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_post_bulk_update_should_redirect_back_using_the_back_url_parameter
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    post <VALUE>:bulk_update</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>,<NUMERIC>2</NUMERIC>], <VALUE>:back_url</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'/issues'</STRING>

    assert_response <VALUE>:redirect</VALUE>
    assert_redirected_to <STRING>'/issues'</STRING>
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_post_bulk_update_should_not_redirect_back_using_the_back_url_parameter_off_the_host
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    post <VALUE>:bulk_update</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>,<NUMERIC>2</NUMERIC>], <VALUE>:back_url</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'http://google.com'</STRING>

    assert_response <VALUE>:redirect</VALUE>
    assert_redirected_to <VALUE>:controller</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issues'</STRING>, <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'index'</STRING>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <CONSTANT>Project</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>identifier</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_destroy_issue_with_no_time_entries
    assert_nil <CONSTANT>TimeEntry</CONSTANT>.<OO>find_by_issue_id</OO>(<NUMERIC>2</NUMERIC>)
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    post <VALUE>:destroy</VALUE>, <VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'index'</STRING>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'ecookbook'</STRING>
    assert_nil <CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>2</NUMERIC>)
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_destroy_issues_with_time_entries
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    post <VALUE>:destroy</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>3</NUMERIC>]
    assert_response <VALUE>:success</VALUE>
    assert_template <STRING>'destroy'</STRING>
    assert_not_nil assigns(<VALUE>:hours</VALUE>)
    assert <CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>1</NUMERIC>) <OPERATOR>&amp;&amp;</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>3</NUMERIC>)
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_destroy_issues_and_destroy_time_entries
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    post <VALUE>:destroy</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>3</NUMERIC>], <VALUE>:todo</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'destroy'</STRING>
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'index'</STRING>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'ecookbook'</STRING>
    assert <OPERATOR>!</OPERATOR>(<CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>1</NUMERIC>) <OPERATOR>||</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>3</NUMERIC>))
    assert_nil <CONSTANT>TimeEntry</CONSTANT>.<OO>find_by_id</OO>([<NUMERIC>1</NUMERIC>, <NUMERIC>2</NUMERIC>])
  <KEYWORD>end</KEYWORD>

  <KEYWORD>def</KEYWORD> test_destroy_issues_and_assign_time_entries_to_project
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    post <VALUE>:destroy</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>3</NUMERIC>], <VALUE>:todo</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'nullify'</STRING>
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'index'</STRING>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'ecookbook'</STRING>
    assert <OPERATOR>!</OPERATOR>(<CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>1</NUMERIC>) <OPERATOR>||</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>3</NUMERIC>))
    assert_nil <CONSTANT>TimeEntry</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>issue_id</OO>
    assert_nil <CONSTANT>TimeEntry</CONSTANT>.<OO>find</OO>(<NUMERIC>2</NUMERIC>).<OO>issue_id</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_destroy_issues_and_reassign_time_entries_to_another_issue
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    post <VALUE>:destroy</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>3</NUMERIC>], <VALUE>:todo</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'reassign'</STRING>, <VALUE>:reassign_to_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <NUMERIC>2</NUMERIC>
    assert_redirected_to <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'index'</STRING>, <VALUE>:project_id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'ecookbook'</STRING>
    assert <OPERATOR>!</OPERATOR>(<CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>1</NUMERIC>) <OPERATOR>||</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>3</NUMERIC>))
    assert_equal <NUMERIC>2</NUMERIC>, <CONSTANT>TimeEntry</CONSTANT>.<OO>find</OO>(<NUMERIC>1</NUMERIC>).<OO>issue_id</OO>
    assert_equal <NUMERIC>2</NUMERIC>, <CONSTANT>TimeEntry</CONSTANT>.<OO>find</OO>(<NUMERIC>2</NUMERIC>).<OO>issue_id</OO>
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_destroy_issues_from_different_projects
    <VARIABLE>@request</VARIABLE>.<OO>session</OO>[<VALUE>:user_id</VALUE>] <OPERATOR>=</OPERATOR> <NUMERIC>2</NUMERIC>
    post <VALUE>:destroy</VALUE>, <VALUE>:ids</VALUE> <OPERATOR>=&gt;</OPERATOR> [<NUMERIC>1</NUMERIC>, <NUMERIC>2</NUMERIC>, <NUMERIC>6</NUMERIC>], <VALUE>:todo</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'destroy'</STRING>
    assert_redirected_to <VALUE>:controller</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issues'</STRING>, <VALUE>:action</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'index'</STRING>
    assert <OPERATOR>!</OPERATOR>(<CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>1</NUMERIC>) <OPERATOR>||</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>2</NUMERIC>) <OPERATOR>||</OPERATOR> <CONSTANT>Issue</CONSTANT>.<OO>find_by_id</OO>(<NUMERIC>6</NUMERIC>))
  <KEYWORD>end</KEYWORD>
  
  <KEYWORD>def</KEYWORD> test_default_search_scope
    get <VALUE>:index</VALUE>
    assert_tag <VALUE>:div</VALUE>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:id</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'quick-search'</STRING>},
                     <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'form'</STRING>,
                                <VALUE>:child</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:tag</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'input'</STRING>, <VALUE>:attributes</VALUE> <OPERATOR>=&gt;</OPERATOR> {<VALUE>:name</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'issues'</STRING>, <VALUE>:type</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'hidden'</STRING>, <VALUE>:value</VALUE> <OPERATOR>=&gt;</OPERATOR> <STRING>'1'</STRING>}}}
  <KEYWORD>end</KEYWORD>
<KEYWORD>end</KEYWORD>
