<COMMENT>// wtf - web server for TweetFreq</COMMENT>

<KEYWORD>package</KEYWORD> <FUNCTION>main</FUNCTION>

<KEYWORD>import</KEYWORD> (
        <STRING>"json"</STRING>
        <STRING>"time"</STRING>
        <STRING>"strconv"</STRING>
        <STRING>"http"</STRING>
        <STRING>"io/ioutil"</STRING>
        <STRING>"io"</STRING>
        <STRING>"fmt"</STRING>
        <STRING>"strings"</STRING>
        <STRING>"os"</STRING>
)


<KEYWORD>type</KEYWORD> <USER_FUNCTION>JTweets</USER_FUNCTION> <KEYWORD>struct</KEYWORD> {
        Results []<TYPE>Result</TYPE>
}

<KEYWORD>type</KEYWORD> <USER_FUNCTION>Result</USER_FUNCTION> <KEYWORD>struct</KEYWORD> {
        Profile_image_url <TYPE>string</TYPE>
        Created_at        <TYPE>string</TYPE>
        From_user         <TYPE>string</TYPE>
}

<KEYWORD>type</KEYWORD> <USER_FUNCTION>JUsers</USER_FUNCTION> <KEYWORD>struct</KEYWORD> {
        Users []<TYPE>User</TYPE>
}

<KEYWORD>type</KEYWORD> <USER_FUNCTION>User</USER_FUNCTION> <KEYWORD>struct</KEYWORD> {
        Screen_name <TYPE>string</TYPE>
}

<KEYWORD>const</KEYWORD> canvasWidth <OPERATOR>=</OPERATOR> <NUMERIC>1000</NUMERIC> <COMMENT>// 960</COMMENT>
<KEYWORD>const</KEYWORD> canvasHeight <OPERATOR>=</OPERATOR> <NUMERIC>750</NUMERIC> <COMMENT>// 750</COMMENT>
<KEYWORD>const</KEYWORD> lmargin <OPERATOR>=</OPERATOR> <NUMERIC>50</NUMERIC>
<KEYWORD>const</KEYWORD> tmargin <OPERATOR>=</OPERATOR> <NUMERIC>95</NUMERIC>
<KEYWORD>const</KEYWORD> rmargin <OPERATOR>=</OPERATOR> canvasWidth <OPERATOR>-</OPERATOR> lmargin
<KEYWORD>const</KEYWORD> tloc <OPERATOR>=</OPERATOR> <NUMERIC>40</NUMERIC>
<KEYWORD>const</KEYWORD> daybegin <OPERATOR>=</OPERATOR> <STRING>"T00:00:00Z"</STRING>
<KEYWORD>const</KEYWORD> dayend <OPERATOR>=</OPERATOR> <STRING>"T23:59:59Z"</STRING>
<KEYWORD>const</KEYWORD> secondsPerDay <OPERATOR>=</OPERATOR> <NUMERIC>24</NUMERIC> <OPERATOR>*</OPERATOR> <NUMERIC>60</NUMERIC> <OPERATOR>*</OPERATOR> <NUMERIC>60</NUMERIC>
<KEYWORD>const</KEYWORD> maxDays <OPERATOR>=</OPERATOR> <NUMERIC>4</NUMERIC>
<KEYWORD>const</KEYWORD> listURIfmt <OPERATOR>=</OPERATOR> <STRING>"http://%s@api.twitter.com/1/%s/%s/members.json"</STRING>
<KEYWORD>const</KEYWORD> queryURI <OPERATOR>=</OPERATOR> <STRING>"http://search.twitter.com/search.%s?q=%s+since:%s+until:%s&amp;rpp=%d"</STRING>
<KEYWORD>const</KEYWORD> defaultPic <OPERATOR>=</OPERATOR> <STRING>"http://static.twitter.com/images/default_profile_normal.png"</STRING>
<KEYWORD>const</KEYWORD> linefill <OPERATOR>=</OPERATOR> <STRING>"rgba(128,128,128,.20)"</STRING>
<KEYWORD>const</KEYWORD> markerfill <OPERATOR>=</OPERATOR> <STRING>"rgba(127,0,0,.40)"</STRING>
<KEYWORD>const</KEYWORD> textfill <OPERATOR>=</OPERATOR> <STRING>"rgb(127,127,127)"</STRING>
<KEYWORD>const</KEYWORD> canvasfill <OPERATOR>=</OPERATOR> <STRING>"rgb(255,255,255)"</STRING>
<KEYWORD>const</KEYWORD> fontname <OPERATOR>=</OPERATOR> <STRING>"Calibri,Lucida,sans-serif"</STRING>
<KEYWORD>const</KEYWORD> initfmt <OPERATOR>=</OPERATOR> <STRING>`&lt;html&gt;&lt;head&gt;&lt;title&gt;%s&lt;/title&gt;&lt;script type="application/javascript"&gt;</STRING>
<STRING>function draw() {</STRING>
<STRING>var canvas = document.getElementById("canvas");</STRING>
<STRING>if (canvas.getContext) {</STRING>
<STRING>var C = canvas.getContext("2d");var p2=Math.PI*2;</STRING>
<STRING>C.fillStyle="%s";C.fillRect(0,0,%d,%d);</STRING>
<STRING>C.font="32pt %s";C.textAlign="center";C.fillStyle="%s";C.fillText("%s",%d,%d);C.font="10pt %s";</STRING>
<STRING>`</STRING>
<KEYWORD>const</KEYWORD> legendfmt <OPERATOR>=</OPERATOR> <STRING>`C.beginPath();C.moveTo(%d,%d);C.lineTo(%d,%d);C.lineTo(%d,%d);C.closePath();C.fill();C.fillStyle="%s";C.fillText("%s",%d,%d);</STRING>
<STRING>`</STRING>
<KEYWORD>const</KEYWORD> endfmt <OPERATOR>=</OPERATOR> <STRING>`}}&lt;/script&gt;&lt;/head&gt;&lt;body onload="draw();"&gt;&lt;canvas id="canvas" width="%d" height="%d"&gt;&lt;/canvas&gt;&lt;/body&gt;&lt;/html&gt;</STRING>
<STRING>`</STRING>
<KEYWORD>const</KEYWORD> userfmt <OPERATOR>=</OPERATOR> <STRING>`</STRING>
<STRING>var im%d=new Image();im%d.onload=function doim%d(){C.drawImage(im%d,%d,%d,%d,%d);}</STRING>
<STRING>im%d.src="%s";</STRING>
<STRING>C.fillStyle="%s";C.fillText("%s [%d]",%d,%d);C.fillStyle="%s";C.fillRect(%d,%d,%d,%d);C.fillStyle="%s";</STRING>
<STRING>`</STRING>
<KEYWORD>const</KEYWORD> pubfmt <OPERATOR>=</OPERATOR> <STRING>`C.beginPath();C.arc(%d,%d,%d,0,p2,true);C.fill();</STRING>
<STRING>`</STRING>
<KEYWORD>const</KEYWORD> setfont <OPERATOR>=</OPERATOR> <STRING>`C.textAlign="left";C.font="16pt `</STRING> <OPERATOR>+</OPERATOR> fontname <OPERATOR>+</OPERATOR> <STRING>`";`</STRING>

<KEYWORD>var</KEYWORD> upass <OPERATOR>=</OPERATOR> <STRING>"username:password"</STRING>
<KEYWORD>var</KEYWORD> initbegin <OPERATOR>=</OPERATOR> <STRING>"2009-12-01"</STRING>
<KEYWORD>var</KEYWORD> initend <OPERATOR>=</OPERATOR> <STRING>"2009-12-01"</STRING>
<KEYWORD>var</KEYWORD> title <OPERATOR>=</OPERATOR> <STRING>"Twitter Update Frequency"</STRING>
<KEYWORD>var</KEYWORD> begindate <OPERATOR>=</OPERATOR> <STRING>"2009-12-01"</STRING>
<KEYWORD>var</KEYWORD> enddate <OPERATOR>=</OPERATOR> <STRING>"2009-12-01"</STRING>
<KEYWORD>var</KEYWORD> qformat <OPERATOR>=</OPERATOR> <STRING>"json"</STRING>
<KEYWORD>var</KEYWORD> tcount <OPERATOR>=</OPERATOR> <NUMERIC>50</NUMERIC>
<KEYWORD>var</KEYWORD> spacing <OPERATOR>=</OPERATOR> <NUMERIC>60</NUMERIC>
<KEYWORD>var</KEYWORD> picwidth <TYPE>int64</TYPE> <OPERATOR>=</OPERATOR> <NUMERIC>48</NUMERIC>
<KEYWORD>var</KEYWORD> markerwidth <TYPE>int64</TYPE> <OPERATOR>=</OPERATOR> <NUMERIC>16</NUMERIC>
<KEYWORD>var</KEYWORD> lineheight <TYPE>int64</TYPE> <OPERATOR>=</OPERATOR> <NUMERIC>24</NUMERIC>

<KEYWORD>var</KEYWORD> monthsOfYear <OPERATOR>=</OPERATOR> <KEYWORD>map</KEYWORD>[<TYPE>string</TYPE>]<TYPE>int</TYPE>{
        <STRING>"Jan"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>1</NUMERIC><OPERATOR>,</OPERATOR> <STRING>"Feb"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>2</NUMERIC><OPERATOR>,</OPERATOR> <STRING>"Mar"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>3</NUMERIC><OPERATOR>,</OPERATOR> <STRING>"Apr"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>4</NUMERIC><OPERATOR>,</OPERATOR> <STRING>"May"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>5</NUMERIC><OPERATOR>,</OPERATOR> <STRING>"Jun"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>6</NUMERIC><OPERATOR>,</OPERATOR>
        <STRING>"Jul"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>7</NUMERIC><OPERATOR>,</OPERATOR> <STRING>"Aug"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>8</NUMERIC><OPERATOR>,</OPERATOR> <STRING>"Sep"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>9</NUMERIC><OPERATOR>,</OPERATOR> <STRING>"Oct"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>10</NUMERIC><OPERATOR>,</OPERATOR> <STRING>"Nov"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>11</NUMERIC><OPERATOR>,</OPERATOR> <STRING>"Dec"</STRING><OPERATOR>:</OPERATOR> <NUMERIC>12</NUMERIC><OPERATOR>,</OPERATOR>
}

<KEYWORD>func</KEYWORD> <USER_FUNCTION>vmap</USER_FUNCTION>(value <TYPE>int64</TYPE><OPERATOR>,</OPERATOR> low1 <TYPE>int64</TYPE><OPERATOR>,</OPERATOR> high1 <TYPE>int64</TYPE><OPERATOR>,</OPERATOR> low2 <TYPE>int64</TYPE><OPERATOR>,</OPERATOR> high2 <TYPE>int64</TYPE>) <TYPE>int64</TYPE> {
        <KEYWORD>return</KEYWORD> low2 <OPERATOR>+</OPERATOR> (high2<OPERATOR>-</OPERATOR>low2)<OPERATOR>*</OPERATOR>(value<OPERATOR>-</OPERATOR>low1)<OPERATOR>/</OPERATOR>(high1<OPERATOR>-</OPERATOR>low1)
}

<KEYWORD>func</KEYWORD> <USER_FUNCTION>secbetween</USER_FUNCTION>(b <TYPE>string</TYPE><OPERATOR>,</OPERATOR> e <TYPE>string</TYPE>) <TYPE>int64</TYPE> { <KEYWORD>return</KEYWORD> <FUNCTION>isosec</FUNCTION>(e) <OPERATOR>-</OPERATOR> <FUNCTION>isosec</FUNCTION>(b) }

<KEYWORD>func</KEYWORD> <USER_FUNCTION>isosec</USER_FUNCTION>(s <TYPE>string</TYPE>) <TYPE>int64</TYPE> { <KEYWORD>return</KEYWORD> <FUNCTION>isototime</FUNCTION>(s)<OPERATOR>.</OPERATOR><OO>Seconds</OO>() }

<KEYWORD>func</KEYWORD> <USER_FUNCTION>isototime</USER_FUNCTION>(s <TYPE>string</TYPE>) <OPERATOR>*</OPERATOR><OBJ>time</OBJ><OPERATOR>.</OPERATOR><OO>Time</OO> {
        <KEYWORD>if</KEYWORD> <FUNCTION>len</FUNCTION>(s) <OPERATOR>!=</OPERATOR> <NUMERIC>20</NUMERIC> {
                <KEYWORD>return</KEYWORD> nil
        }
        <KEYWORD>var</KEYWORD> year<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi64</OO>(s[<NUMERIC>0</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>4</NUMERIC>])
        <KEYWORD>var</KEYWORD> month<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi</OO>(s[<NUMERIC>5</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>7</NUMERIC>])
        <KEYWORD>var</KEYWORD> day<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi</OO>(s[<NUMERIC>8</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>10</NUMERIC>])
        <KEYWORD>var</KEYWORD> hour<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi</OO>(s[<NUMERIC>11</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>13</NUMERIC>])
        <KEYWORD>var</KEYWORD> minute<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi</OO>(s[<NUMERIC>14</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>16</NUMERIC>])
        <KEYWORD>var</KEYWORD> second<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi</OO>(s[<NUMERIC>17</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>19</NUMERIC>])

        t <OPERATOR>:=</OPERATOR> <OBJ>time</OBJ><OPERATOR>.</OPERATOR><OO>Time</OO>{Year<OPERATOR>:</OPERATOR> year<OPERATOR>,</OPERATOR> Month<OPERATOR>:</OPERATOR> month<OPERATOR>,</OPERATOR> Day<OPERATOR>:</OPERATOR> day<OPERATOR>,</OPERATOR>
                Hour<OPERATOR>:</OPERATOR> hour<OPERATOR>,</OPERATOR> Minute<OPERATOR>:</OPERATOR> minute<OPERATOR>,</OPERATOR> Second<OPERATOR>:</OPERATOR> second<OPERATOR>,</OPERATOR>
                Zone<OPERATOR>:</OPERATOR> <STRING>"UTC"</STRING><OPERATOR>,</OPERATOR>
        }
        <KEYWORD>return</KEYWORD> <OPERATOR>&amp;</OPERATOR>t
}


<KEYWORD>func</KEYWORD> <USER_FUNCTION>rfc1123sec</USER_FUNCTION>(s <TYPE>string</TYPE>) <TYPE>int64</TYPE> { <KEYWORD>return</KEYWORD> <FUNCTION>rfc1123totime</FUNCTION>(s)<OPERATOR>.</OPERATOR><OO>Seconds</OO>() }

<KEYWORD>func</KEYWORD> <USER_FUNCTION>rfc1123totime</USER_FUNCTION>(s <TYPE>string</TYPE>) <OPERATOR>*</OPERATOR><OBJ>time</OBJ><OPERATOR>.</OPERATOR><OO>Time</OO> {
        <KEYWORD>if</KEYWORD> <FUNCTION>len</FUNCTION>(s) <OPERATOR>!=</OPERATOR> <NUMERIC>31</NUMERIC> {
                <KEYWORD>return</KEYWORD> nil
        }
        <KEYWORD>var</KEYWORD> year<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi64</OO>(s[<NUMERIC>12</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>16</NUMERIC>])
        <KEYWORD>var</KEYWORD> month<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> monthsOfYear[s[<NUMERIC>8</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>11</NUMERIC>]]
        <KEYWORD>var</KEYWORD> day<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi</OO>(s[<NUMERIC>5</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>7</NUMERIC>])
        <KEYWORD>var</KEYWORD> hour<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi</OO>(s[<NUMERIC>17</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>19</NUMERIC>])
        <KEYWORD>var</KEYWORD> minute<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi</OO>(s[<NUMERIC>20</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>22</NUMERIC>])
        <KEYWORD>var</KEYWORD> second<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi</OO>(s[<NUMERIC>23</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>25</NUMERIC>])

        t <OPERATOR>:=</OPERATOR> <OBJ>time</OBJ><OPERATOR>.</OPERATOR><OO>Time</OO>{Year<OPERATOR>:</OPERATOR> year<OPERATOR>,</OPERATOR> Month<OPERATOR>:</OPERATOR> month<OPERATOR>,</OPERATOR> Day<OPERATOR>:</OPERATOR> day<OPERATOR>,</OPERATOR>
                Hour<OPERATOR>:</OPERATOR> hour<OPERATOR>,</OPERATOR> Minute<OPERATOR>:</OPERATOR> minute<OPERATOR>,</OPERATOR> Second<OPERATOR>:</OPERATOR> second<OPERATOR>,</OPERATOR>
                Zone<OPERATOR>:</OPERATOR> <STRING>"UTC"</STRING><OPERATOR>,</OPERATOR>
        }
        <KEYWORD>return</KEYWORD> <OPERATOR>&amp;</OPERATOR>t
}


<KEYWORD>func</KEYWORD> <USER_FUNCTION>isodatestring</USER_FUNCTION>(t <OPERATOR>*</OPERATOR><OBJ>time</OBJ><OPERATOR>.</OPERATOR><OO>Time</OO>) <TYPE>string</TYPE> {
        <KEYWORD>return</KEYWORD> <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Sprintf</OO>(<STRING>"%04d-%02d-%02d"</STRING><OPERATOR>,</OPERATOR> <OBJ>t</OBJ><OPERATOR>.</OPERATOR><OO>Year</OO><OPERATOR>,</OPERATOR> <OBJ>t</OBJ><OPERATOR>.</OPERATOR><OO>Month</OO><OPERATOR>,</OPERATOR> <OBJ>t</OBJ><OPERATOR>.</OPERATOR><OO>Day</OO>)
}

<KEYWORD>func</KEYWORD> <USER_FUNCTION>initialcode</USER_FUNCTION>(c <OPERATOR>*</OPERATOR><OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Conn</OO><OPERATOR>,</OPERATOR> t <TYPE>string</TYPE><OPERATOR>,</OPERATOR> b <TYPE>string</TYPE><OPERATOR>,</OPERATOR> e <TYPE>string</TYPE>) {
        <OBJ>io</OBJ><OPERATOR>.</OPERATOR><OO>WriteString</OO>(c<OPERATOR>,</OPERATOR> <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Sprintf</OO>(initfmt<OPERATOR>,</OPERATOR> t<OPERATOR>,</OPERATOR> canvasfill<OPERATOR>,</OPERATOR> canvasWidth<OPERATOR>,</OPERATOR>
                canvasHeight<OPERATOR>,</OPERATOR> fontname<OPERATOR>,</OPERATOR> textfill<OPERATOR>,</OPERATOR> t<OPERATOR>,</OPERATOR> canvasWidth<OPERATOR>/</OPERATOR><NUMERIC>2</NUMERIC><OPERATOR>,</OPERATOR> tloc<OPERATOR>,</OPERATOR> fontname))
        <OBJ>io</OBJ><OPERATOR>.</OPERATOR><OO>WriteString</OO>(c<OPERATOR>,</OPERATOR> <FUNCTION>legend</FUNCTION>(b<OPERATOR>+</OPERATOR>daybegin<OPERATOR>,</OPERATOR> e<OPERATOR>+</OPERATOR>dayend<OPERATOR>,</OPERATOR> tmargin<OPERATOR>,</OPERATOR> <NUMERIC>10</NUMERIC><OPERATOR>,</OPERATOR> <NUMERIC>10</NUMERIC>))
}

<KEYWORD>func</KEYWORD> <USER_FUNCTION>legend</USER_FUNCTION>(b <TYPE>string</TYPE><OPERATOR>,</OPERATOR> e <TYPE>string</TYPE><OPERATOR>,</OPERATOR> y <TYPE>int</TYPE><OPERATOR>,</OPERATOR> w <TYPE>int</TYPE><OPERATOR>,</OPERATOR> h <TYPE>int</TYPE>) <TYPE>string</TYPE> {
        <KEYWORD>var</KEYWORD> x <TYPE>int64</TYPE>

        days <OPERATOR>:=</OPERATOR> <TYPE>int</TYPE>(<FUNCTION>secbetween</FUNCTION>(b<OPERATOR>,</OPERATOR> e)<OPERATOR>/</OPERATOR>secondsPerDay) <OPERATOR>+</OPERATOR> <NUMERIC>2</NUMERIC>
        <KEYWORD>var</KEYWORD> w2 <TYPE>int64</TYPE>
        <KEYWORD>var</KEYWORD> pl <OPERATOR>=</OPERATOR> picwidth <OPERATOR>+</OPERATOR> lmargin
        <KEYWORD>var</KEYWORD> ds <TYPE>string</TYPE>

        w2 <OPERATOR>=</OPERATOR> <TYPE>int64</TYPE>(w <OPERATOR>/</OPERATOR> <NUMERIC>2</NUMERIC>)
        yh <OPERATOR>:=</OPERATOR> y <OPERATOR>-</OPERATOR> h
        ib <OPERATOR>:=</OPERATOR> <FUNCTION>isosec</FUNCTION>(b)
        ie <OPERATOR>:=</OPERATOR> <FUNCTION>isosec</FUNCTION>(e)
        s <OPERATOR>:=</OPERATOR> <STRING>""</STRING>
        lx <OPERATOR>:=</OPERATOR> ib
        <KEYWORD>for</KEYWORD> i <OPERATOR>:=</OPERATOR> <NUMERIC>0</NUMERIC><OPERATOR>;</OPERATOR> i <OPERATOR>&lt;</OPERATOR> days<OPERATOR>;</OPERATOR> i<OPERATOR>++</OPERATOR> {
                x <OPERATOR>=</OPERATOR> <FUNCTION>vmap</FUNCTION>(lx<OPERATOR>,</OPERATOR> ib<OPERATOR>,</OPERATOR> ie<OPERATOR>,</OPERATOR> pl<OPERATOR>,</OPERATOR> rmargin)
                ds <OPERATOR>=</OPERATOR> <FUNCTION>isodatestring</FUNCTION>(<OBJ>time</OBJ><OPERATOR>.</OPERATOR><OO>SecondsToUTC</OO>(lx))
                s <OPERATOR>=</OPERATOR> s <OPERATOR>+</OPERATOR> <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Sprintf</OO>(legendfmt<OPERATOR>,</OPERATOR> x<OPERATOR>,</OPERATOR> y<OPERATOR>,</OPERATOR> x<OPERATOR>-</OPERATOR>w2<OPERATOR>,</OPERATOR> yh<OPERATOR>,</OPERATOR> x<OPERATOR>+</OPERATOR>w2<OPERATOR>,</OPERATOR> yh<OPERATOR>,</OPERATOR>
                        textfill<OPERATOR>,</OPERATOR> ds[<NUMERIC>0</NUMERIC><OPERATOR>:</OPERATOR><NUMERIC>10</NUMERIC>]<OPERATOR>,</OPERATOR> x<OPERATOR>,</OPERATOR> yh<OPERATOR>-</OPERATOR><NUMERIC>3</NUMERIC>)
                lx <OPERATOR>+=</OPERATOR> secondsPerDay
        }
        s <OPERATOR>+=</OPERATOR> setfont
        <KEYWORD>return</KEYWORD> s
}

<KEYWORD>func</KEYWORD> <USER_FUNCTION>readjson</USER_FUNCTION>(c <OPERATOR>*</OPERATOR><OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Conn</OO><OPERATOR>,</OPERATOR> r <OBJ>io</OBJ><OPERATOR>.</OPERATOR><OO>ReadCloser</OO><OPERATOR>,</OPERATOR> b <TYPE>string</TYPE><OPERATOR>,</OPERATOR> e <TYPE>string</TYPE><OPERATOR>,</OPERATOR> yv <TYPE>int</TYPE>) <TYPE>int</TYPE> {
        <KEYWORD>var</KEYWORD> twitter <TYPE>JTweets</TYPE>
        <KEYWORD>var</KEYWORD> data []<TYPE>byte</TYPE>
        <KEYWORD>var</KEYWORD> ntweets <TYPE>int</TYPE>
        data<OPERATOR>,</OPERATOR> err <OPERATOR>:=</OPERATOR> <OBJ>ioutil</OBJ><OPERATOR>.</OPERATOR><OO>ReadAll</OO>(r)

        b <OPERATOR>+=</OPERATOR> daybegin
        e <OPERATOR>+=</OPERATOR> dayend
        <KEYWORD>var</KEYWORD> y <OPERATOR>=</OPERATOR> <TYPE>int64</TYPE>(yv)

        <KEYWORD>if</KEYWORD> err <OPERATOR>==</OPERATOR> nil {
                ok<OPERATOR>,</OPERATOR> errtok <OPERATOR>:=</OPERATOR> <OBJ>json</OBJ><OPERATOR>.</OPERATOR><OO>Unmarshal</OO>(<TYPE>string</TYPE>(data)<OPERATOR>,</OPERATOR> <OPERATOR>&amp;</OPERATOR>twitter)
                <KEYWORD>if</KEYWORD> ok {
                        ntweets <OPERATOR>=</OPERATOR> <FUNCTION>len</FUNCTION>(<OBJ>twitter</OBJ><OPERATOR>.</OPERATOR><OO>Results</OO>)
                        <KEYWORD>if</KEYWORD> ntweets <OPERATOR>&gt;</OPERATOR> <NUMERIC>0</NUMERIC> {
                                <KEYWORD>var</KEYWORD> pl <OPERATOR>=</OPERATOR> picwidth <OPERATOR>+</OPERATOR> lmargin
                                <OBJ>io</OBJ><OPERATOR>.</OPERATOR><OO>WriteString</OO>(c<OPERATOR>,</OPERATOR> <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Sprintf</OO>(userfmt<OPERATOR>,</OPERATOR> y<OPERATOR>,</OPERATOR> y<OPERATOR>,</OPERATOR> y<OPERATOR>,</OPERATOR> y<OPERATOR>,</OPERATOR> lmargin<OPERATOR>,</OPERATOR> y<OPERATOR>,</OPERATOR>
                                        picwidth<OPERATOR>,</OPERATOR> picwidth<OPERATOR>,</OPERATOR> y<OPERATOR>,</OPERATOR> <OBJ>twitter</OBJ><OPERATOR>.</OPERATOR><OO>Results</OO>[<NUMERIC>0</NUMERIC>]<OPERATOR>.</OPERATOR><OO>Profile_image_url</OO><OPERATOR>,</OPERATOR> textfill<OPERATOR>,</OPERATOR>
                                        <OBJ>twitter</OBJ><OPERATOR>.</OPERATOR><OO>Results</OO>[<NUMERIC>0</NUMERIC>]<OPERATOR>.</OPERATOR><OO>From_user</OO><OPERATOR>,</OPERATOR> ntweets<OPERATOR>,</OPERATOR> pl<OPERATOR>+</OPERATOR><NUMERIC>5</NUMERIC><OPERATOR>,</OPERATOR> y<OPERATOR>+</OPERATOR>picwidth<OPERATOR>,</OPERATOR> linefill<OPERATOR>,</OPERATOR>
                                        pl<OPERATOR>,</OPERATOR> y<OPERATOR>,</OPERATOR> rmargin<OPERATOR>-</OPERATOR>pl<OPERATOR>,</OPERATOR> lineheight<OPERATOR>,</OPERATOR> markerfill))

                                <KEYWORD>for</KEYWORD> i <OPERATOR>:=</OPERATOR> <NUMERIC>0</NUMERIC><OPERATOR>;</OPERATOR> i <OPERATOR>&lt;</OPERATOR> ntweets<OPERATOR>;</OPERATOR> i<OPERATOR>++</OPERATOR> {
                                        <OBJ>io</OBJ><OPERATOR>.</OPERATOR><OO>WriteString</OO>(c<OPERATOR>,</OPERATOR> <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Sprintf</OO>(pubfmt<OPERATOR>,</OPERATOR>
                                                <FUNCTION>vmap</FUNCTION>(<FUNCTION>rfc1123sec</FUNCTION>(<OBJ>twitter</OBJ><OPERATOR>.</OPERATOR><OO>Results</OO>[i]<OPERATOR>.</OPERATOR><OO>Created_at</OO>)<OPERATOR>,</OPERATOR>
                                                        <FUNCTION>isosec</FUNCTION>(b)<OPERATOR>,</OPERATOR> <FUNCTION>isosec</FUNCTION>(e)<OPERATOR>,</OPERATOR> pl<OPERATOR>,</OPERATOR> rmargin)<OPERATOR>,</OPERATOR>
                                                y<OPERATOR>+</OPERATOR>(lineheight<OPERATOR>/</OPERATOR><NUMERIC>2</NUMERIC>)<OPERATOR>,</OPERATOR> markerwidth<OPERATOR>/</OPERATOR><NUMERIC>2</NUMERIC>))
                                }
                                <KEYWORD>return</KEYWORD> ntweets
                        }
                } <KEYWORD>else</KEYWORD> {
                        <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Printf</OO>(<STRING>"Unable to parse the JSON : [%v]<ESC>\n</ESC>"</STRING><OPERATOR>,</OPERATOR> errtok)
                }
        }
        <KEYWORD>return</KEYWORD> ntweets
}


<KEYWORD>func</KEYWORD> <USER_FUNCTION>finalcode</USER_FUNCTION>(c <OPERATOR>*</OPERATOR><OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Conn</OO>) {
        <OBJ>io</OBJ><OPERATOR>.</OPERATOR><OO>WriteString</OO>(c<OPERATOR>,</OPERATOR> <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Sprintf</OO>(endfmt<OPERATOR>,</OPERATOR> canvasWidth<OPERATOR>,</OPERATOR> canvasHeight))
}

<KEYWORD>func</KEYWORD> <USER_FUNCTION>tf</USER_FUNCTION>(c <OPERATOR>*</OPERATOR><OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Conn</OO><OPERATOR>,</OPERATOR> b <TYPE>string</TYPE><OPERATOR>,</OPERATOR> e <TYPE>string</TYPE><OPERATOR>,</OPERATOR> n <TYPE>int</TYPE><OPERATOR>,</OPERATOR> y <TYPE>int</TYPE><OPERATOR>,</OPERATOR> s <TYPE>string</TYPE>) <TYPE>int</TYPE> {

        <KEYWORD>var</KEYWORD> qs <TYPE>string</TYPE>
        <KEYWORD>var</KEYWORD> ntf <TYPE>int</TYPE> <OPERATOR>=</OPERATOR> <NUMERIC>0</NUMERIC>

        <KEYWORD>if</KEYWORD> <FUNCTION>len</FUNCTION>(s) <OPERATOR>&lt;</OPERATOR> <NUMERIC>1</NUMERIC> {
                <KEYWORD>return</KEYWORD> ntf
        }

        <KEYWORD>if</KEYWORD> s[<NUMERIC>0</NUMERIC>] <OPERATOR>==</OPERATOR> <CHARACTER>'#'</CHARACTER> <OPERATOR>&amp;&amp;</OPERATOR> <FUNCTION>len</FUNCTION>(s) <OPERATOR>&gt;</OPERATOR> <NUMERIC>1</NUMERIC> {
                qs <OPERATOR>=</OPERATOR> s
        } <KEYWORD>else</KEYWORD> {
                qs <OPERATOR>=</OPERATOR> <STRING>"from:"</STRING> <OPERATOR>+</OPERATOR> s
        }
        r<OPERATOR>,</OPERATOR> _<OPERATOR>,</OPERATOR> err <OPERATOR>:=</OPERATOR> <OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Get</OO>(<OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Sprintf</OO>(queryURI<OPERATOR>,</OPERATOR>
                qformat<OPERATOR>,</OPERATOR> <OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>URLEscape</OO>(qs)<OPERATOR>,</OPERATOR> b<OPERATOR>,</OPERATOR> e<OPERATOR>,</OPERATOR> n))
        <KEYWORD>if</KEYWORD> err <OPERATOR>==</OPERATOR> nil {
                <KEYWORD>if</KEYWORD> <OBJ>r</OBJ><OPERATOR>.</OPERATOR><OO>StatusCode</OO> <OPERATOR>==</OPERATOR> <OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>StatusOK</OO> {
                        ntf <OPERATOR>=</OPERATOR> <FUNCTION>readjson</FUNCTION>(c<OPERATOR>,</OPERATOR> <OBJ>r</OBJ><OPERATOR>.</OPERATOR><OO>Body</OO><OPERATOR>,</OPERATOR> b<OPERATOR>,</OPERATOR> e<OPERATOR>,</OPERATOR> y)
                } <KEYWORD>else</KEYWORD> {
                        <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Printf</OO>(<STRING>"Twitter is unable to search for %s (%s)<ESC>\n</ESC>"</STRING><OPERATOR>,</OPERATOR> s<OPERATOR>,</OPERATOR> <OBJ>r</OBJ><OPERATOR>.</OPERATOR><OO>Status</OO>)
                }
                <OBJ>r</OBJ><OPERATOR>.</OPERATOR><OO>Body</OO><OPERATOR>.</OPERATOR><OO>Close</OO>()
        } <KEYWORD>else</KEYWORD> {
                <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Printf</OO>(<STRING>"%v<ESC>\n</ESC>"</STRING><OPERATOR>,</OPERATOR> err)
        }
        <KEYWORD>return</KEYWORD> ntf
}

<KEYWORD>func</KEYWORD> <USER_FUNCTION>initparams</USER_FUNCTION>() {
        tcount <OPERATOR>=</OPERATOR> <NUMERIC>50</NUMERIC>
        lineheight <OPERATOR>=</OPERATOR> <NUMERIC>24</NUMERIC>
        picwidth <OPERATOR>=</OPERATOR> <NUMERIC>48</NUMERIC>
        spacing <OPERATOR>=</OPERATOR> <NUMERIC>60</NUMERIC>
        markerwidth <OPERATOR>=</OPERATOR> <NUMERIC>16</NUMERIC>
        title <OPERATOR>=</OPERATOR> <STRING>"Twitter Update Frequency"</STRING>
        begindate <OPERATOR>=</OPERATOR> initbegin
        enddate <OPERATOR>=</OPERATOR> initend
}

<KEYWORD>func</KEYWORD> <USER_FUNCTION>tfquery</USER_FUNCTION>(req <OPERATOR>*</OPERATOR><OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Request</OO>) {
        query <OPERATOR>:=</OPERATOR> <OBJ>strings</OBJ><OPERATOR>.</OPERATOR><OO>Split</OO>(<OBJ>req</OBJ><OPERATOR>.</OPERATOR><OO>URL</OO><OPERATOR>.</OPERATOR><OO>RawQuery</OO><OPERATOR>,</OPERATOR> <STRING>"&amp;"</STRING><OPERATOR>,</OPERATOR> <NUMERIC>0</NUMERIC>)

        <COMMENT>//fmt.Printf("path : %v\n", path)</COMMENT>
        <COMMENT>//fmt.Printf("query: %v\n", query)</COMMENT>

        <KEYWORD>for</KEYWORD> i <OPERATOR>:=</OPERATOR> <NUMERIC>0</NUMERIC><OPERATOR>;</OPERATOR> i <OPERATOR>&lt;</OPERATOR> <FUNCTION>len</FUNCTION>(query)<OPERATOR>;</OPERATOR> i<OPERATOR>++</OPERATOR> {
                nv <OPERATOR>:=</OPERATOR> <OBJ>strings</OBJ><OPERATOR>.</OPERATOR><OO>Split</OO>(query[i]<OPERATOR>,</OPERATOR> <STRING>"="</STRING><OPERATOR>,</OPERATOR> <NUMERIC>2</NUMERIC>)
                <KEYWORD>if</KEYWORD> <FUNCTION>len</FUNCTION>(nv) <OPERATOR>==</OPERATOR> <NUMERIC>2</NUMERIC> {
                        <KEYWORD>switch</KEYWORD> nv[<NUMERIC>0</NUMERIC>] {
                        <KEYWORD>case</KEYWORD> <STRING>"b"</STRING><OPERATOR>:</OPERATOR>
                                begindate <OPERATOR>=</OPERATOR> nv[<NUMERIC>1</NUMERIC>]
                        <KEYWORD>case</KEYWORD> <STRING>"e"</STRING><OPERATOR>:</OPERATOR>
                                enddate <OPERATOR>=</OPERATOR> nv[<NUMERIC>1</NUMERIC>]
                        <KEYWORD>case</KEYWORD> <STRING>"t"</STRING><OPERATOR>:</OPERATOR>
                                title<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>URLUnescape</OO>(nv[<NUMERIC>1</NUMERIC>])
                        <KEYWORD>case</KEYWORD> <STRING>"c"</STRING><OPERATOR>:</OPERATOR>
                                tcount<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi</OO>(nv[<NUMERIC>1</NUMERIC>])
                        <KEYWORD>case</KEYWORD> <STRING>"l"</STRING><OPERATOR>:</OPERATOR>
                                lineheight<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi64</OO>(nv[<NUMERIC>1</NUMERIC>])
                        <KEYWORD>case</KEYWORD> <STRING>"p"</STRING><OPERATOR>:</OPERATOR>
                                picwidth<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi64</OO>(nv[<NUMERIC>1</NUMERIC>])
                        <KEYWORD>case</KEYWORD> <STRING>"s"</STRING><OPERATOR>:</OPERATOR>
                                spacing<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi</OO>(nv[<NUMERIC>1</NUMERIC>])
                        <KEYWORD>case</KEYWORD> <STRING>"m"</STRING><OPERATOR>:</OPERATOR>
                                markerwidth<OPERATOR>,</OPERATOR> _ <OPERATOR>=</OPERATOR> <OBJ>strconv</OBJ><OPERATOR>.</OPERATOR><OO>Atoi64</OO>(nv[<NUMERIC>1</NUMERIC>])
                        }
                }
                <COMMENT>//fmt.Printf("nv: %v\n", nv)</COMMENT>
                <COMMENT>//showparams("Using  ")</COMMENT>
        }
}


<KEYWORD>func</KEYWORD> <USER_FUNCTION>tfusers</USER_FUNCTION>(c <OPERATOR>*</OPERATOR><OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Conn</OO><OPERATOR>,</OPERATOR> req <OPERATOR>*</OPERATOR><OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Request</OO>) {

        <FUNCTION>initparams</FUNCTION>()
        <FUNCTION>tfquery</FUNCTION>(req)
        path <OPERATOR>:=</OPERATOR> <OBJ>strings</OBJ><OPERATOR>.</OPERATOR><OO>Split</OO>(<OBJ>req</OBJ><OPERATOR>.</OPERATOR><OO>URL</OO><OPERATOR>.</OPERATOR><OO>Path</OO><OPERATOR>,</OPERATOR> <STRING>"/"</STRING><OPERATOR>,</OPERATOR> <NUMERIC>0</NUMERIC>)
        <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Printf</OO>(<STRING>"path: %v<ESC>\n</ESC>"</STRING><OPERATOR>,</OPERATOR> path)

        <KEYWORD>if</KEYWORD> <FUNCTION>len</FUNCTION>(path) <OPERATOR>&gt;</OPERATOR> <NUMERIC>1</NUMERIC> {
                users <OPERATOR>:=</OPERATOR> <OBJ>strings</OBJ><OPERATOR>.</OPERATOR><OO>Split</OO>(path[<NUMERIC>2</NUMERIC>]<OPERATOR>,</OPERATOR> <STRING>","</STRING><OPERATOR>,</OPERATOR> <NUMERIC>0</NUMERIC>)
                <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Printf</OO>(<STRING>"%s %v<ESC>\n</ESC>"</STRING><OPERATOR>,</OPERATOR> <OBJ>c</OBJ><OPERATOR>.</OPERATOR><OO>RemoteAddr</OO><OPERATOR>,</OPERATOR> users)
                <FUNCTION>tfdisplay</FUNCTION>(c<OPERATOR>,</OPERATOR> users)
        } <KEYWORD>else</KEYWORD> {
                <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Printf</OO>(<STRING>"bogus path: %v<ESC>\n</ESC>"</STRING><OPERATOR>,</OPERATOR> path)
        }

}

<KEYWORD>func</KEYWORD> <USER_FUNCTION>tflist</USER_FUNCTION>(c <OPERATOR>*</OPERATOR><OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Conn</OO><OPERATOR>,</OPERATOR> req <OPERATOR>*</OPERATOR><OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Request</OO>) {
        <KEYWORD>var</KEYWORD> twitter <TYPE>JUsers</TYPE>

        <FUNCTION>initparams</FUNCTION>()
        <FUNCTION>tfquery</FUNCTION>(req)
        path <OPERATOR>:=</OPERATOR> <OBJ>strings</OBJ><OPERATOR>.</OPERATOR><OO>Split</OO>(<OBJ>req</OBJ><OPERATOR>.</OPERATOR><OO>URL</OO><OPERATOR>.</OPERATOR><OO>Path</OO><OPERATOR>,</OPERATOR> <STRING>"/"</STRING><OPERATOR>,</OPERATOR> <NUMERIC>0</NUMERIC>)
        <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Printf</OO>(<STRING>"path: %v<ESC>\n</ESC>"</STRING><OPERATOR>,</OPERATOR> path)
        <KEYWORD>if</KEYWORD> <FUNCTION>len</FUNCTION>(path) <OPERATOR>&gt;</OPERATOR> <NUMERIC>3</NUMERIC> {
                r<OPERATOR>,</OPERATOR> _<OPERATOR>,</OPERATOR> err <OPERATOR>:=</OPERATOR> <OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Get</OO>(<OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Sprintf</OO>(listURIfmt<OPERATOR>,</OPERATOR> upass<OPERATOR>,</OPERATOR> path[<NUMERIC>2</NUMERIC>]<OPERATOR>,</OPERATOR> path[<NUMERIC>3</NUMERIC>]))
                <KEYWORD>if</KEYWORD> err <OPERATOR>==</OPERATOR> nil {
                        data<OPERATOR>,</OPERATOR> _ <OPERATOR>:=</OPERATOR> <OBJ>ioutil</OBJ><OPERATOR>.</OPERATOR><OO>ReadAll</OO>(<OBJ>r</OBJ><OPERATOR>.</OPERATOR><OO>Body</OO>)
                        ok<OPERATOR>,</OPERATOR> _ <OPERATOR>:=</OPERATOR> <OBJ>json</OBJ><OPERATOR>.</OPERATOR><OO>Unmarshal</OO>(<TYPE>string</TYPE>(data)<OPERATOR>,</OPERATOR> <OPERATOR>&amp;</OPERATOR>twitter)
                        <KEYWORD>if</KEYWORD> ok {
                                nu <OPERATOR>:=</OPERATOR> <FUNCTION>len</FUNCTION>(<OBJ>twitter</OBJ><OPERATOR>.</OPERATOR><OO>Users</OO>)
                                users <OPERATOR>:=</OPERATOR> <FUNCTION>make</FUNCTION>([]<TYPE>string</TYPE><OPERATOR>,</OPERATOR> nu)
                                <KEYWORD>for</KEYWORD> i <OPERATOR>:=</OPERATOR> <NUMERIC>0</NUMERIC><OPERATOR>;</OPERATOR> i <OPERATOR>&lt;</OPERATOR> nu<OPERATOR>;</OPERATOR> i<OPERATOR>++</OPERATOR> {
                                        users[i] <OPERATOR>=</OPERATOR> <OBJ>twitter</OBJ><OPERATOR>.</OPERATOR><OO>Users</OO>[i]<OPERATOR>.</OPERATOR><OO>Screen_name</OO>
                                }
                                <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Printf</OO>(<STRING>"members: %v<ESC>\n</ESC>"</STRING><OPERATOR>,</OPERATOR> users)
                                <FUNCTION>tfdisplay</FUNCTION>(c<OPERATOR>,</OPERATOR> users)
                        }
                }
        }
}


<KEYWORD>func</KEYWORD> <USER_FUNCTION>tfdisplay</USER_FUNCTION>(c <OPERATOR>*</OPERATOR><OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Conn</OO><OPERATOR>,</OPERATOR> users []<TYPE>string</TYPE>) {
        <FUNCTION>initialcode</FUNCTION>(c<OPERATOR>,</OPERATOR> title<OPERATOR>,</OPERATOR> begindate<OPERATOR>,</OPERATOR> enddate)
        <KEYWORD>for</KEYWORD> i<OPERATOR>,</OPERATOR> y <OPERATOR>:=</OPERATOR> <NUMERIC>0</NUMERIC><OPERATOR>,</OPERATOR> tmargin<OPERATOR>;</OPERATOR> i <OPERATOR>&lt;</OPERATOR> <FUNCTION>len</FUNCTION>(users)<OPERATOR>;</OPERATOR> i<OPERATOR>++</OPERATOR> {
                <KEYWORD>if</KEYWORD> <FUNCTION>tf</FUNCTION>(c<OPERATOR>,</OPERATOR> begindate<OPERATOR>,</OPERATOR> enddate<OPERATOR>,</OPERATOR> tcount<OPERATOR>,</OPERATOR> y<OPERATOR>,</OPERATOR> users[i]) <OPERATOR>&gt;</OPERATOR> <NUMERIC>0</NUMERIC> {
                        y <OPERATOR>+=</OPERATOR> spacing
                }
        }
        <FUNCTION>finalcode</FUNCTION>(c)
}

<KEYWORD>func</KEYWORD> <USER_FUNCTION>showparams</USER_FUNCTION>(why <TYPE>string</TYPE>) {
        <OBJ>fmt</OBJ><OPERATOR>.</OPERATOR><OO>Printf</OO>(<STRING>"%s: t=<ESC>\"</ESC>%s<ESC>\"</ESC> b=%s e=%s c=%d l=%d p=%d s=%d m=%d f=%s<ESC>\n</ESC>"</STRING><OPERATOR>,</OPERATOR>
                why<OPERATOR>,</OPERATOR> title<OPERATOR>,</OPERATOR> begindate<OPERATOR>,</OPERATOR> enddate<OPERATOR>,</OPERATOR> tcount<OPERATOR>,</OPERATOR>
                lineheight<OPERATOR>,</OPERATOR> picwidth<OPERATOR>,</OPERATOR> spacing<OPERATOR>,</OPERATOR> markerwidth<OPERATOR>,</OPERATOR> qformat)
}

<KEYWORD>func</KEYWORD> <USER_FUNCTION>main</USER_FUNCTION>() {
  <KEYWORD>if</KEYWORD> <FUNCTION>len</FUNCTION>(<OBJ>os</OBJ><OPERATOR>.</OPERATOR><OO>Args</OO>) <OPERATOR>&gt;</OPERATOR> <NUMERIC>1</NUMERIC> {
    upass <OPERATOR>=</OPERATOR> <OBJ>os</OBJ><OPERATOR>.</OPERATOR><OO>Args</OO>[<NUMERIC>1</NUMERIC>]
  }
        t <OPERATOR>:=</OPERATOR> <OBJ>time</OBJ><OPERATOR>.</OPERATOR><OO>UTC</OO>()
        initend <OPERATOR>=</OPERATOR> <FUNCTION>isodatestring</FUNCTION>(t)
        initbegin <OPERATOR>=</OPERATOR> <FUNCTION>isodatestring</FUNCTION>(<OBJ>time</OBJ><OPERATOR>.</OPERATOR><OO>SecondsToUTC</OO>(<OBJ>t</OBJ><OPERATOR>.</OPERATOR><OO>Seconds</OO>() <OPERATOR>-</OPERATOR>
                (secondsPerDay <OPERATOR>*</OPERATOR> maxDays)))
        <FUNCTION>showparams</FUNCTION>(<STRING>"init"</STRING>)
        <OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Handle</OO>(<STRING>"/users/"</STRING><OPERATOR>,</OPERATOR> <OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>HandlerFunc</OO>(<FUNCTION>tfusers</FUNCTION>))
        <OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>Handle</OO>(<STRING>"/list/"</STRING><OPERATOR>,</OPERATOR> <OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>HandlerFunc</OO>(<FUNCTION>tflist</FUNCTION>))
        err <OPERATOR>:=</OPERATOR> <OBJ>http</OBJ><OPERATOR>.</OPERATOR><OO>ListenAndServe</OO>(<STRING>":1958"</STRING><OPERATOR>,</OPERATOR> nil)
        <KEYWORD>if</KEYWORD> err <OPERATOR>!=</OPERATOR> nil {
                <FUNCTION>panic</FUNCTION>(<STRING>"ListenAndServe: "</STRING><OPERATOR>,</OPERATOR> <OBJ>err</OBJ><OPERATOR>.</OPERATOR><OO>String</OO>())
        }
}